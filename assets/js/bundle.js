/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./_webpack/main.js":
/*!**************************!*\
  !*** ./_webpack/main.js ***!
  \**************************/
/***/ ((__unused_webpack_module, __unused_webpack___webpack_exports__, __webpack_require__) => {

"use strict";
eval("/* harmony import */ var isotope_layout__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! isotope-layout */ \"./node_modules/isotope-layout/js/isotope.js\");\n/* harmony import */ var isotope_layout__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(isotope_layout__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! jquery */ \"./node_modules/jquery/dist/jquery.js\");\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var jquery_bez__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! jquery-bez */ \"./node_modules/jquery-bez/lib/jquery.bez.js\");\n/* harmony import */ var jquery_bez__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(jquery_bez__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var jquery_bridget__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! jquery-bridget */ \"./node_modules/jquery-bridget/jquery-bridget.js\");\n/* harmony import */ var jquery_bridget__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(jquery_bridget__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var overlayscrollbars__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! overlayscrollbars */ \"./node_modules/overlayscrollbars/overlayscrollbars.mjs\");\n/* harmony import */ var _main_scss__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./main.scss */ \"./_webpack/main.scss\");\n\n\n\n\n\n\n\n// Make Isotope a jQuery plugin\njquery_bridget__WEBPACK_IMPORTED_MODULE_3___default()(\"isotope\", (isotope_layout__WEBPACK_IMPORTED_MODULE_0___default()), (jquery__WEBPACK_IMPORTED_MODULE_1___default()));\n\n// Timers\nvar resizeTimerIsotope;\nvar resizeTimerModal;\nvar toggleTimerTheme;\n\n// Custom events.\nvar eventToggleTheme = new Event(\"toggle-theme\");\nvar eventToggleTarget = new Event(\"toggle-target\");\nvar eventModalClose = new Event(\"modal-close\");\n\n// Hashmaps for storing the OverlayScrollbars instances and related values.\nvar scrollbar = new Map();\nvar scrollY = new Map();\n\n// Initial configuration for OverlayScrollbars.\nvar configOverlayScrollbars = {\n  paddingAbsolute: false,\n  showNativeOverlaidScrollbars: false,\n  overflow: {\n    x: \"hidden\",\n    y: \"scroll\"\n  },\n  scrollbars: {\n    theme: localStorage.theme === \"dark\" ? \"os-theme-light\" : \"os-theme-dark\",\n    autoHide: \"leave\",\n    autoHideDelay: 500,\n    autoHideEasing: \"ease\",\n    clickScrolling: true,\n    dragScrolling: true,\n    touchSupport: true,\n    snapHandle: true\n  }\n};\n\n// Ease transitions\nvar $easeInOut = jquery__WEBPACK_IMPORTED_MODULE_1___default().bez([0.4, 0, 0.2, 1]);\n\n// Initialize Isotope grid\nvar $grid = jquery__WEBPACK_IMPORTED_MODULE_1___default()(\"[data-isotope-container]\").isotope({\n  transitionDuration: 400,\n  resize: false,\n  itemSelector: \"[data-isotope-item]\",\n  layoutMode: \"fitRows\",\n  percentPosition: true,\n  fitRows: {\n    isFitWidth: true,\n    columnWidth: \"[data-isotope-item]\",\n    gutter: 12\n  }\n});\nvar $items = $grid.find(\"[data-isotope-item]\");\n\n/**\r\n * Sets the height of the modal element based on the maximum height of the tabpanels and sidenav.\r\n *\r\n * @param {jQuery} $modal - The modal element.\r\n */\nfunction setModalElementHeight($modal) {\n  var maxHeight = 0;\n  var $tabpanelContainer = $modal.find(\"[role='tabpanel-container']\");\n  var $tabpanel = $modal.find(\"[role='tabpanel']\");\n  var $sidenav = $modal.find(\"[role='sidenav-tablist']\");\n  // Find the maximum height of the tabpanels and the sidenav.\n  $tabpanel.each(function () {\n    jquery__WEBPACK_IMPORTED_MODULE_1___default()(this).css({\n      visibility: \"hidden !important\",\n      display: \"block !important\"\n    });\n    if (jquery__WEBPACK_IMPORTED_MODULE_1___default()(this).height() > maxHeight) {\n      maxHeight = jquery__WEBPACK_IMPORTED_MODULE_1___default()(this).height();\n    }\n    jquery__WEBPACK_IMPORTED_MODULE_1___default()(this).css({\n      visibility: \"\",\n      display: \"\"\n    });\n  });\n  var sidenavHeight = parseInt($sidenav.attr(\"data-expanded-height\"));\n  if (jquery__WEBPACK_IMPORTED_MODULE_1___default()(window).width() < 640) {\n    sidenavHeight += 52;\n  }\n  if (sidenavHeight > maxHeight) {\n    maxHeight = sidenavHeight;\n  }\n  // Limit the maximum height.\n  maxHeight = Math.min(maxHeight, jquery__WEBPACK_IMPORTED_MODULE_1___default()(window).height() - 127);\n  // Set the height of the tabpanel container and the sidenav.\n  $tabpanelContainer.height(maxHeight);\n  $sidenav.height(jquery__WEBPACK_IMPORTED_MODULE_1___default()(window).width() < 640 ? maxHeight - 52 : maxHeight);\n}\n\n/**\r\n * Initializes the DOMContentLoaded event listener.\r\n */\njquery__WEBPACK_IMPORTED_MODULE_1___default()(function () {\n  // Initialize OverlayScrollbars.\n  scrollbar.set(\"body\", (0,overlayscrollbars__WEBPACK_IMPORTED_MODULE_5__.OverlayScrollbars)(document.querySelector(\"body\"), configOverlayScrollbars));\n  jquery__WEBPACK_IMPORTED_MODULE_1___default()(\"[role='modal']\").find(\"[data-overlayscrollbars-initialize]\").each(function () {\n    scrollbar.set(jquery__WEBPACK_IMPORTED_MODULE_1___default()(this).prop(\"id\"), (0,overlayscrollbars__WEBPACK_IMPORTED_MODULE_5__.OverlayScrollbars)(this, configOverlayScrollbars));\n  });\n  if (typeof $grid !== \"undefined\" && typeof $items !== \"undefined\") {\n    /**\r\n     * Event handler for filtering skills in the Isotope grid.\r\n     * Applies the checked filter to the grid and updates the UI elements.\r\n     * Temporarily sets the data-arrange-completed attribute to false to prevent 'jumping' animations.\r\n     */\n    jquery__WEBPACK_IMPORTED_MODULE_1___default()(\"ul[role='radiogroup']\").on(\"click\", \"li[role='radio'][aria-label^='filter']\", function () {\n      // Get the filter value from the clicked element.\n      var filterValue = jquery__WEBPACK_IMPORTED_MODULE_1___default()(this).attr(\"data-filter\");\n\n      // Set the data-arrange-completed attribute to false to prevent 'jumping' animations.\n      $items.attr(\"data-arrange-completed\", false);\n\n      // Filter the grid while applying a transition\n      $grid.isotope({\n        filter: filterValue\n      });\n      jquery__WEBPACK_IMPORTED_MODULE_1___default()(this).siblings().attr(\"aria-checked\", false);\n      jquery__WEBPACK_IMPORTED_MODULE_1___default()(this).attr(\"aria-checked\", true);\n\n      // Set the data-arrange-completed attribute to true after the transition is complete.\n      clearTimeout(resizeTimerIsotope);\n      resizeTimerIsotope = setTimeout(function () {\n        $items.attr(\"data-arrange-completed\", true);\n      }, jquery__WEBPACK_IMPORTED_MODULE_1___default()(\"[data-isotope-container]\").data(\"isotope\").options[\"transitionDuration\"] + 50);\n    });\n\n    /**\r\n     * Event handler for window resize event.\r\n     * Temporarily removes the transition duration, triggers the layout of the grid, and then restores the transition duration.\r\n     */\n    jquery__WEBPACK_IMPORTED_MODULE_1___default()(window).on(\"resize\", function () {\n      $grid.isotope({\n        transitionDuration: 0\n      });\n      $grid.isotope(\"layout\");\n      $grid.isotope({\n        transitionDuration: 400\n      });\n    });\n  }\n\n  /**\r\n   * Event handler for the click event on elements with the role \"switch\".\r\n   * Triggers the event specified by the data-trigger-event attribute.\r\n   *\r\n   * @param {Event} e - The click event object.\r\n   */\n  jquery__WEBPACK_IMPORTED_MODULE_1___default()(\"[role='switch'][data-trigger-event]\").on(\"click keydown\", function (e) {\n    if (e.type === \"click\" || e.key === \"Enter\" || e.which === 13) {\n      var triggerEvent = jquery__WEBPACK_IMPORTED_MODULE_1___default()(this).attr(\"data-trigger-event\");\n      jquery__WEBPACK_IMPORTED_MODULE_1___default()(this).trigger(triggerEvent);\n    }\n  });\n\n  /**\r\n   * Toggles the theme between light and dark mode.\r\n   * Changes the theme in localStorage, updates the UI elements, and applies the new theme to the scrollbar.\r\n   * Disables transitions to ensure instant theme change, then enables transitions after the theme change.\r\n   * If the window width is less than 550px, triggers a click event on the navbar toggle to close the navbar.\r\n   */\n  jquery__WEBPACK_IMPORTED_MODULE_1___default()(\"[role='switch']\").on(\"toggle-theme\", function () {\n    // Disables transitions to ensure instant theme change.\n    jquery__WEBPACK_IMPORTED_MODULE_1___default()(\"html\").addClass(\"no-transition\");\n\n    // Changes the theme in localStorage.\n    var themeIsDark = localStorage.theme === \"dark\";\n    var scrollbarTheme;\n    if (themeIsDark) {\n      jquery__WEBPACK_IMPORTED_MODULE_1___default()(\"html\").removeClass(\"dark\");\n      localStorage.theme = \"light\";\n      scrollbarTheme = \"os-theme-dark\";\n    } else {\n      jquery__WEBPACK_IMPORTED_MODULE_1___default()(\"html\").addClass(\"dark\");\n      localStorage.theme = \"dark\";\n      scrollbarTheme = \"os-theme-light\";\n    }\n\n    // Updates the UI elements.\n    jquery__WEBPACK_IMPORTED_MODULE_1___default()(this).attr(\"aria-checked\", !themeIsDark);\n\n    // Changes the scrollbar theme.\n    scrollbar.forEach(function (instance, id) {\n      instance.options({\n        scrollbars: {\n          theme: scrollbarTheme\n        }\n      });\n    });\n\n    // Enables transitions after the theme change.\n    setTimeout(function () {\n      jquery__WEBPACK_IMPORTED_MODULE_1___default()(\"html\").removeClass(\"no-transition\");\n      if (window.innerWidth < 550) {\n        jquery__WEBPACK_IMPORTED_MODULE_1___default()(\"#navbar-toggle\").trigger(\"click\");\n      }\n    }, 200);\n  });\n\n  /**\r\n   * Toggles the target element based on the state of the switch.\r\n   * If the switch is checked, shows the target element, otherwise hides it.\r\n   */\n  jquery__WEBPACK_IMPORTED_MODULE_1___default()(\"[role='switch']\").on(\"toggle-target\", function () {\n    var targetId = \"#\" + jquery__WEBPACK_IMPORTED_MODULE_1___default()(this).attr(\"aria-controls\");\n    var target = jquery__WEBPACK_IMPORTED_MODULE_1___default()(targetId);\n    jquery__WEBPACK_IMPORTED_MODULE_1___default()(this).attr(\"aria-checked\", jquery__WEBPACK_IMPORTED_MODULE_1___default()(this).attr(\"aria-checked\") !== \"true\");\n    jquery__WEBPACK_IMPORTED_MODULE_1___default()(this).attr(\"aria-checked\") === \"true\" ? target.show() : target.hide();\n  });\n\n  /**\r\n   * Toggles the aria-expanded attribute of the navbar header based on the state of the navbar toggle.\r\n   * If the navbar toggle is expanded, sets the aria-expanded attribute to \"true\", otherwise sets it to \"false\".\r\n   */\n  jquery__WEBPACK_IMPORTED_MODULE_1___default()(\"[role='switch'][aria-label='toggle navigation'][aria-controls]\").on(\"click\", function () {\n    var targetId = \"#\" + jquery__WEBPACK_IMPORTED_MODULE_1___default()(this).attr(\"aria-controls\");\n    var isExpanded = jquery__WEBPACK_IMPORTED_MODULE_1___default()(this).attr(\"aria-expanded\") === \"true\";\n    jquery__WEBPACK_IMPORTED_MODULE_1___default()(this).attr(\"aria-expanded\", !isExpanded);\n    jquery__WEBPACK_IMPORTED_MODULE_1___default()(this).closest(\"header\").attr(\"aria-expanded\", !isExpanded);\n    jquery__WEBPACK_IMPORTED_MODULE_1___default()(targetId).toggle(400, $easeInOut);\n  });\n\n  /**\r\n   * Handles the click event on elements with the role \"tab-tabs\" and attribute \"aria-controls\".\r\n   * Updates the active tab content and navigation state based on the clicked element.\r\n   */\n  jquery__WEBPACK_IMPORTED_MODULE_1___default()(\"[role='sidenav-toggle'][aria-controls]\").on(\"click\", function () {\n    var targetId = \"#\" + jquery__WEBPACK_IMPORTED_MODULE_1___default()(this).attr(\"aria-controls\");\n    var isExpanded = jquery__WEBPACK_IMPORTED_MODULE_1___default()(this).attr(\"aria-expanded\") === \"true\";\n    jquery__WEBPACK_IMPORTED_MODULE_1___default()(targetId).fadeToggle(400, $easeInOut);\n    jquery__WEBPACK_IMPORTED_MODULE_1___default()(this).attr(\"aria-expanded\", !isExpanded);\n    jquery__WEBPACK_IMPORTED_MODULE_1___default()(this).closest(\"nav\").attr(\"aria-expanded\", !isExpanded);\n  });\n\n  /**\r\n   * Handles the click event on elements with the role \"tab-tabs\" and attribute \"aria-controls\".\r\n   * Updates the active tab content and navigation state based on the clicked element.\r\n   */\n  jquery__WEBPACK_IMPORTED_MODULE_1___default()(\"[role='tablist-toggle'][aria-controls]\").on(\"click\", function () {\n    var targetId = \"#\" + jquery__WEBPACK_IMPORTED_MODULE_1___default()(this).attr(\"aria-controls\");\n    var $target = jquery__WEBPACK_IMPORTED_MODULE_1___default()(targetId);\n    var isExpanded = jquery__WEBPACK_IMPORTED_MODULE_1___default()(this).attr(\"aria-expanded\") === \"true\";\n    $target.fadeToggle(400, $easeInOut).css(\"height\", isExpanded ? \"0\" : $target.attr(\"data-toggle-height\"));\n    jquery__WEBPACK_IMPORTED_MODULE_1___default()(this).attr(\"aria-expanded\", !isExpanded);\n  });\n\n  /**\r\n   * Handles the click event on elements with the role \"tab\" and attribute \"aria-controls\".\r\n   * Updates the active tab content and navigation state based on the clicked element.\r\n   */\n  jquery__WEBPACK_IMPORTED_MODULE_1___default()(\"[role='tab'][aria-controls]\").on(\"click\", function () {\n    // Find the target ID\n    var $activeTabs = jquery__WEBPACK_IMPORTED_MODULE_1___default()(this).closest(\"nav\").find(\"[aria-selected='true']\");\n    var targetId = \"#\" + jquery__WEBPACK_IMPORTED_MODULE_1___default()(this).attr(\"aria-controls\");\n    var $target = jquery__WEBPACK_IMPORTED_MODULE_1___default()(targetId);\n\n    // First, fade out all tab contents\n    $activeTabs.each(function () {\n      var activeId = \"#\" + jquery__WEBPACK_IMPORTED_MODULE_1___default()(this).attr(\"aria-controls\");\n      var $active = jquery__WEBPACK_IMPORTED_MODULE_1___default()(activeId);\n      if (activeId !== targetId) {\n        // Fade out the current active tab content\n        $active.attr(\"aria-selected\", false);\n        // Fade in the target content section\n        $target.attr(\"aria-selected\", true);\n      }\n    });\n\n    // Update active state for nav items within the same sidebar\n    $activeTabs.attr(\"aria-selected\", false);\n    jquery__WEBPACK_IMPORTED_MODULE_1___default()(this).attr(\"aria-selected\", true);\n    scrollbar.get($target.closest(\"[role='tabpanel-container']\").prop(\"id\")).update({});\n  });\n\n  /**\r\n   * Handles the click event for elements with the role \"modal-open\" and the attribute \"aria-controls\".\r\n   * Opens the modal specified by the value of the aria-controls attribute.\r\n   */\n  jquery__WEBPACK_IMPORTED_MODULE_1___default()(\"[role='button'][aria-details^='Open modal'][aria-controls]\").on(\"click\", function () {\n    var targetId = \"#\" + jquery__WEBPACK_IMPORTED_MODULE_1___default()(this).attr(\"aria-controls\");\n    var $target = jquery__WEBPACK_IMPORTED_MODULE_1___default()(targetId);\n    document.querySelector(targetId).showModal();\n    $target.attr(\"aria-modal\", true).attr(\"aria-hidden\", false);\n    setModalElementHeight($target);\n    // Update scrollbar overflow\n    scrollbar.get(\"body\").options({\n      overflow: {\n        y: \"hidden\"\n      }\n    });\n    jquery__WEBPACK_IMPORTED_MODULE_1___default()(window).trigger(\"resize\");\n  });\n\n  /**\r\n   * Handles the click event for elements with the role \"modal-close\" and the attribute \"aria-controls\".\r\n   * Closes the modal and updates the accessibility attributes.\r\n   */\n  jquery__WEBPACK_IMPORTED_MODULE_1___default()(\"[role='modal-close'][aria-controls]\").on(\"click\", function () {\n    var targetId = \"#\" + jquery__WEBPACK_IMPORTED_MODULE_1___default()(this).attr(\"aria-controls\");\n    jquery__WEBPACK_IMPORTED_MODULE_1___default()(targetId).trigger(\"modal-close\");\n  });\n\n  /**\r\n   * Handles the click event on elements with the role \"modal\".\r\n   * Closes the corresponding modal and updates the attributes.\r\n   */\n  jquery__WEBPACK_IMPORTED_MODULE_1___default()(\"[role='modal']\").on(\"click\", function () {\n    var targetId = \"#\" + jquery__WEBPACK_IMPORTED_MODULE_1___default()(this).prop(\"id\");\n    jquery__WEBPACK_IMPORTED_MODULE_1___default()(this).trigger(\"modal-close\");\n  });\n\n  /**\r\n   * Handles the click event on elements with the role \"modal\".\r\n   * Closes the corresponding modal and updates the attributes.\r\n   */\n  jquery__WEBPACK_IMPORTED_MODULE_1___default()(\"[role='modal']\").on(\"keydown\", function (e) {\n    e.preventDefault();\n    var targetId = \"#\" + jquery__WEBPACK_IMPORTED_MODULE_1___default()(this).prop(\"id\");\n    if (e.key == \"Escape\") {\n      jquery__WEBPACK_IMPORTED_MODULE_1___default()(this).trigger(\"modal-close\");\n    }\n  });\n\n  /**\r\n   * Handles the close event on elements with the role \"modal\".\r\n   * Updates the accessibility attributes.\r\n   */\n  jquery__WEBPACK_IMPORTED_MODULE_1___default()(\"[role='modal']\").on(\"modal-close\", function (e) {\n    var id = \"#\" + jquery__WEBPACK_IMPORTED_MODULE_1___default()(this).prop(\"id\");\n    jquery__WEBPACK_IMPORTED_MODULE_1___default()(this).attr(\"aria-modal\", false).attr(\"aria-hidden\", true).attr(\"tabindex\", -1);\n    // Update scrollbar overflow\n    scrollbar.get(\"body\").options({\n      overflow: {\n        y: \"scroll\"\n      }\n    });\n    setTimeout(function () {\n      document.querySelector(id).close();\n    }, 300);\n  });\n\n  /**\r\n   * Handles the click event on elements with the role \"modal-content\".\r\n   * Prevents the click event from propagating further up the DOM tree, ensuring that the modal does not close when the content is clicked.\r\n   *\r\n   * @param {Event} e - The click event object.\r\n   */\n  jquery__WEBPACK_IMPORTED_MODULE_1___default()(\"[role='modal-content']\").on(\"click\", function (e) {\n    e.stopPropagation();\n  });\n\n  /**\r\n   * Event listener for window resize.\r\n   * Sets the height of the modal element based on the maximum height of the tabpanels and sidenav.\r\n   */\n  jquery__WEBPACK_IMPORTED_MODULE_1___default()(window).on(\"resize\", function () {\n    var $modal = jquery__WEBPACK_IMPORTED_MODULE_1___default()(\"[open][aria-modal='true']\");\n    if ($modal.length > 0) {\n      setModalElementHeight($modal);\n    }\n  });\n\n  /**\r\n   * Event handler for window resize event.\r\n   * It adds a class to the modal content element to disable transitions temporarily,\r\n   * clears the resize timer, and then removes the class after a short delay.\r\n   */\n  jquery__WEBPACK_IMPORTED_MODULE_1___default()(window).on(\"resize\", function () {\n    var modal = jquery__WEBPACK_IMPORTED_MODULE_1___default()(\"[open][aria-modal='true']\");\n    var modalContent = modal.find(\"[role='modal-content'\");\n    var sidenav = modal.find(\"[role='sidenav']\");\n    var tabpanels = modal.find(\"[role='tabpanel']\");\n    modalContent.addClass(\"no-transition\");\n    clearTimeout(resizeTimerModal);\n    resizeTimerModal = setTimeout(function () {\n      modalContent.removeClass(\"no-transition\");\n    }, 50);\n  });\n\n  // Trigger window resize event 100 milliseconds after the DOMContentLoaded event is triggered\n  setTimeout(function () {\n    jquery__WEBPACK_IMPORTED_MODULE_1___default()(window).trigger(\"resize\");\n  }, 100);\n});\n\n//# sourceURL=webpack://jakob1482.github.io/./_webpack/main.js?");

/***/ }),

/***/ "./node_modules/desandro-matches-selector/matches-selector.js":
/*!********************************************************************!*\
  !*** ./node_modules/desandro-matches-selector/matches-selector.js ***!
  \********************************************************************/
/***/ ((module, exports, __webpack_require__) => {

eval("var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;function _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\n/**\n * matchesSelector v2.0.2\n * matchesSelector( element, '.selector' )\n * MIT license\n */\n\n/*jshint browser: true, strict: true, undef: true, unused: true */\n\n(function (window, factory) {\n  /*global define: false, module: false */\n  'use strict';\n\n  // universal module definition\n  if (true) {\n    // AMD\n    !(__WEBPACK_AMD_DEFINE_FACTORY__ = (factory),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) :\n\t\t__WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n  } else {}\n})(window, function factory() {\n  'use strict';\n\n  var matchesMethod = function () {\n    var ElemProto = window.Element.prototype;\n    // check for the standard method name first\n    if (ElemProto.matches) {\n      return 'matches';\n    }\n    // check un-prefixed\n    if (ElemProto.matchesSelector) {\n      return 'matchesSelector';\n    }\n    // check vendor prefixes\n    var prefixes = ['webkit', 'moz', 'ms', 'o'];\n    for (var i = 0; i < prefixes.length; i++) {\n      var prefix = prefixes[i];\n      var method = prefix + 'MatchesSelector';\n      if (ElemProto[method]) {\n        return method;\n      }\n    }\n  }();\n  return function matchesSelector(elem, selector) {\n    return elem[matchesMethod](selector);\n  };\n});\n\n//# sourceURL=webpack://jakob1482.github.io/./node_modules/desandro-matches-selector/matches-selector.js?");

/***/ }),

/***/ "./node_modules/ev-emitter/ev-emitter.js":
/*!***********************************************!*\
  !*** ./node_modules/ev-emitter/ev-emitter.js ***!
  \***********************************************/
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;function _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\n/**\n * EvEmitter v1.1.0\n * Lil' event emitter\n * MIT License\n */\n\n/* jshint unused: true, undef: true, strict: true */\n\n(function (global, factory) {\n  // universal module definition\n  /* jshint strict: false */ /* globals define, module, window */\n  if (true) {\n    // AMD - RequireJS\n    !(__WEBPACK_AMD_DEFINE_FACTORY__ = (factory),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) :\n\t\t__WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n  } else {}\n})(typeof window != 'undefined' ? window : this, function () {\n  \"use strict\";\n\n  function EvEmitter() {}\n  var proto = EvEmitter.prototype;\n  proto.on = function (eventName, listener) {\n    if (!eventName || !listener) {\n      return;\n    }\n    // set events hash\n    var events = this._events = this._events || {};\n    // set listeners array\n    var listeners = events[eventName] = events[eventName] || [];\n    // only add once\n    if (listeners.indexOf(listener) == -1) {\n      listeners.push(listener);\n    }\n    return this;\n  };\n  proto.once = function (eventName, listener) {\n    if (!eventName || !listener) {\n      return;\n    }\n    // add event\n    this.on(eventName, listener);\n    // set once flag\n    // set onceEvents hash\n    var onceEvents = this._onceEvents = this._onceEvents || {};\n    // set onceListeners object\n    var onceListeners = onceEvents[eventName] = onceEvents[eventName] || {};\n    // set flag\n    onceListeners[listener] = true;\n    return this;\n  };\n  proto.off = function (eventName, listener) {\n    var listeners = this._events && this._events[eventName];\n    if (!listeners || !listeners.length) {\n      return;\n    }\n    var index = listeners.indexOf(listener);\n    if (index != -1) {\n      listeners.splice(index, 1);\n    }\n    return this;\n  };\n  proto.emitEvent = function (eventName, args) {\n    var listeners = this._events && this._events[eventName];\n    if (!listeners || !listeners.length) {\n      return;\n    }\n    // copy over to avoid interference if .off() in listener\n    listeners = listeners.slice(0);\n    args = args || [];\n    // once stuff\n    var onceListeners = this._onceEvents && this._onceEvents[eventName];\n    for (var i = 0; i < listeners.length; i++) {\n      var listener = listeners[i];\n      var isOnce = onceListeners && onceListeners[listener];\n      if (isOnce) {\n        // remove listener\n        // remove before trigger to prevent recursion\n        this.off(eventName, listener);\n        // unset once flag\n        delete onceListeners[listener];\n      }\n      // trigger listener\n      listener.apply(this, args);\n    }\n    return this;\n  };\n  proto.allOff = function () {\n    delete this._events;\n    delete this._onceEvents;\n  };\n  return EvEmitter;\n});\n\n//# sourceURL=webpack://jakob1482.github.io/./node_modules/ev-emitter/ev-emitter.js?");

/***/ }),

/***/ "./node_modules/fizzy-ui-utils/utils.js":
/*!**********************************************!*\
  !*** ./node_modules/fizzy-ui-utils/utils.js ***!
  \**********************************************/
/***/ ((module, exports, __webpack_require__) => {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;function _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\n/**\n * Fizzy UI utils v2.0.7\n * MIT license\n */\n\n/*jshint browser: true, undef: true, unused: true, strict: true */\n\n(function (window, factory) {\n  // universal module definition\n  /*jshint strict: false */ /*globals define, module, require */\n\n  if (true) {\n    // AMD\n    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! desandro-matches-selector/matches-selector */ \"./node_modules/desandro-matches-selector/matches-selector.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function (matchesSelector) {\n      return factory(window, matchesSelector);\n    }).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n  } else {}\n})(window, function factory(window, matchesSelector) {\n  'use strict';\n\n  var utils = {};\n\n  // ----- extend ----- //\n\n  // extends objects\n  utils.extend = function (a, b) {\n    for (var prop in b) {\n      a[prop] = b[prop];\n    }\n    return a;\n  };\n\n  // ----- modulo ----- //\n\n  utils.modulo = function (num, div) {\n    return (num % div + div) % div;\n  };\n\n  // ----- makeArray ----- //\n\n  var arraySlice = Array.prototype.slice;\n\n  // turn element or nodeList into an array\n  utils.makeArray = function (obj) {\n    if (Array.isArray(obj)) {\n      // use object if already an array\n      return obj;\n    }\n    // return empty array if undefined or null. #6\n    if (obj === null || obj === undefined) {\n      return [];\n    }\n    var isArrayLike = _typeof(obj) == 'object' && typeof obj.length == 'number';\n    if (isArrayLike) {\n      // convert nodeList to array\n      return arraySlice.call(obj);\n    }\n\n    // array of single index\n    return [obj];\n  };\n\n  // ----- removeFrom ----- //\n\n  utils.removeFrom = function (ary, obj) {\n    var index = ary.indexOf(obj);\n    if (index != -1) {\n      ary.splice(index, 1);\n    }\n  };\n\n  // ----- getParent ----- //\n\n  utils.getParent = function (elem, selector) {\n    while (elem.parentNode && elem != document.body) {\n      elem = elem.parentNode;\n      if (matchesSelector(elem, selector)) {\n        return elem;\n      }\n    }\n  };\n\n  // ----- getQueryElement ----- //\n\n  // use element as selector string\n  utils.getQueryElement = function (elem) {\n    if (typeof elem == 'string') {\n      return document.querySelector(elem);\n    }\n    return elem;\n  };\n\n  // ----- handleEvent ----- //\n\n  // enable .ontype to trigger from .addEventListener( elem, 'type' )\n  utils.handleEvent = function (event) {\n    var method = 'on' + event.type;\n    if (this[method]) {\n      this[method](event);\n    }\n  };\n\n  // ----- filterFindElements ----- //\n\n  utils.filterFindElements = function (elems, selector) {\n    // make array of elems\n    elems = utils.makeArray(elems);\n    var ffElems = [];\n    elems.forEach(function (elem) {\n      // check that elem is an actual element\n      if (!(elem instanceof HTMLElement)) {\n        return;\n      }\n      // add elem if no selector\n      if (!selector) {\n        ffElems.push(elem);\n        return;\n      }\n      // filter & find items if we have a selector\n      // filter\n      if (matchesSelector(elem, selector)) {\n        ffElems.push(elem);\n      }\n      // find children\n      var childElems = elem.querySelectorAll(selector);\n      // concat childElems to filterFound array\n      for (var i = 0; i < childElems.length; i++) {\n        ffElems.push(childElems[i]);\n      }\n    });\n    return ffElems;\n  };\n\n  // ----- debounceMethod ----- //\n\n  utils.debounceMethod = function (_class, methodName, threshold) {\n    threshold = threshold || 100;\n    // original method\n    var method = _class.prototype[methodName];\n    var timeoutName = methodName + 'Timeout';\n    _class.prototype[methodName] = function () {\n      var timeout = this[timeoutName];\n      clearTimeout(timeout);\n      var args = arguments;\n      var _this = this;\n      this[timeoutName] = setTimeout(function () {\n        method.apply(_this, args);\n        delete _this[timeoutName];\n      }, threshold);\n    };\n  };\n\n  // ----- docReady ----- //\n\n  utils.docReady = function (callback) {\n    var readyState = document.readyState;\n    if (readyState == 'complete' || readyState == 'interactive') {\n      // do async to allow for other scripts to run. metafizzy/flickity#441\n      setTimeout(callback);\n    } else {\n      document.addEventListener('DOMContentLoaded', callback);\n    }\n  };\n\n  // ----- htmlInit ----- //\n\n  // http://jamesroberts.name/blog/2010/02/22/string-functions-for-javascript-trim-to-camel-case-to-dashed-and-to-underscore/\n  utils.toDashed = function (str) {\n    return str.replace(/(.)([A-Z])/g, function (match, $1, $2) {\n      return $1 + '-' + $2;\n    }).toLowerCase();\n  };\n  var console = window.console;\n  /**\n   * allow user to initialize classes via [data-namespace] or .js-namespace class\n   * htmlInit( Widget, 'widgetName' )\n   * options are parsed from data-namespace-options\n   */\n  utils.htmlInit = function (WidgetClass, namespace) {\n    utils.docReady(function () {\n      var dashedNamespace = utils.toDashed(namespace);\n      var dataAttr = 'data-' + dashedNamespace;\n      var dataAttrElems = document.querySelectorAll('[' + dataAttr + ']');\n      var jsDashElems = document.querySelectorAll('.js-' + dashedNamespace);\n      var elems = utils.makeArray(dataAttrElems).concat(utils.makeArray(jsDashElems));\n      var dataOptionsAttr = dataAttr + '-options';\n      var jQuery = window.jQuery;\n      elems.forEach(function (elem) {\n        var attr = elem.getAttribute(dataAttr) || elem.getAttribute(dataOptionsAttr);\n        var options;\n        try {\n          options = attr && JSON.parse(attr);\n        } catch (error) {\n          // log error, do not initialize\n          if (console) {\n            console.error('Error parsing ' + dataAttr + ' on ' + elem.className + ': ' + error);\n          }\n          return;\n        }\n        // initialize\n        var instance = new WidgetClass(elem, options);\n        // make available via $().data('namespace')\n        if (jQuery) {\n          jQuery.data(elem, namespace, instance);\n        }\n      });\n    });\n  };\n\n  // -----  ----- //\n\n  return utils;\n});\n\n//# sourceURL=webpack://jakob1482.github.io/./node_modules/fizzy-ui-utils/utils.js?");

/***/ }),

/***/ "./node_modules/get-size/get-size.js":
/*!*******************************************!*\
  !*** ./node_modules/get-size/get-size.js ***!
  \*******************************************/
/***/ ((module, exports, __webpack_require__) => {

eval("var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;function _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\n/*!\n * getSize v2.0.3\n * measure size of elements\n * MIT license\n */\n\n/* jshint browser: true, strict: true, undef: true, unused: true */\n/* globals console: false */\n\n(function (window, factory) {\n  /* jshint strict: false */ /* globals define, module */\n  if (true) {\n    // AMD\n    !(__WEBPACK_AMD_DEFINE_FACTORY__ = (factory),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) :\n\t\t__WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n  } else {}\n})(window, function factory() {\n  'use strict';\n\n  // -------------------------- helpers -------------------------- //\n\n  // get a number from a string, not a percentage\n  function getStyleSize(value) {\n    var num = parseFloat(value);\n    // not a percent like '100%', and a number\n    var isValid = value.indexOf('%') == -1 && !isNaN(num);\n    return isValid && num;\n  }\n  function noop() {}\n  var logError = typeof console == 'undefined' ? noop : function (message) {\n    console.error(message);\n  };\n\n  // -------------------------- measurements -------------------------- //\n\n  var measurements = ['paddingLeft', 'paddingRight', 'paddingTop', 'paddingBottom', 'marginLeft', 'marginRight', 'marginTop', 'marginBottom', 'borderLeftWidth', 'borderRightWidth', 'borderTopWidth', 'borderBottomWidth'];\n  var measurementsLength = measurements.length;\n  function getZeroSize() {\n    var size = {\n      width: 0,\n      height: 0,\n      innerWidth: 0,\n      innerHeight: 0,\n      outerWidth: 0,\n      outerHeight: 0\n    };\n    for (var i = 0; i < measurementsLength; i++) {\n      var measurement = measurements[i];\n      size[measurement] = 0;\n    }\n    return size;\n  }\n\n  // -------------------------- getStyle -------------------------- //\n\n  /**\n   * getStyle, get style of element, check for Firefox bug\n   * https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n   */\n  function getStyle(elem) {\n    var style = getComputedStyle(elem);\n    if (!style) {\n      logError('Style returned ' + style + '. Are you running this code in a hidden iframe on Firefox? ' + 'See https://bit.ly/getsizebug1');\n    }\n    return style;\n  }\n\n  // -------------------------- setup -------------------------- //\n\n  var isSetup = false;\n  var isBoxSizeOuter;\n\n  /**\n   * setup\n   * check isBoxSizerOuter\n   * do on first getSize() rather than on page load for Firefox bug\n   */\n  function setup() {\n    // setup once\n    if (isSetup) {\n      return;\n    }\n    isSetup = true;\n\n    // -------------------------- box sizing -------------------------- //\n\n    /**\n     * Chrome & Safari measure the outer-width on style.width on border-box elems\n     * IE11 & Firefox<29 measures the inner-width\n     */\n    var div = document.createElement('div');\n    div.style.width = '200px';\n    div.style.padding = '1px 2px 3px 4px';\n    div.style.borderStyle = 'solid';\n    div.style.borderWidth = '1px 2px 3px 4px';\n    div.style.boxSizing = 'border-box';\n    var body = document.body || document.documentElement;\n    body.appendChild(div);\n    var style = getStyle(div);\n    // round value for browser zoom. desandro/masonry#928\n    isBoxSizeOuter = Math.round(getStyleSize(style.width)) == 200;\n    getSize.isBoxSizeOuter = isBoxSizeOuter;\n    body.removeChild(div);\n  }\n\n  // -------------------------- getSize -------------------------- //\n\n  function getSize(elem) {\n    setup();\n\n    // use querySeletor if elem is string\n    if (typeof elem == 'string') {\n      elem = document.querySelector(elem);\n    }\n\n    // do not proceed on non-objects\n    if (!elem || _typeof(elem) != 'object' || !elem.nodeType) {\n      return;\n    }\n    var style = getStyle(elem);\n\n    // if hidden, everything is 0\n    if (style.display == 'none') {\n      return getZeroSize();\n    }\n    var size = {};\n    size.width = elem.offsetWidth;\n    size.height = elem.offsetHeight;\n    var isBorderBox = size.isBorderBox = style.boxSizing == 'border-box';\n\n    // get all measurements\n    for (var i = 0; i < measurementsLength; i++) {\n      var measurement = measurements[i];\n      var value = style[measurement];\n      var num = parseFloat(value);\n      // any 'auto', 'medium' value will be 0\n      size[measurement] = !isNaN(num) ? num : 0;\n    }\n    var paddingWidth = size.paddingLeft + size.paddingRight;\n    var paddingHeight = size.paddingTop + size.paddingBottom;\n    var marginWidth = size.marginLeft + size.marginRight;\n    var marginHeight = size.marginTop + size.marginBottom;\n    var borderWidth = size.borderLeftWidth + size.borderRightWidth;\n    var borderHeight = size.borderTopWidth + size.borderBottomWidth;\n    var isBorderBoxSizeOuter = isBorderBox && isBoxSizeOuter;\n\n    // overwrite width and height if we can get it from style\n    var styleWidth = getStyleSize(style.width);\n    if (styleWidth !== false) {\n      size.width = styleWidth + (\n      // add padding and border unless it's already including it\n      isBorderBoxSizeOuter ? 0 : paddingWidth + borderWidth);\n    }\n    var styleHeight = getStyleSize(style.height);\n    if (styleHeight !== false) {\n      size.height = styleHeight + (\n      // add padding and border unless it's already including it\n      isBorderBoxSizeOuter ? 0 : paddingHeight + borderHeight);\n    }\n    size.innerWidth = size.width - (paddingWidth + borderWidth);\n    size.innerHeight = size.height - (paddingHeight + borderHeight);\n    size.outerWidth = size.width + marginWidth;\n    size.outerHeight = size.height + marginHeight;\n    return size;\n  }\n  return getSize;\n});\n\n//# sourceURL=webpack://jakob1482.github.io/./node_modules/get-size/get-size.js?");

/***/ }),

/***/ "./node_modules/isotope-layout/js/isotope.js":
/*!***************************************************!*\
  !*** ./node_modules/isotope-layout/js/isotope.js ***!
  \***************************************************/
/***/ ((module, exports, __webpack_require__) => {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;function _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\n/*!\n * Isotope v3.0.6\n *\n * Licensed GPLv3 for open source use\n * or Isotope Commercial License for commercial use\n *\n * https://isotope.metafizzy.co\n * Copyright 2010-2018 Metafizzy\n */\n\n(function (window, factory) {\n  // universal module definition\n  /* jshint strict: false */ /*globals define, module, require */\n  if (true) {\n    // AMD\n    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! outlayer/outlayer */ \"./node_modules/outlayer/outlayer.js\"), __webpack_require__(/*! get-size/get-size */ \"./node_modules/get-size/get-size.js\"), __webpack_require__(/*! desandro-matches-selector/matches-selector */ \"./node_modules/desandro-matches-selector/matches-selector.js\"), __webpack_require__(/*! fizzy-ui-utils/utils */ \"./node_modules/fizzy-ui-utils/utils.js\"), __webpack_require__(/*! ./item */ \"./node_modules/isotope-layout/js/item.js\"), __webpack_require__(/*! ./layout-mode */ \"./node_modules/isotope-layout/js/layout-mode.js\"),\n    // include default layout modes\n    __webpack_require__(/*! ./layout-modes/masonry */ \"./node_modules/isotope-layout/js/layout-modes/masonry.js\"), __webpack_require__(/*! ./layout-modes/fit-rows */ \"./node_modules/isotope-layout/js/layout-modes/fit-rows.js\"), __webpack_require__(/*! ./layout-modes/vertical */ \"./node_modules/isotope-layout/js/layout-modes/vertical.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function (Outlayer, getSize, matchesSelector, utils, Item, LayoutMode) {\n      return factory(window, Outlayer, getSize, matchesSelector, utils, Item, LayoutMode);\n    }).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n  } else {}\n})(window, function factory(window, Outlayer, getSize, matchesSelector, utils, Item, LayoutMode) {\n  'use strict';\n\n  // -------------------------- vars -------------------------- //\n  var jQuery = window.jQuery;\n\n  // -------------------------- helpers -------------------------- //\n\n  var trim = String.prototype.trim ? function (str) {\n    return str.trim();\n  } : function (str) {\n    return str.replace(/^\\s+|\\s+$/g, '');\n  };\n\n  // -------------------------- isotopeDefinition -------------------------- //\n\n  // create an Outlayer layout class\n  var Isotope = Outlayer.create('isotope', {\n    layoutMode: 'masonry',\n    isJQueryFiltering: true,\n    sortAscending: true\n  });\n  Isotope.Item = Item;\n  Isotope.LayoutMode = LayoutMode;\n  var proto = Isotope.prototype;\n  proto._create = function () {\n    this.itemGUID = 0;\n    // functions that sort items\n    this._sorters = {};\n    this._getSorters();\n    // call super\n    Outlayer.prototype._create.call(this);\n\n    // create layout modes\n    this.modes = {};\n    // start filteredItems with all items\n    this.filteredItems = this.items;\n    // keep of track of sortBys\n    this.sortHistory = ['original-order'];\n    // create from registered layout modes\n    for (var name in LayoutMode.modes) {\n      this._initLayoutMode(name);\n    }\n  };\n  proto.reloadItems = function () {\n    // reset item ID counter\n    this.itemGUID = 0;\n    // call super\n    Outlayer.prototype.reloadItems.call(this);\n  };\n  proto._itemize = function () {\n    var items = Outlayer.prototype._itemize.apply(this, arguments);\n    // assign ID for original-order\n    for (var i = 0; i < items.length; i++) {\n      var item = items[i];\n      item.id = this.itemGUID++;\n    }\n    this._updateItemsSortData(items);\n    return items;\n  };\n\n  // -------------------------- layout -------------------------- //\n\n  proto._initLayoutMode = function (name) {\n    var Mode = LayoutMode.modes[name];\n    // set mode options\n    // HACK extend initial options, back-fill in default options\n    var initialOpts = this.options[name] || {};\n    this.options[name] = Mode.options ? utils.extend(Mode.options, initialOpts) : initialOpts;\n    // init layout mode instance\n    this.modes[name] = new Mode(this);\n  };\n  proto.layout = function () {\n    // if first time doing layout, do all magic\n    if (!this._isLayoutInited && this._getOption('initLayout')) {\n      this.arrange();\n      return;\n    }\n    this._layout();\n  };\n\n  // private method to be used in layout() & magic()\n  proto._layout = function () {\n    // don't animate first layout\n    var isInstant = this._getIsInstant();\n    // layout flow\n    this._resetLayout();\n    this._manageStamps();\n    this.layoutItems(this.filteredItems, isInstant);\n\n    // flag for initalized\n    this._isLayoutInited = true;\n  };\n\n  // filter + sort + layout\n  proto.arrange = function (opts) {\n    // set any options pass\n    this.option(opts);\n    this._getIsInstant();\n    // filter, sort, and layout\n\n    // filter\n    var filtered = this._filter(this.items);\n    this.filteredItems = filtered.matches;\n    this._bindArrangeComplete();\n    if (this._isInstant) {\n      this._noTransition(this._hideReveal, [filtered]);\n    } else {\n      this._hideReveal(filtered);\n    }\n    this._sort();\n    this._layout();\n  };\n  // alias to _init for main plugin method\n  proto._init = proto.arrange;\n  proto._hideReveal = function (filtered) {\n    this.reveal(filtered.needReveal);\n    this.hide(filtered.needHide);\n  };\n\n  // HACK\n  // Don't animate/transition first layout\n  // Or don't animate/transition other layouts\n  proto._getIsInstant = function () {\n    var isLayoutInstant = this._getOption('layoutInstant');\n    var isInstant = isLayoutInstant !== undefined ? isLayoutInstant : !this._isLayoutInited;\n    this._isInstant = isInstant;\n    return isInstant;\n  };\n\n  // listen for layoutComplete, hideComplete and revealComplete\n  // to trigger arrangeComplete\n  proto._bindArrangeComplete = function () {\n    // listen for 3 events to trigger arrangeComplete\n    var isLayoutComplete, isHideComplete, isRevealComplete;\n    var _this = this;\n    function arrangeParallelCallback() {\n      if (isLayoutComplete && isHideComplete && isRevealComplete) {\n        _this.dispatchEvent('arrangeComplete', null, [_this.filteredItems]);\n      }\n    }\n    this.once('layoutComplete', function () {\n      isLayoutComplete = true;\n      arrangeParallelCallback();\n    });\n    this.once('hideComplete', function () {\n      isHideComplete = true;\n      arrangeParallelCallback();\n    });\n    this.once('revealComplete', function () {\n      isRevealComplete = true;\n      arrangeParallelCallback();\n    });\n  };\n\n  // -------------------------- filter -------------------------- //\n\n  proto._filter = function (items) {\n    var filter = this.options.filter;\n    filter = filter || '*';\n    var matches = [];\n    var hiddenMatched = [];\n    var visibleUnmatched = [];\n    var test = this._getFilterTest(filter);\n\n    // test each item\n    for (var i = 0; i < items.length; i++) {\n      var item = items[i];\n      if (item.isIgnored) {\n        continue;\n      }\n      // add item to either matched or unmatched group\n      var isMatched = test(item);\n      // item.isFilterMatched = isMatched;\n      // add to matches if its a match\n      if (isMatched) {\n        matches.push(item);\n      }\n      // add to additional group if item needs to be hidden or revealed\n      if (isMatched && item.isHidden) {\n        hiddenMatched.push(item);\n      } else if (!isMatched && !item.isHidden) {\n        visibleUnmatched.push(item);\n      }\n    }\n\n    // return collections of items to be manipulated\n    return {\n      matches: matches,\n      needReveal: hiddenMatched,\n      needHide: visibleUnmatched\n    };\n  };\n\n  // get a jQuery, function, or a matchesSelector test given the filter\n  proto._getFilterTest = function (filter) {\n    if (jQuery && this.options.isJQueryFiltering) {\n      // use jQuery\n      return function (item) {\n        return jQuery(item.element).is(filter);\n      };\n    }\n    if (typeof filter == 'function') {\n      // use filter as function\n      return function (item) {\n        return filter(item.element);\n      };\n    }\n    // default, use filter as selector string\n    return function (item) {\n      return matchesSelector(item.element, filter);\n    };\n  };\n\n  // -------------------------- sorting -------------------------- //\n\n  /**\n   * @params {Array} elems\n   * @public\n   */\n  proto.updateSortData = function (elems) {\n    // get items\n    var items;\n    if (elems) {\n      elems = utils.makeArray(elems);\n      items = this.getItems(elems);\n    } else {\n      // update all items if no elems provided\n      items = this.items;\n    }\n    this._getSorters();\n    this._updateItemsSortData(items);\n  };\n  proto._getSorters = function () {\n    var getSortData = this.options.getSortData;\n    for (var key in getSortData) {\n      var sorter = getSortData[key];\n      this._sorters[key] = mungeSorter(sorter);\n    }\n  };\n\n  /**\n   * @params {Array} items - of Isotope.Items\n   * @private\n   */\n  proto._updateItemsSortData = function (items) {\n    // do not update if no items\n    var len = items && items.length;\n    for (var i = 0; len && i < len; i++) {\n      var item = items[i];\n      item.updateSortData();\n    }\n  };\n\n  // ----- munge sorter ----- //\n\n  // encapsulate this, as we just need mungeSorter\n  // other functions in here are just for munging\n  var mungeSorter = function () {\n    // add a magic layer to sorters for convienent shorthands\n    // `.foo-bar` will use the text of .foo-bar querySelector\n    // `[foo-bar]` will use attribute\n    // you can also add parser\n    // `.foo-bar parseInt` will parse that as a number\n    function mungeSorter(sorter) {\n      // if not a string, return function or whatever it is\n      if (typeof sorter != 'string') {\n        return sorter;\n      }\n      // parse the sorter string\n      var args = trim(sorter).split(' ');\n      var query = args[0];\n      // check if query looks like [an-attribute]\n      var attrMatch = query.match(/^\\[(.+)\\]$/);\n      var attr = attrMatch && attrMatch[1];\n      var getValue = getValueGetter(attr, query);\n      // use second argument as a parser\n      var parser = Isotope.sortDataParsers[args[1]];\n      // parse the value, if there was a parser\n      sorter = parser ? function (elem) {\n        return elem && parser(getValue(elem));\n      } :\n      // otherwise just return value\n      function (elem) {\n        return elem && getValue(elem);\n      };\n      return sorter;\n    }\n\n    // get an attribute getter, or get text of the querySelector\n    function getValueGetter(attr, query) {\n      // if query looks like [foo-bar], get attribute\n      if (attr) {\n        return function getAttribute(elem) {\n          return elem.getAttribute(attr);\n        };\n      }\n\n      // otherwise, assume its a querySelector, and get its text\n      return function getChildText(elem) {\n        var child = elem.querySelector(query);\n        return child && child.textContent;\n      };\n    }\n    return mungeSorter;\n  }();\n\n  // parsers used in getSortData shortcut strings\n  Isotope.sortDataParsers = {\n    'parseInt': function (_parseInt) {\n      function parseInt(_x) {\n        return _parseInt.apply(this, arguments);\n      }\n      parseInt.toString = function () {\n        return _parseInt.toString();\n      };\n      return parseInt;\n    }(function (val) {\n      return parseInt(val, 10);\n    }),\n    'parseFloat': function (_parseFloat) {\n      function parseFloat(_x2) {\n        return _parseFloat.apply(this, arguments);\n      }\n      parseFloat.toString = function () {\n        return _parseFloat.toString();\n      };\n      return parseFloat;\n    }(function (val) {\n      return parseFloat(val);\n    })\n  };\n\n  // ----- sort method ----- //\n\n  // sort filteredItem order\n  proto._sort = function () {\n    if (!this.options.sortBy) {\n      return;\n    }\n    // keep track of sortBy History\n    var sortBys = utils.makeArray(this.options.sortBy);\n    if (!this._getIsSameSortBy(sortBys)) {\n      // concat all sortBy and sortHistory, add to front, oldest goes in last\n      this.sortHistory = sortBys.concat(this.sortHistory);\n    }\n    // sort magic\n    var itemSorter = getItemSorter(this.sortHistory, this.options.sortAscending);\n    this.filteredItems.sort(itemSorter);\n  };\n\n  // check if sortBys is same as start of sortHistory\n  proto._getIsSameSortBy = function (sortBys) {\n    for (var i = 0; i < sortBys.length; i++) {\n      if (sortBys[i] != this.sortHistory[i]) {\n        return false;\n      }\n    }\n    return true;\n  };\n\n  // returns a function used for sorting\n  function getItemSorter(sortBys, sortAsc) {\n    return function sorter(itemA, itemB) {\n      // cycle through all sortKeys\n      for (var i = 0; i < sortBys.length; i++) {\n        var sortBy = sortBys[i];\n        var a = itemA.sortData[sortBy];\n        var b = itemB.sortData[sortBy];\n        if (a > b || a < b) {\n          // if sortAsc is an object, use the value given the sortBy key\n          var isAscending = sortAsc[sortBy] !== undefined ? sortAsc[sortBy] : sortAsc;\n          var direction = isAscending ? 1 : -1;\n          return (a > b ? 1 : -1) * direction;\n        }\n      }\n      return 0;\n    };\n  }\n\n  // -------------------------- methods -------------------------- //\n\n  // get layout mode\n  proto._mode = function () {\n    var layoutMode = this.options.layoutMode;\n    var mode = this.modes[layoutMode];\n    if (!mode) {\n      // TODO console.error\n      throw new Error('No layout mode: ' + layoutMode);\n    }\n    // HACK sync mode's options\n    // any options set after init for layout mode need to be synced\n    mode.options = this.options[layoutMode];\n    return mode;\n  };\n  proto._resetLayout = function () {\n    // trigger original reset layout\n    Outlayer.prototype._resetLayout.call(this);\n    this._mode()._resetLayout();\n  };\n  proto._getItemLayoutPosition = function (item) {\n    return this._mode()._getItemLayoutPosition(item);\n  };\n  proto._manageStamp = function (stamp) {\n    this._mode()._manageStamp(stamp);\n  };\n  proto._getContainerSize = function () {\n    return this._mode()._getContainerSize();\n  };\n  proto.needsResizeLayout = function () {\n    return this._mode().needsResizeLayout();\n  };\n\n  // -------------------------- adding & removing -------------------------- //\n\n  // HEADS UP overwrites default Outlayer appended\n  proto.appended = function (elems) {\n    var items = this.addItems(elems);\n    if (!items.length) {\n      return;\n    }\n    // filter, layout, reveal new items\n    var filteredItems = this._filterRevealAdded(items);\n    // add to filteredItems\n    this.filteredItems = this.filteredItems.concat(filteredItems);\n  };\n\n  // HEADS UP overwrites default Outlayer prepended\n  proto.prepended = function (elems) {\n    var items = this._itemize(elems);\n    if (!items.length) {\n      return;\n    }\n    // start new layout\n    this._resetLayout();\n    this._manageStamps();\n    // filter, layout, reveal new items\n    var filteredItems = this._filterRevealAdded(items);\n    // layout previous items\n    this.layoutItems(this.filteredItems);\n    // add to items and filteredItems\n    this.filteredItems = filteredItems.concat(this.filteredItems);\n    this.items = items.concat(this.items);\n  };\n  proto._filterRevealAdded = function (items) {\n    var filtered = this._filter(items);\n    this.hide(filtered.needHide);\n    // reveal all new items\n    this.reveal(filtered.matches);\n    // layout new items, no transition\n    this.layoutItems(filtered.matches, true);\n    return filtered.matches;\n  };\n\n  /**\n   * Filter, sort, and layout newly-appended item elements\n   * @param {Array or NodeList or Element} elems\n   */\n  proto.insert = function (elems) {\n    var items = this.addItems(elems);\n    if (!items.length) {\n      return;\n    }\n    // append item elements\n    var i, item;\n    var len = items.length;\n    for (i = 0; i < len; i++) {\n      item = items[i];\n      this.element.appendChild(item.element);\n    }\n    // filter new stuff\n    var filteredInsertItems = this._filter(items).matches;\n    // set flag\n    for (i = 0; i < len; i++) {\n      items[i].isLayoutInstant = true;\n    }\n    this.arrange();\n    // reset flag\n    for (i = 0; i < len; i++) {\n      delete items[i].isLayoutInstant;\n    }\n    this.reveal(filteredInsertItems);\n  };\n  var _remove = proto.remove;\n  proto.remove = function (elems) {\n    elems = utils.makeArray(elems);\n    var removeItems = this.getItems(elems);\n    // do regular thing\n    _remove.call(this, elems);\n    // bail if no items to remove\n    var len = removeItems && removeItems.length;\n    // remove elems from filteredItems\n    for (var i = 0; len && i < len; i++) {\n      var item = removeItems[i];\n      // remove item from collection\n      utils.removeFrom(this.filteredItems, item);\n    }\n  };\n  proto.shuffle = function () {\n    // update random sortData\n    for (var i = 0; i < this.items.length; i++) {\n      var item = this.items[i];\n      item.sortData.random = Math.random();\n    }\n    this.options.sortBy = 'random';\n    this._sort();\n    this._layout();\n  };\n\n  /**\n   * trigger fn without transition\n   * kind of hacky to have this in the first place\n   * @param {Function} fn\n   * @param {Array} args\n   * @returns ret\n   * @private\n   */\n  proto._noTransition = function (fn, args) {\n    // save transitionDuration before disabling\n    var transitionDuration = this.options.transitionDuration;\n    // disable transition\n    this.options.transitionDuration = 0;\n    // do it\n    var returnValue = fn.apply(this, args);\n    // re-enable transition for reveal\n    this.options.transitionDuration = transitionDuration;\n    return returnValue;\n  };\n\n  // ----- helper methods ----- //\n\n  /**\n   * getter method for getting filtered item elements\n   * @returns {Array} elems - collection of item elements\n   */\n  proto.getFilteredItemElements = function () {\n    return this.filteredItems.map(function (item) {\n      return item.element;\n    });\n  };\n\n  // -----  ----- //\n\n  return Isotope;\n});\n\n//# sourceURL=webpack://jakob1482.github.io/./node_modules/isotope-layout/js/isotope.js?");

/***/ }),

/***/ "./node_modules/isotope-layout/js/item.js":
/*!************************************************!*\
  !*** ./node_modules/isotope-layout/js/item.js ***!
  \************************************************/
/***/ ((module, exports, __webpack_require__) => {

eval("var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;function _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\n/**\n * Isotope Item\n**/\n\n(function (window, factory) {\n  // universal module definition\n  /* jshint strict: false */ /*globals define, module, require */\n  if (true) {\n    // AMD\n    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! outlayer/outlayer */ \"./node_modules/outlayer/outlayer.js\")], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n  } else {}\n})(window, function factory(Outlayer) {\n  'use strict';\n\n  // -------------------------- Item -------------------------- //\n\n  // sub-class Outlayer Item\n  function Item() {\n    Outlayer.Item.apply(this, arguments);\n  }\n  var proto = Item.prototype = Object.create(Outlayer.Item.prototype);\n  var _create = proto._create;\n  proto._create = function () {\n    // assign id, used for original-order sorting\n    this.id = this.layout.itemGUID++;\n    _create.call(this);\n    this.sortData = {};\n  };\n  proto.updateSortData = function () {\n    if (this.isIgnored) {\n      return;\n    }\n    // default sorters\n    this.sortData.id = this.id;\n    // for backward compatibility\n    this.sortData['original-order'] = this.id;\n    this.sortData.random = Math.random();\n    // go thru getSortData obj and apply the sorters\n    var getSortData = this.layout.options.getSortData;\n    var sorters = this.layout._sorters;\n    for (var key in getSortData) {\n      var sorter = sorters[key];\n      this.sortData[key] = sorter(this.element, this);\n    }\n  };\n  var _destroy = proto.destroy;\n  proto.destroy = function () {\n    // call super\n    _destroy.apply(this, arguments);\n    // reset display, #741\n    this.css({\n      display: ''\n    });\n  };\n  return Item;\n});\n\n//# sourceURL=webpack://jakob1482.github.io/./node_modules/isotope-layout/js/item.js?");

/***/ }),

/***/ "./node_modules/isotope-layout/js/layout-mode.js":
/*!*******************************************************!*\
  !*** ./node_modules/isotope-layout/js/layout-mode.js ***!
  \*******************************************************/
/***/ ((module, exports, __webpack_require__) => {

eval("var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;function _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\n/**\n * Isotope LayoutMode\n */\n\n(function (window, factory) {\n  // universal module definition\n  /* jshint strict: false */ /*globals define, module, require */\n  if (true) {\n    // AMD\n    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! get-size/get-size */ \"./node_modules/get-size/get-size.js\"), __webpack_require__(/*! outlayer/outlayer */ \"./node_modules/outlayer/outlayer.js\")], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n  } else {}\n})(window, function factory(getSize, Outlayer) {\n  'use strict';\n\n  // layout mode class\n  function LayoutMode(isotope) {\n    this.isotope = isotope;\n    // link properties\n    if (isotope) {\n      this.options = isotope.options[this.namespace];\n      this.element = isotope.element;\n      this.items = isotope.filteredItems;\n      this.size = isotope.size;\n    }\n  }\n  var proto = LayoutMode.prototype;\n\n  /**\n   * some methods should just defer to default Outlayer method\n   * and reference the Isotope instance as `this`\n  **/\n  var facadeMethods = ['_resetLayout', '_getItemLayoutPosition', '_manageStamp', '_getContainerSize', '_getElementOffset', 'needsResizeLayout', '_getOption'];\n  facadeMethods.forEach(function (methodName) {\n    proto[methodName] = function () {\n      return Outlayer.prototype[methodName].apply(this.isotope, arguments);\n    };\n  });\n\n  // -----  ----- //\n\n  // for horizontal layout modes, check vertical size\n  proto.needsVerticalResizeLayout = function () {\n    // don't trigger if size did not change\n    var size = getSize(this.isotope.element);\n    // check that this.size and size are there\n    // IE8 triggers resize on body size change, so they might not be\n    var hasSizes = this.isotope.size && size;\n    return hasSizes && size.innerHeight != this.isotope.size.innerHeight;\n  };\n\n  // ----- measurements ----- //\n\n  proto._getMeasurement = function () {\n    this.isotope._getMeasurement.apply(this, arguments);\n  };\n  proto.getColumnWidth = function () {\n    this.getSegmentSize('column', 'Width');\n  };\n  proto.getRowHeight = function () {\n    this.getSegmentSize('row', 'Height');\n  };\n\n  /**\n   * get columnWidth or rowHeight\n   * segment: 'column' or 'row'\n   * size 'Width' or 'Height'\n  **/\n  proto.getSegmentSize = function (segment, size) {\n    var segmentName = segment + size;\n    var outerSize = 'outer' + size;\n    // columnWidth / outerWidth // rowHeight / outerHeight\n    this._getMeasurement(segmentName, outerSize);\n    // got rowHeight or columnWidth, we can chill\n    if (this[segmentName]) {\n      return;\n    }\n    // fall back to item of first element\n    var firstItemSize = this.getFirstItemSize();\n    this[segmentName] = firstItemSize && firstItemSize[outerSize] ||\n    // or size of container\n    this.isotope.size['inner' + size];\n  };\n  proto.getFirstItemSize = function () {\n    var firstItem = this.isotope.filteredItems[0];\n    return firstItem && firstItem.element && getSize(firstItem.element);\n  };\n\n  // ----- methods that should reference isotope ----- //\n\n  proto.layout = function () {\n    this.isotope.layout.apply(this.isotope, arguments);\n  };\n  proto.getSize = function () {\n    this.isotope.getSize();\n    this.size = this.isotope.size;\n  };\n\n  // -------------------------- create -------------------------- //\n\n  LayoutMode.modes = {};\n  LayoutMode.create = function (namespace, options) {\n    function Mode() {\n      LayoutMode.apply(this, arguments);\n    }\n    Mode.prototype = Object.create(proto);\n    Mode.prototype.constructor = Mode;\n\n    // default options\n    if (options) {\n      Mode.options = options;\n    }\n    Mode.prototype.namespace = namespace;\n    // register in Isotope\n    LayoutMode.modes[namespace] = Mode;\n    return Mode;\n  };\n  return LayoutMode;\n});\n\n//# sourceURL=webpack://jakob1482.github.io/./node_modules/isotope-layout/js/layout-mode.js?");

/***/ }),

/***/ "./node_modules/isotope-layout/js/layout-modes/fit-rows.js":
/*!*****************************************************************!*\
  !*** ./node_modules/isotope-layout/js/layout-modes/fit-rows.js ***!
  \*****************************************************************/
/***/ ((module, exports, __webpack_require__) => {

eval("var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;function _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\n/**\n * fitRows layout mode\n */\n\n(function (window, factory) {\n  // universal module definition\n  /* jshint strict: false */ /*globals define, module, require */\n  if (true) {\n    // AMD\n    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! ../layout-mode */ \"./node_modules/isotope-layout/js/layout-mode.js\")], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n  } else {}\n})(window, function factory(LayoutMode) {\n  'use strict';\n\n  var FitRows = LayoutMode.create('fitRows');\n  var proto = FitRows.prototype;\n  proto._resetLayout = function () {\n    this.x = 0;\n    this.y = 0;\n    this.maxY = 0;\n    this._getMeasurement('gutter', 'outerWidth');\n  };\n  proto._getItemLayoutPosition = function (item) {\n    item.getSize();\n    var itemWidth = item.size.outerWidth + this.gutter;\n    // if this element cannot fit in the current row\n    var containerWidth = this.isotope.size.innerWidth + this.gutter;\n    if (this.x !== 0 && itemWidth + this.x > containerWidth) {\n      this.x = 0;\n      this.y = this.maxY;\n    }\n    var position = {\n      x: this.x,\n      y: this.y\n    };\n    this.maxY = Math.max(this.maxY, this.y + item.size.outerHeight);\n    this.x += itemWidth;\n    return position;\n  };\n  proto._getContainerSize = function () {\n    return {\n      height: this.maxY\n    };\n  };\n  return FitRows;\n});\n\n//# sourceURL=webpack://jakob1482.github.io/./node_modules/isotope-layout/js/layout-modes/fit-rows.js?");

/***/ }),

/***/ "./node_modules/isotope-layout/js/layout-modes/masonry.js":
/*!****************************************************************!*\
  !*** ./node_modules/isotope-layout/js/layout-modes/masonry.js ***!
  \****************************************************************/
/***/ ((module, exports, __webpack_require__) => {

eval("var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;function _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\n/*!\n * Masonry layout mode\n * sub-classes Masonry\n * https://masonry.desandro.com\n */\n\n(function (window, factory) {\n  // universal module definition\n  /* jshint strict: false */ /*globals define, module, require */\n  if (true) {\n    // AMD\n    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! ../layout-mode */ \"./node_modules/isotope-layout/js/layout-mode.js\"), __webpack_require__(/*! masonry-layout/masonry */ \"./node_modules/masonry-layout/masonry.js\")], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n  } else {}\n})(window, function factory(LayoutMode, Masonry) {\n  'use strict';\n\n  // -------------------------- masonryDefinition -------------------------- //\n\n  // create an Outlayer layout class\n  var MasonryMode = LayoutMode.create('masonry');\n  var proto = MasonryMode.prototype;\n  var keepModeMethods = {\n    _getElementOffset: true,\n    layout: true,\n    _getMeasurement: true\n  };\n\n  // inherit Masonry prototype\n  for (var method in Masonry.prototype) {\n    // do not inherit mode methods\n    if (!keepModeMethods[method]) {\n      proto[method] = Masonry.prototype[method];\n    }\n  }\n  var measureColumns = proto.measureColumns;\n  proto.measureColumns = function () {\n    // set items, used if measuring first item\n    this.items = this.isotope.filteredItems;\n    measureColumns.call(this);\n  };\n\n  // point to mode options for fitWidth\n  var _getOption = proto._getOption;\n  proto._getOption = function (option) {\n    if (option == 'fitWidth') {\n      return this.options.isFitWidth !== undefined ? this.options.isFitWidth : this.options.fitWidth;\n    }\n    return _getOption.apply(this.isotope, arguments);\n  };\n  return MasonryMode;\n});\n\n//# sourceURL=webpack://jakob1482.github.io/./node_modules/isotope-layout/js/layout-modes/masonry.js?");

/***/ }),

/***/ "./node_modules/isotope-layout/js/layout-modes/vertical.js":
/*!*****************************************************************!*\
  !*** ./node_modules/isotope-layout/js/layout-modes/vertical.js ***!
  \*****************************************************************/
/***/ ((module, exports, __webpack_require__) => {

eval("var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;function _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\n/**\n * vertical layout mode\n */\n\n(function (window, factory) {\n  // universal module definition\n  /* jshint strict: false */ /*globals define, module, require */\n  if (true) {\n    // AMD\n    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! ../layout-mode */ \"./node_modules/isotope-layout/js/layout-mode.js\")], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n  } else {}\n})(window, function factory(LayoutMode) {\n  'use strict';\n\n  var Vertical = LayoutMode.create('vertical', {\n    horizontalAlignment: 0\n  });\n  var proto = Vertical.prototype;\n  proto._resetLayout = function () {\n    this.y = 0;\n  };\n  proto._getItemLayoutPosition = function (item) {\n    item.getSize();\n    var x = (this.isotope.size.innerWidth - item.size.outerWidth) * this.options.horizontalAlignment;\n    var y = this.y;\n    this.y += item.size.outerHeight;\n    return {\n      x: x,\n      y: y\n    };\n  };\n  proto._getContainerSize = function () {\n    return {\n      height: this.y\n    };\n  };\n  return Vertical;\n});\n\n//# sourceURL=webpack://jakob1482.github.io/./node_modules/isotope-layout/js/layout-modes/vertical.js?");

/***/ }),

/***/ "./node_modules/jquery-bez/lib/jquery.bez.js":
/*!***************************************************!*\
  !*** ./node_modules/jquery-bez/lib/jquery.bez.js ***!
  \***************************************************/
/***/ ((module, exports, __webpack_require__) => {

eval("var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;function _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\n/*!\n * Bez 1.0.11\n * http://github.com/rdallasgray/bez\n *\n * A plugin to convert CSS3 cubic-bezier co-ordinates to jQuery-compatible easing functions\n *\n * With thanks to Nikolay Nemshilov for clarification on the cubic-bezier maths\n * See http://st-on-it.blogspot.com/2011/05/calculating-cubic-bezier-function.html\n *\n * Copyright 2016 Robert Dallas Gray. All rights reserved.\n * Provided under the FreeBSD license: https://github.com/rdallasgray/bez/blob/master/LICENSE.txt\n */\n(function (factory) {\n  if (( false ? 0 : _typeof(exports)) === \"object\") {\n    factory(__webpack_require__(/*! jquery */ \"./node_modules/jquery/dist/jquery.js\"));\n  } else if (true) {\n    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ \"./node_modules/jquery/dist/jquery.js\")], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n  } else {}\n})(function ($) {\n  $.extend({\n    bez: function bez(encodedFuncName, coOrdArray) {\n      if ($.isArray(encodedFuncName)) {\n        coOrdArray = encodedFuncName;\n        encodedFuncName = 'bez_' + coOrdArray.join('_').replace(/\\./g, 'p');\n      }\n      if (typeof $.easing[encodedFuncName] !== \"function\") {\n        var polyBez = function polyBez(p1, p2) {\n          var A = [null, null],\n            B = [null, null],\n            C = [null, null],\n            bezCoOrd = function bezCoOrd(t, ax) {\n              C[ax] = 3 * p1[ax], B[ax] = 3 * (p2[ax] - p1[ax]) - C[ax], A[ax] = 1 - C[ax] - B[ax];\n              return t * (C[ax] + t * (B[ax] + t * A[ax]));\n            },\n            xDeriv = function xDeriv(t) {\n              return C[0] + t * (2 * B[0] + 3 * A[0] * t);\n            },\n            xForT = function xForT(t) {\n              var x = t,\n                i = 0,\n                z;\n              while (++i < 14) {\n                z = bezCoOrd(x, 0) - t;\n                if (Math.abs(z) < 1e-3) break;\n                x -= z / xDeriv(x);\n              }\n              return x;\n            };\n          return function (t) {\n            return bezCoOrd(xForT(t), 1);\n          };\n        };\n        $.easing[encodedFuncName] = function (x, t, b, c, d) {\n          return c * polyBez([coOrdArray[0], coOrdArray[1]], [coOrdArray[2], coOrdArray[3]])(t / d) + b;\n        };\n      }\n      return encodedFuncName;\n    }\n  });\n});\n\n//# sourceURL=webpack://jakob1482.github.io/./node_modules/jquery-bez/lib/jquery.bez.js?");

/***/ }),

/***/ "./node_modules/jquery-bridget/jquery-bridget.js":
/*!*******************************************************!*\
  !*** ./node_modules/jquery-bridget/jquery-bridget.js ***!
  \*******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("/* module decorator */ module = __webpack_require__.nmd(module);\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\n/**\n * Bridget makes jQuery widgets\n * v3.0.1\n * MIT license\n */\n\n(function (window, factory) {\n  // module definition\n  if (( false ? 0 : _typeof(module)) == 'object' && module.exports) {\n    // CommonJS\n    module.exports = factory(window, __webpack_require__(/*! jquery */ \"./node_modules/jquery/dist/jquery.js\"));\n  } else {\n    // browser global\n    window.jQueryBridget = factory(window, window.jQuery);\n  }\n})(window, function factory(window, jQuery) {\n  // ----- utils ----- //\n\n  // helper function for logging errors\n  // $.error breaks jQuery chaining\n  var console = window.console;\n  var logError = typeof console == 'undefined' ? function () {} : function (message) {\n    console.error(message);\n  };\n\n  // ----- jQueryBridget ----- //\n\n  function jQueryBridget(namespace, PluginClass, $) {\n    $ = $ || jQuery || window.jQuery;\n    if (!$) {\n      return;\n    }\n\n    // add option method -> $().plugin('option', {...})\n    if (!PluginClass.prototype.option) {\n      // option setter\n      PluginClass.prototype.option = function (opts) {\n        if (!opts) return;\n        this.options = Object.assign(this.options || {}, opts);\n      };\n    }\n\n    // make jQuery plugin\n    $.fn[namespace] = function (arg0) {\n      if (typeof arg0 == 'string') {\n        for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n          args[_key - 1] = arguments[_key];\n        }\n        // method call $().plugin( 'methodName', { options } )\n        return methodCall(this, arg0, args);\n      }\n      // just $().plugin({ options })\n      plainCall(this, arg0);\n      return this;\n    };\n\n    // $().plugin('methodName')\n    function methodCall($elems, methodName, args) {\n      var returnValue;\n      var pluginMethodStr = \"$().\".concat(namespace, \"(\\\"\").concat(methodName, \"\\\")\");\n      $elems.each(function (i, elem) {\n        // get instance\n        var instance = $.data(elem, namespace);\n        if (!instance) {\n          logError(\"\".concat(namespace, \" not initialized.\") + \" Cannot call method \".concat(pluginMethodStr));\n          return;\n        }\n        var method = instance[methodName];\n        if (!method || methodName.charAt(0) == '_') {\n          logError(\"\".concat(pluginMethodStr, \" is not a valid method\"));\n          return;\n        }\n\n        // apply method, get return value\n        var value = method.apply(instance, args);\n        // set return value if value is returned, use only first value\n        returnValue = returnValue === undefined ? value : returnValue;\n      });\n      return returnValue !== undefined ? returnValue : $elems;\n    }\n    function plainCall($elems, options) {\n      $elems.each(function (i, elem) {\n        var instance = $.data(elem, namespace);\n        if (instance) {\n          // set options & init\n          instance.option(options);\n          instance._init();\n        } else {\n          // initialize new instance\n          instance = new PluginClass(elem, options);\n          $.data(elem, namespace, instance);\n        }\n      });\n    }\n  }\n\n  // -----  ----- //\n\n  return jQueryBridget;\n});\n\n//# sourceURL=webpack://jakob1482.github.io/./node_modules/jquery-bridget/jquery-bridget.js?");

/***/ }),

/***/ "./node_modules/jquery/dist/jquery.js":
/*!********************************************!*\
  !*** ./node_modules/jquery/dist/jquery.js ***!
  \********************************************/
/***/ (function(module, exports, __webpack_require__) {

eval("/* module decorator */ module = __webpack_require__.nmd(module);\nvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;function _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\n/*!\n * jQuery JavaScript Library v3.7.1\n * https://jquery.com/\n *\n * Copyright OpenJS Foundation and other contributors\n * Released under the MIT license\n * https://jquery.org/license\n *\n * Date: 2023-08-28T13:37Z\n */\n(function (global, factory) {\n  \"use strict\";\n\n  if (( false ? 0 : _typeof(module)) === \"object\" && _typeof(module.exports) === \"object\") {\n    // For CommonJS and CommonJS-like environments where a proper `window`\n    // is present, execute the factory and get jQuery.\n    // For environments that do not have a `window` with a `document`\n    // (such as Node.js), expose a factory as module.exports.\n    // This accentuates the need for the creation of a real `window`.\n    // e.g. var jQuery = require(\"jquery\")(window);\n    // See ticket trac-14549 for more info.\n    module.exports = global.document ? factory(global, true) : function (w) {\n      if (!w.document) {\n        throw new Error(\"jQuery requires a window with a document\");\n      }\n      return factory(w);\n    };\n  } else {\n    factory(global);\n  }\n\n  // Pass this if window is not defined yet\n})(typeof window !== \"undefined\" ? window : this, function (window, noGlobal) {\n  // Edge <= 12 - 13+, Firefox <=18 - 45+, IE 10 - 11, Safari 5.1 - 9+, iOS 6 - 9.1\n  // throw exceptions when non-strict code (e.g., ASP.NET 4.5) accesses strict mode\n  // arguments.callee.caller (trac-13335). But as of jQuery 3.0 (2016), strict mode should be common\n  // enough that all such attempts are guarded in a try block.\n  \"use strict\";\n\n  var arr = [];\n  var getProto = Object.getPrototypeOf;\n  var _slice = arr.slice;\n  var flat = arr.flat ? function (array) {\n    return arr.flat.call(array);\n  } : function (array) {\n    return arr.concat.apply([], array);\n  };\n  var push = arr.push;\n  var indexOf = arr.indexOf;\n  var class2type = {};\n  var toString = class2type.toString;\n  var hasOwn = class2type.hasOwnProperty;\n  var fnToString = hasOwn.toString;\n  var ObjectFunctionString = fnToString.call(Object);\n  var support = {};\n  var isFunction = function isFunction(obj) {\n    // Support: Chrome <=57, Firefox <=52\n    // In some browsers, typeof returns \"function\" for HTML <object> elements\n    // (i.e., `typeof document.createElement( \"object\" ) === \"function\"`).\n    // We don't want to classify *any* DOM node as a function.\n    // Support: QtWeb <=3.8.5, WebKit <=534.34, wkhtmltopdf tool <=0.12.5\n    // Plus for old WebKit, typeof returns \"function\" for HTML collections\n    // (e.g., `typeof document.getElementsByTagName(\"div\") === \"function\"`). (gh-4756)\n    return typeof obj === \"function\" && typeof obj.nodeType !== \"number\" && typeof obj.item !== \"function\";\n  };\n  var isWindow = function isWindow(obj) {\n    return obj != null && obj === obj.window;\n  };\n  var document = window.document;\n  var preservedScriptAttributes = {\n    type: true,\n    src: true,\n    nonce: true,\n    noModule: true\n  };\n  function DOMEval(code, node, doc) {\n    doc = doc || document;\n    var i,\n      val,\n      script = doc.createElement(\"script\");\n    script.text = code;\n    if (node) {\n      for (i in preservedScriptAttributes) {\n        // Support: Firefox 64+, Edge 18+\n        // Some browsers don't support the \"nonce\" property on scripts.\n        // On the other hand, just using `getAttribute` is not enough as\n        // the `nonce` attribute is reset to an empty string whenever it\n        // becomes browsing-context connected.\n        // See https://github.com/whatwg/html/issues/2369\n        // See https://html.spec.whatwg.org/#nonce-attributes\n        // The `node.getAttribute` check was added for the sake of\n        // `jQuery.globalEval` so that it can fake a nonce-containing node\n        // via an object.\n        val = node[i] || node.getAttribute && node.getAttribute(i);\n        if (val) {\n          script.setAttribute(i, val);\n        }\n      }\n    }\n    doc.head.appendChild(script).parentNode.removeChild(script);\n  }\n  function toType(obj) {\n    if (obj == null) {\n      return obj + \"\";\n    }\n\n    // Support: Android <=2.3 only (functionish RegExp)\n    return _typeof(obj) === \"object\" || typeof obj === \"function\" ? class2type[toString.call(obj)] || \"object\" : _typeof(obj);\n  }\n  /* global Symbol */\n  // Defining this global in .eslintrc.json would create a danger of using the global\n  // unguarded in another place, it seems safer to define global only for this module\n\n  var version = \"3.7.1\",\n    rhtmlSuffix = /HTML$/i,\n    // Define a local copy of jQuery\n    jQuery = function jQuery(selector, context) {\n      // The jQuery object is actually just the init constructor 'enhanced'\n      // Need init if jQuery is called (just allow error to be thrown if not included)\n      return new jQuery.fn.init(selector, context);\n    };\n  jQuery.fn = jQuery.prototype = {\n    // The current version of jQuery being used\n    jquery: version,\n    constructor: jQuery,\n    // The default length of a jQuery object is 0\n    length: 0,\n    toArray: function toArray() {\n      return _slice.call(this);\n    },\n    // Get the Nth element in the matched element set OR\n    // Get the whole matched element set as a clean array\n    get: function get(num) {\n      // Return all the elements in a clean array\n      if (num == null) {\n        return _slice.call(this);\n      }\n\n      // Return just the one element from the set\n      return num < 0 ? this[num + this.length] : this[num];\n    },\n    // Take an array of elements and push it onto the stack\n    // (returning the new matched element set)\n    pushStack: function pushStack(elems) {\n      // Build a new jQuery matched element set\n      var ret = jQuery.merge(this.constructor(), elems);\n\n      // Add the old object onto the stack (as a reference)\n      ret.prevObject = this;\n\n      // Return the newly-formed element set\n      return ret;\n    },\n    // Execute a callback for every element in the matched set.\n    each: function each(callback) {\n      return jQuery.each(this, callback);\n    },\n    map: function map(callback) {\n      return this.pushStack(jQuery.map(this, function (elem, i) {\n        return callback.call(elem, i, elem);\n      }));\n    },\n    slice: function slice() {\n      return this.pushStack(_slice.apply(this, arguments));\n    },\n    first: function first() {\n      return this.eq(0);\n    },\n    last: function last() {\n      return this.eq(-1);\n    },\n    even: function even() {\n      return this.pushStack(jQuery.grep(this, function (_elem, i) {\n        return (i + 1) % 2;\n      }));\n    },\n    odd: function odd() {\n      return this.pushStack(jQuery.grep(this, function (_elem, i) {\n        return i % 2;\n      }));\n    },\n    eq: function eq(i) {\n      var len = this.length,\n        j = +i + (i < 0 ? len : 0);\n      return this.pushStack(j >= 0 && j < len ? [this[j]] : []);\n    },\n    end: function end() {\n      return this.prevObject || this.constructor();\n    },\n    // For internal use only.\n    // Behaves like an Array's method, not like a jQuery method.\n    push: push,\n    sort: arr.sort,\n    splice: arr.splice\n  };\n  jQuery.extend = jQuery.fn.extend = function () {\n    var options,\n      name,\n      src,\n      copy,\n      copyIsArray,\n      clone,\n      target = arguments[0] || {},\n      i = 1,\n      length = arguments.length,\n      deep = false;\n\n    // Handle a deep copy situation\n    if (typeof target === \"boolean\") {\n      deep = target;\n\n      // Skip the boolean and the target\n      target = arguments[i] || {};\n      i++;\n    }\n\n    // Handle case when target is a string or something (possible in deep copy)\n    if (_typeof(target) !== \"object\" && !isFunction(target)) {\n      target = {};\n    }\n\n    // Extend jQuery itself if only one argument is passed\n    if (i === length) {\n      target = this;\n      i--;\n    }\n    for (; i < length; i++) {\n      // Only deal with non-null/undefined values\n      if ((options = arguments[i]) != null) {\n        // Extend the base object\n        for (name in options) {\n          copy = options[name];\n\n          // Prevent Object.prototype pollution\n          // Prevent never-ending loop\n          if (name === \"__proto__\" || target === copy) {\n            continue;\n          }\n\n          // Recurse if we're merging plain objects or arrays\n          if (deep && copy && (jQuery.isPlainObject(copy) || (copyIsArray = Array.isArray(copy)))) {\n            src = target[name];\n\n            // Ensure proper type for the source value\n            if (copyIsArray && !Array.isArray(src)) {\n              clone = [];\n            } else if (!copyIsArray && !jQuery.isPlainObject(src)) {\n              clone = {};\n            } else {\n              clone = src;\n            }\n            copyIsArray = false;\n\n            // Never move original objects, clone them\n            target[name] = jQuery.extend(deep, clone, copy);\n\n            // Don't bring in undefined values\n          } else if (copy !== undefined) {\n            target[name] = copy;\n          }\n        }\n      }\n    }\n\n    // Return the modified object\n    return target;\n  };\n  jQuery.extend({\n    // Unique for each copy of jQuery on the page\n    expando: \"jQuery\" + (version + Math.random()).replace(/\\D/g, \"\"),\n    // Assume jQuery is ready without the ready module\n    isReady: true,\n    error: function error(msg) {\n      throw new Error(msg);\n    },\n    noop: function noop() {},\n    isPlainObject: function isPlainObject(obj) {\n      var proto, Ctor;\n\n      // Detect obvious negatives\n      // Use toString instead of jQuery.type to catch host objects\n      if (!obj || toString.call(obj) !== \"[object Object]\") {\n        return false;\n      }\n      proto = getProto(obj);\n\n      // Objects with no prototype (e.g., `Object.create( null )`) are plain\n      if (!proto) {\n        return true;\n      }\n\n      // Objects with prototype are plain iff they were constructed by a global Object function\n      Ctor = hasOwn.call(proto, \"constructor\") && proto.constructor;\n      return typeof Ctor === \"function\" && fnToString.call(Ctor) === ObjectFunctionString;\n    },\n    isEmptyObject: function isEmptyObject(obj) {\n      var name;\n      for (name in obj) {\n        return false;\n      }\n      return true;\n    },\n    // Evaluates a script in a provided context; falls back to the global one\n    // if not specified.\n    globalEval: function globalEval(code, options, doc) {\n      DOMEval(code, {\n        nonce: options && options.nonce\n      }, doc);\n    },\n    each: function each(obj, callback) {\n      var length,\n        i = 0;\n      if (isArrayLike(obj)) {\n        length = obj.length;\n        for (; i < length; i++) {\n          if (callback.call(obj[i], i, obj[i]) === false) {\n            break;\n          }\n        }\n      } else {\n        for (i in obj) {\n          if (callback.call(obj[i], i, obj[i]) === false) {\n            break;\n          }\n        }\n      }\n      return obj;\n    },\n    // Retrieve the text value of an array of DOM nodes\n    text: function text(elem) {\n      var node,\n        ret = \"\",\n        i = 0,\n        nodeType = elem.nodeType;\n      if (!nodeType) {\n        // If no nodeType, this is expected to be an array\n        while (node = elem[i++]) {\n          // Do not traverse comment nodes\n          ret += jQuery.text(node);\n        }\n      }\n      if (nodeType === 1 || nodeType === 11) {\n        return elem.textContent;\n      }\n      if (nodeType === 9) {\n        return elem.documentElement.textContent;\n      }\n      if (nodeType === 3 || nodeType === 4) {\n        return elem.nodeValue;\n      }\n\n      // Do not include comment or processing instruction nodes\n\n      return ret;\n    },\n    // results is for internal usage only\n    makeArray: function makeArray(arr, results) {\n      var ret = results || [];\n      if (arr != null) {\n        if (isArrayLike(Object(arr))) {\n          jQuery.merge(ret, typeof arr === \"string\" ? [arr] : arr);\n        } else {\n          push.call(ret, arr);\n        }\n      }\n      return ret;\n    },\n    inArray: function inArray(elem, arr, i) {\n      return arr == null ? -1 : indexOf.call(arr, elem, i);\n    },\n    isXMLDoc: function isXMLDoc(elem) {\n      var namespace = elem && elem.namespaceURI,\n        docElem = elem && (elem.ownerDocument || elem).documentElement;\n\n      // Assume HTML when documentElement doesn't yet exist, such as inside\n      // document fragments.\n      return !rhtmlSuffix.test(namespace || docElem && docElem.nodeName || \"HTML\");\n    },\n    // Support: Android <=4.0 only, PhantomJS 1 only\n    // push.apply(_, arraylike) throws on ancient WebKit\n    merge: function merge(first, second) {\n      var len = +second.length,\n        j = 0,\n        i = first.length;\n      for (; j < len; j++) {\n        first[i++] = second[j];\n      }\n      first.length = i;\n      return first;\n    },\n    grep: function grep(elems, callback, invert) {\n      var callbackInverse,\n        matches = [],\n        i = 0,\n        length = elems.length,\n        callbackExpect = !invert;\n\n      // Go through the array, only saving the items\n      // that pass the validator function\n      for (; i < length; i++) {\n        callbackInverse = !callback(elems[i], i);\n        if (callbackInverse !== callbackExpect) {\n          matches.push(elems[i]);\n        }\n      }\n      return matches;\n    },\n    // arg is for internal usage only\n    map: function map(elems, callback, arg) {\n      var length,\n        value,\n        i = 0,\n        ret = [];\n\n      // Go through the array, translating each of the items to their new values\n      if (isArrayLike(elems)) {\n        length = elems.length;\n        for (; i < length; i++) {\n          value = callback(elems[i], i, arg);\n          if (value != null) {\n            ret.push(value);\n          }\n        }\n\n        // Go through every key on the object,\n      } else {\n        for (i in elems) {\n          value = callback(elems[i], i, arg);\n          if (value != null) {\n            ret.push(value);\n          }\n        }\n      }\n\n      // Flatten any nested arrays\n      return flat(ret);\n    },\n    // A global GUID counter for objects\n    guid: 1,\n    // jQuery.support is not used in Core but other projects attach their\n    // properties to it so it needs to exist.\n    support: support\n  });\n  if (typeof Symbol === \"function\") {\n    jQuery.fn[Symbol.iterator] = arr[Symbol.iterator];\n  }\n\n  // Populate the class2type map\n  jQuery.each(\"Boolean Number String Function Array Date RegExp Object Error Symbol\".split(\" \"), function (_i, name) {\n    class2type[\"[object \" + name + \"]\"] = name.toLowerCase();\n  });\n  function isArrayLike(obj) {\n    // Support: real iOS 8.2 only (not reproducible in simulator)\n    // `in` check used to prevent JIT error (gh-2145)\n    // hasOwn isn't used here due to false negatives\n    // regarding Nodelist length in IE\n    var length = !!obj && \"length\" in obj && obj.length,\n      type = toType(obj);\n    if (isFunction(obj) || isWindow(obj)) {\n      return false;\n    }\n    return type === \"array\" || length === 0 || typeof length === \"number\" && length > 0 && length - 1 in obj;\n  }\n  function nodeName(elem, name) {\n    return elem.nodeName && elem.nodeName.toLowerCase() === name.toLowerCase();\n  }\n  var pop = arr.pop;\n  var sort = arr.sort;\n  var splice = arr.splice;\n  var whitespace = \"[\\\\x20\\\\t\\\\r\\\\n\\\\f]\";\n  var rtrimCSS = new RegExp(\"^\" + whitespace + \"+|((?:^|[^\\\\\\\\])(?:\\\\\\\\.)*)\" + whitespace + \"+$\", \"g\");\n\n  // Note: an element does not contain itself\n  jQuery.contains = function (a, b) {\n    var bup = b && b.parentNode;\n    return a === bup || !!(bup && bup.nodeType === 1 && (\n    // Support: IE 9 - 11+\n    // IE doesn't have `contains` on SVG.\n    a.contains ? a.contains(bup) : a.compareDocumentPosition && a.compareDocumentPosition(bup) & 16));\n  };\n\n  // CSS string/identifier serialization\n  // https://drafts.csswg.org/cssom/#common-serializing-idioms\n  var rcssescape = /([\\0-\\x1f\\x7f]|^-?\\d)|^-$|[^\\x80-\\uFFFF\\w-]/g;\n  function fcssescape(ch, asCodePoint) {\n    if (asCodePoint) {\n      // U+0000 NULL becomes U+FFFD REPLACEMENT CHARACTER\n      if (ch === \"\\0\") {\n        return \"\\uFFFD\";\n      }\n\n      // Control characters and (dependent upon position) numbers get escaped as code points\n      return ch.slice(0, -1) + \"\\\\\" + ch.charCodeAt(ch.length - 1).toString(16) + \" \";\n    }\n\n    // Other potentially-special ASCII characters get backslash-escaped\n    return \"\\\\\" + ch;\n  }\n  jQuery.escapeSelector = function (sel) {\n    return (sel + \"\").replace(rcssescape, fcssescape);\n  };\n  var preferredDoc = document,\n    pushNative = push;\n  (function () {\n    var i,\n      Expr,\n      outermostContext,\n      sortInput,\n      hasDuplicate,\n      push = pushNative,\n      // Local document vars\n      document,\n      documentElement,\n      documentIsHTML,\n      rbuggyQSA,\n      matches,\n      // Instance-specific data\n      expando = jQuery.expando,\n      dirruns = 0,\n      done = 0,\n      classCache = createCache(),\n      tokenCache = createCache(),\n      compilerCache = createCache(),\n      nonnativeSelectorCache = createCache(),\n      sortOrder = function sortOrder(a, b) {\n        if (a === b) {\n          hasDuplicate = true;\n        }\n        return 0;\n      },\n      booleans = \"checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|\" + \"loop|multiple|open|readonly|required|scoped\",\n      // Regular expressions\n\n      // https://www.w3.org/TR/css-syntax-3/#ident-token-diagram\n      identifier = \"(?:\\\\\\\\[\\\\da-fA-F]{1,6}\" + whitespace + \"?|\\\\\\\\[^\\\\r\\\\n\\\\f]|[\\\\w-]|[^\\0-\\\\x7f])+\",\n      // Attribute selectors: https://www.w3.org/TR/selectors/#attribute-selectors\n      attributes = \"\\\\[\" + whitespace + \"*(\" + identifier + \")(?:\" + whitespace +\n      // Operator (capture 2)\n      \"*([*^$|!~]?=)\" + whitespace +\n      // \"Attribute values must be CSS identifiers [capture 5] or strings [capture 3 or capture 4]\"\n      \"*(?:'((?:\\\\\\\\.|[^\\\\\\\\'])*)'|\\\"((?:\\\\\\\\.|[^\\\\\\\\\\\"])*)\\\"|(\" + identifier + \"))|)\" + whitespace + \"*\\\\]\",\n      pseudos = \":(\" + identifier + \")(?:\\\\((\" +\n      // To reduce the number of selectors needing tokenize in the preFilter, prefer arguments:\n      // 1. quoted (capture 3; capture 4 or capture 5)\n      \"('((?:\\\\\\\\.|[^\\\\\\\\'])*)'|\\\"((?:\\\\\\\\.|[^\\\\\\\\\\\"])*)\\\")|\" +\n      // 2. simple (capture 6)\n      \"((?:\\\\\\\\.|[^\\\\\\\\()[\\\\]]|\" + attributes + \")*)|\" +\n      // 3. anything else (capture 2)\n      \".*\" + \")\\\\)|)\",\n      // Leading and non-escaped trailing whitespace, capturing some non-whitespace characters preceding the latter\n      rwhitespace = new RegExp(whitespace + \"+\", \"g\"),\n      rcomma = new RegExp(\"^\" + whitespace + \"*,\" + whitespace + \"*\"),\n      rleadingCombinator = new RegExp(\"^\" + whitespace + \"*([>+~]|\" + whitespace + \")\" + whitespace + \"*\"),\n      rdescend = new RegExp(whitespace + \"|>\"),\n      rpseudo = new RegExp(pseudos),\n      ridentifier = new RegExp(\"^\" + identifier + \"$\"),\n      matchExpr = {\n        ID: new RegExp(\"^#(\" + identifier + \")\"),\n        CLASS: new RegExp(\"^\\\\.(\" + identifier + \")\"),\n        TAG: new RegExp(\"^(\" + identifier + \"|[*])\"),\n        ATTR: new RegExp(\"^\" + attributes),\n        PSEUDO: new RegExp(\"^\" + pseudos),\n        CHILD: new RegExp(\"^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\\\(\" + whitespace + \"*(even|odd|(([+-]|)(\\\\d*)n|)\" + whitespace + \"*(?:([+-]|)\" + whitespace + \"*(\\\\d+)|))\" + whitespace + \"*\\\\)|)\", \"i\"),\n        bool: new RegExp(\"^(?:\" + booleans + \")$\", \"i\"),\n        // For use in libraries implementing .is()\n        // We use this for POS matching in `select`\n        needsContext: new RegExp(\"^\" + whitespace + \"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\\\(\" + whitespace + \"*((?:-\\\\d)?\\\\d*)\" + whitespace + \"*\\\\)|)(?=[^-]|$)\", \"i\")\n      },\n      rinputs = /^(?:input|select|textarea|button)$/i,\n      rheader = /^h\\d$/i,\n      // Easily-parseable/retrievable ID or TAG or CLASS selectors\n      rquickExpr = /^(?:#([\\w-]+)|(\\w+)|\\.([\\w-]+))$/,\n      rsibling = /[+~]/,\n      // CSS escapes\n      // https://www.w3.org/TR/CSS21/syndata.html#escaped-characters\n      runescape = new RegExp(\"\\\\\\\\[\\\\da-fA-F]{1,6}\" + whitespace + \"?|\\\\\\\\([^\\\\r\\\\n\\\\f])\", \"g\"),\n      funescape = function funescape(escape, nonHex) {\n        var high = \"0x\" + escape.slice(1) - 0x10000;\n        if (nonHex) {\n          // Strip the backslash prefix from a non-hex escape sequence\n          return nonHex;\n        }\n\n        // Replace a hexadecimal escape sequence with the encoded Unicode code point\n        // Support: IE <=11+\n        // For values outside the Basic Multilingual Plane (BMP), manually construct a\n        // surrogate pair\n        return high < 0 ? String.fromCharCode(high + 0x10000) : String.fromCharCode(high >> 10 | 0xD800, high & 0x3FF | 0xDC00);\n      },\n      // Used for iframes; see `setDocument`.\n      // Support: IE 9 - 11+, Edge 12 - 18+\n      // Removing the function wrapper causes a \"Permission Denied\"\n      // error in IE/Edge.\n      unloadHandler = function unloadHandler() {\n        setDocument();\n      },\n      inDisabledFieldset = addCombinator(function (elem) {\n        return elem.disabled === true && nodeName(elem, \"fieldset\");\n      }, {\n        dir: \"parentNode\",\n        next: \"legend\"\n      });\n\n    // Support: IE <=9 only\n    // Accessing document.activeElement can throw unexpectedly\n    // https://bugs.jquery.com/ticket/13393\n    function safeActiveElement() {\n      try {\n        return document.activeElement;\n      } catch (err) {}\n    }\n\n    // Optimize for push.apply( _, NodeList )\n    try {\n      push.apply(arr = _slice.call(preferredDoc.childNodes), preferredDoc.childNodes);\n\n      // Support: Android <=4.0\n      // Detect silently failing push.apply\n      // eslint-disable-next-line no-unused-expressions\n      arr[preferredDoc.childNodes.length].nodeType;\n    } catch (e) {\n      push = {\n        apply: function apply(target, els) {\n          pushNative.apply(target, _slice.call(els));\n        },\n        call: function call(target) {\n          pushNative.apply(target, _slice.call(arguments, 1));\n        }\n      };\n    }\n    function find(selector, context, results, seed) {\n      var m,\n        i,\n        elem,\n        nid,\n        match,\n        groups,\n        newSelector,\n        newContext = context && context.ownerDocument,\n        // nodeType defaults to 9, since context defaults to document\n        nodeType = context ? context.nodeType : 9;\n      results = results || [];\n\n      // Return early from calls with invalid selector or context\n      if (typeof selector !== \"string\" || !selector || nodeType !== 1 && nodeType !== 9 && nodeType !== 11) {\n        return results;\n      }\n\n      // Try to shortcut find operations (as opposed to filters) in HTML documents\n      if (!seed) {\n        setDocument(context);\n        context = context || document;\n        if (documentIsHTML) {\n          // If the selector is sufficiently simple, try using a \"get*By*\" DOM method\n          // (excepting DocumentFragment context, where the methods don't exist)\n          if (nodeType !== 11 && (match = rquickExpr.exec(selector))) {\n            // ID selector\n            if (m = match[1]) {\n              // Document context\n              if (nodeType === 9) {\n                if (elem = context.getElementById(m)) {\n                  // Support: IE 9 only\n                  // getElementById can match elements by name instead of ID\n                  if (elem.id === m) {\n                    push.call(results, elem);\n                    return results;\n                  }\n                } else {\n                  return results;\n                }\n\n                // Element context\n              } else {\n                // Support: IE 9 only\n                // getElementById can match elements by name instead of ID\n                if (newContext && (elem = newContext.getElementById(m)) && find.contains(context, elem) && elem.id === m) {\n                  push.call(results, elem);\n                  return results;\n                }\n              }\n\n              // Type selector\n            } else if (match[2]) {\n              push.apply(results, context.getElementsByTagName(selector));\n              return results;\n\n              // Class selector\n            } else if ((m = match[3]) && context.getElementsByClassName) {\n              push.apply(results, context.getElementsByClassName(m));\n              return results;\n            }\n          }\n\n          // Take advantage of querySelectorAll\n          if (!nonnativeSelectorCache[selector + \" \"] && (!rbuggyQSA || !rbuggyQSA.test(selector))) {\n            newSelector = selector;\n            newContext = context;\n\n            // qSA considers elements outside a scoping root when evaluating child or\n            // descendant combinators, which is not what we want.\n            // In such cases, we work around the behavior by prefixing every selector in the\n            // list with an ID selector referencing the scope context.\n            // The technique has to be used as well when a leading combinator is used\n            // as such selectors are not recognized by querySelectorAll.\n            // Thanks to Andrew Dupont for this technique.\n            if (nodeType === 1 && (rdescend.test(selector) || rleadingCombinator.test(selector))) {\n              // Expand context for sibling selectors\n              newContext = rsibling.test(selector) && testContext(context.parentNode) || context;\n\n              // We can use :scope instead of the ID hack if the browser\n              // supports it & if we're not changing the context.\n              // Support: IE 11+, Edge 17 - 18+\n              // IE/Edge sometimes throw a \"Permission denied\" error when\n              // strict-comparing two documents; shallow comparisons work.\n              // eslint-disable-next-line eqeqeq\n              if (newContext != context || !support.scope) {\n                // Capture the context ID, setting it first if necessary\n                if (nid = context.getAttribute(\"id\")) {\n                  nid = jQuery.escapeSelector(nid);\n                } else {\n                  context.setAttribute(\"id\", nid = expando);\n                }\n              }\n\n              // Prefix every selector in the list\n              groups = tokenize(selector);\n              i = groups.length;\n              while (i--) {\n                groups[i] = (nid ? \"#\" + nid : \":scope\") + \" \" + toSelector(groups[i]);\n              }\n              newSelector = groups.join(\",\");\n            }\n            try {\n              push.apply(results, newContext.querySelectorAll(newSelector));\n              return results;\n            } catch (qsaError) {\n              nonnativeSelectorCache(selector, true);\n            } finally {\n              if (nid === expando) {\n                context.removeAttribute(\"id\");\n              }\n            }\n          }\n        }\n      }\n\n      // All others\n      return select(selector.replace(rtrimCSS, \"$1\"), context, results, seed);\n    }\n\n    /**\n     * Create key-value caches of limited size\n     * @returns {function(string, object)} Returns the Object data after storing it on itself with\n     *\tproperty name the (space-suffixed) string and (if the cache is larger than Expr.cacheLength)\n     *\tdeleting the oldest entry\n     */\n    function createCache() {\n      var keys = [];\n      function cache(key, value) {\n        // Use (key + \" \") to avoid collision with native prototype properties\n        // (see https://github.com/jquery/sizzle/issues/157)\n        if (keys.push(key + \" \") > Expr.cacheLength) {\n          // Only keep the most recent entries\n          delete cache[keys.shift()];\n        }\n        return cache[key + \" \"] = value;\n      }\n      return cache;\n    }\n\n    /**\n     * Mark a function for special use by jQuery selector module\n     * @param {Function} fn The function to mark\n     */\n    function markFunction(fn) {\n      fn[expando] = true;\n      return fn;\n    }\n\n    /**\n     * Support testing using an element\n     * @param {Function} fn Passed the created element and returns a boolean result\n     */\n    function assert(fn) {\n      var el = document.createElement(\"fieldset\");\n      try {\n        return !!fn(el);\n      } catch (e) {\n        return false;\n      } finally {\n        // Remove from its parent by default\n        if (el.parentNode) {\n          el.parentNode.removeChild(el);\n        }\n\n        // release memory in IE\n        el = null;\n      }\n    }\n\n    /**\n     * Returns a function to use in pseudos for input types\n     * @param {String} type\n     */\n    function createInputPseudo(type) {\n      return function (elem) {\n        return nodeName(elem, \"input\") && elem.type === type;\n      };\n    }\n\n    /**\n     * Returns a function to use in pseudos for buttons\n     * @param {String} type\n     */\n    function createButtonPseudo(type) {\n      return function (elem) {\n        return (nodeName(elem, \"input\") || nodeName(elem, \"button\")) && elem.type === type;\n      };\n    }\n\n    /**\n     * Returns a function to use in pseudos for :enabled/:disabled\n     * @param {Boolean} disabled true for :disabled; false for :enabled\n     */\n    function createDisabledPseudo(disabled) {\n      // Known :disabled false positives: fieldset[disabled] > legend:nth-of-type(n+2) :can-disable\n      return function (elem) {\n        // Only certain elements can match :enabled or :disabled\n        // https://html.spec.whatwg.org/multipage/scripting.html#selector-enabled\n        // https://html.spec.whatwg.org/multipage/scripting.html#selector-disabled\n        if (\"form\" in elem) {\n          // Check for inherited disabledness on relevant non-disabled elements:\n          // * listed form-associated elements in a disabled fieldset\n          //   https://html.spec.whatwg.org/multipage/forms.html#category-listed\n          //   https://html.spec.whatwg.org/multipage/forms.html#concept-fe-disabled\n          // * option elements in a disabled optgroup\n          //   https://html.spec.whatwg.org/multipage/forms.html#concept-option-disabled\n          // All such elements have a \"form\" property.\n          if (elem.parentNode && elem.disabled === false) {\n            // Option elements defer to a parent optgroup if present\n            if (\"label\" in elem) {\n              if (\"label\" in elem.parentNode) {\n                return elem.parentNode.disabled === disabled;\n              } else {\n                return elem.disabled === disabled;\n              }\n            }\n\n            // Support: IE 6 - 11+\n            // Use the isDisabled shortcut property to check for disabled fieldset ancestors\n            return elem.isDisabled === disabled ||\n            // Where there is no isDisabled, check manually\n            elem.isDisabled !== !disabled && inDisabledFieldset(elem) === disabled;\n          }\n          return elem.disabled === disabled;\n\n          // Try to winnow out elements that can't be disabled before trusting the disabled property.\n          // Some victims get caught in our net (label, legend, menu, track), but it shouldn't\n          // even exist on them, let alone have a boolean value.\n        } else if (\"label\" in elem) {\n          return elem.disabled === disabled;\n        }\n\n        // Remaining elements are neither :enabled nor :disabled\n        return false;\n      };\n    }\n\n    /**\n     * Returns a function to use in pseudos for positionals\n     * @param {Function} fn\n     */\n    function createPositionalPseudo(fn) {\n      return markFunction(function (argument) {\n        argument = +argument;\n        return markFunction(function (seed, matches) {\n          var j,\n            matchIndexes = fn([], seed.length, argument),\n            i = matchIndexes.length;\n\n          // Match elements found at the specified indexes\n          while (i--) {\n            if (seed[j = matchIndexes[i]]) {\n              seed[j] = !(matches[j] = seed[j]);\n            }\n          }\n        });\n      });\n    }\n\n    /**\n     * Checks a node for validity as a jQuery selector context\n     * @param {Element|Object=} context\n     * @returns {Element|Object|Boolean} The input node if acceptable, otherwise a falsy value\n     */\n    function testContext(context) {\n      return context && typeof context.getElementsByTagName !== \"undefined\" && context;\n    }\n\n    /**\n     * Sets document-related variables once based on the current document\n     * @param {Element|Object} [node] An element or document object to use to set the document\n     * @returns {Object} Returns the current document\n     */\n    function setDocument(node) {\n      var subWindow,\n        doc = node ? node.ownerDocument || node : preferredDoc;\n\n      // Return early if doc is invalid or already selected\n      // Support: IE 11+, Edge 17 - 18+\n      // IE/Edge sometimes throw a \"Permission denied\" error when strict-comparing\n      // two documents; shallow comparisons work.\n      // eslint-disable-next-line eqeqeq\n      if (doc == document || doc.nodeType !== 9 || !doc.documentElement) {\n        return document;\n      }\n\n      // Update global variables\n      document = doc;\n      documentElement = document.documentElement;\n      documentIsHTML = !jQuery.isXMLDoc(document);\n\n      // Support: iOS 7 only, IE 9 - 11+\n      // Older browsers didn't support unprefixed `matches`.\n      matches = documentElement.matches || documentElement.webkitMatchesSelector || documentElement.msMatchesSelector;\n\n      // Support: IE 9 - 11+, Edge 12 - 18+\n      // Accessing iframe documents after unload throws \"permission denied\" errors\n      // (see trac-13936).\n      // Limit the fix to IE & Edge Legacy; despite Edge 15+ implementing `matches`,\n      // all IE 9+ and Edge Legacy versions implement `msMatchesSelector` as well.\n      if (documentElement.msMatchesSelector &&\n      // Support: IE 11+, Edge 17 - 18+\n      // IE/Edge sometimes throw a \"Permission denied\" error when strict-comparing\n      // two documents; shallow comparisons work.\n      // eslint-disable-next-line eqeqeq\n      preferredDoc != document && (subWindow = document.defaultView) && subWindow.top !== subWindow) {\n        // Support: IE 9 - 11+, Edge 12 - 18+\n        subWindow.addEventListener(\"unload\", unloadHandler);\n      }\n\n      // Support: IE <10\n      // Check if getElementById returns elements by name\n      // The broken getElementById methods don't pick up programmatically-set names,\n      // so use a roundabout getElementsByName test\n      support.getById = assert(function (el) {\n        documentElement.appendChild(el).id = jQuery.expando;\n        return !document.getElementsByName || !document.getElementsByName(jQuery.expando).length;\n      });\n\n      // Support: IE 9 only\n      // Check to see if it's possible to do matchesSelector\n      // on a disconnected node.\n      support.disconnectedMatch = assert(function (el) {\n        return matches.call(el, \"*\");\n      });\n\n      // Support: IE 9 - 11+, Edge 12 - 18+\n      // IE/Edge don't support the :scope pseudo-class.\n      support.scope = assert(function () {\n        return document.querySelectorAll(\":scope\");\n      });\n\n      // Support: Chrome 105 - 111 only, Safari 15.4 - 16.3 only\n      // Make sure the `:has()` argument is parsed unforgivingly.\n      // We include `*` in the test to detect buggy implementations that are\n      // _selectively_ forgiving (specifically when the list includes at least\n      // one valid selector).\n      // Note that we treat complete lack of support for `:has()` as if it were\n      // spec-compliant support, which is fine because use of `:has()` in such\n      // environments will fail in the qSA path and fall back to jQuery traversal\n      // anyway.\n      support.cssHas = assert(function () {\n        try {\n          document.querySelector(\":has(*,:jqfake)\");\n          return false;\n        } catch (e) {\n          return true;\n        }\n      });\n\n      // ID filter and find\n      if (support.getById) {\n        Expr.filter.ID = function (id) {\n          var attrId = id.replace(runescape, funescape);\n          return function (elem) {\n            return elem.getAttribute(\"id\") === attrId;\n          };\n        };\n        Expr.find.ID = function (id, context) {\n          if (typeof context.getElementById !== \"undefined\" && documentIsHTML) {\n            var elem = context.getElementById(id);\n            return elem ? [elem] : [];\n          }\n        };\n      } else {\n        Expr.filter.ID = function (id) {\n          var attrId = id.replace(runescape, funescape);\n          return function (elem) {\n            var node = typeof elem.getAttributeNode !== \"undefined\" && elem.getAttributeNode(\"id\");\n            return node && node.value === attrId;\n          };\n        };\n\n        // Support: IE 6 - 7 only\n        // getElementById is not reliable as a find shortcut\n        Expr.find.ID = function (id, context) {\n          if (typeof context.getElementById !== \"undefined\" && documentIsHTML) {\n            var node,\n              i,\n              elems,\n              elem = context.getElementById(id);\n            if (elem) {\n              // Verify the id attribute\n              node = elem.getAttributeNode(\"id\");\n              if (node && node.value === id) {\n                return [elem];\n              }\n\n              // Fall back on getElementsByName\n              elems = context.getElementsByName(id);\n              i = 0;\n              while (elem = elems[i++]) {\n                node = elem.getAttributeNode(\"id\");\n                if (node && node.value === id) {\n                  return [elem];\n                }\n              }\n            }\n            return [];\n          }\n        };\n      }\n\n      // Tag\n      Expr.find.TAG = function (tag, context) {\n        if (typeof context.getElementsByTagName !== \"undefined\") {\n          return context.getElementsByTagName(tag);\n\n          // DocumentFragment nodes don't have gEBTN\n        } else {\n          return context.querySelectorAll(tag);\n        }\n      };\n\n      // Class\n      Expr.find.CLASS = function (className, context) {\n        if (typeof context.getElementsByClassName !== \"undefined\" && documentIsHTML) {\n          return context.getElementsByClassName(className);\n        }\n      };\n\n      /* QSA/matchesSelector\n      ---------------------------------------------------------------------- */\n\n      // QSA and matchesSelector support\n\n      rbuggyQSA = [];\n\n      // Build QSA regex\n      // Regex strategy adopted from Diego Perini\n      assert(function (el) {\n        var input;\n        documentElement.appendChild(el).innerHTML = \"<a id='\" + expando + \"' href='' disabled='disabled'></a>\" + \"<select id='\" + expando + \"-\\r\\\\' disabled='disabled'>\" + \"<option selected=''></option></select>\";\n\n        // Support: iOS <=7 - 8 only\n        // Boolean attributes and \"value\" are not treated correctly in some XML documents\n        if (!el.querySelectorAll(\"[selected]\").length) {\n          rbuggyQSA.push(\"\\\\[\" + whitespace + \"*(?:value|\" + booleans + \")\");\n        }\n\n        // Support: iOS <=7 - 8 only\n        if (!el.querySelectorAll(\"[id~=\" + expando + \"-]\").length) {\n          rbuggyQSA.push(\"~=\");\n        }\n\n        // Support: iOS 8 only\n        // https://bugs.webkit.org/show_bug.cgi?id=136851\n        // In-page `selector#id sibling-combinator selector` fails\n        if (!el.querySelectorAll(\"a#\" + expando + \"+*\").length) {\n          rbuggyQSA.push(\".#.+[+~]\");\n        }\n\n        // Support: Chrome <=105+, Firefox <=104+, Safari <=15.4+\n        // In some of the document kinds, these selectors wouldn't work natively.\n        // This is probably OK but for backwards compatibility we want to maintain\n        // handling them through jQuery traversal in jQuery 3.x.\n        if (!el.querySelectorAll(\":checked\").length) {\n          rbuggyQSA.push(\":checked\");\n        }\n\n        // Support: Windows 8 Native Apps\n        // The type and name attributes are restricted during .innerHTML assignment\n        input = document.createElement(\"input\");\n        input.setAttribute(\"type\", \"hidden\");\n        el.appendChild(input).setAttribute(\"name\", \"D\");\n\n        // Support: IE 9 - 11+\n        // IE's :disabled selector does not pick up the children of disabled fieldsets\n        // Support: Chrome <=105+, Firefox <=104+, Safari <=15.4+\n        // In some of the document kinds, these selectors wouldn't work natively.\n        // This is probably OK but for backwards compatibility we want to maintain\n        // handling them through jQuery traversal in jQuery 3.x.\n        documentElement.appendChild(el).disabled = true;\n        if (el.querySelectorAll(\":disabled\").length !== 2) {\n          rbuggyQSA.push(\":enabled\", \":disabled\");\n        }\n\n        // Support: IE 11+, Edge 15 - 18+\n        // IE 11/Edge don't find elements on a `[name='']` query in some cases.\n        // Adding a temporary attribute to the document before the selection works\n        // around the issue.\n        // Interestingly, IE 10 & older don't seem to have the issue.\n        input = document.createElement(\"input\");\n        input.setAttribute(\"name\", \"\");\n        el.appendChild(input);\n        if (!el.querySelectorAll(\"[name='']\").length) {\n          rbuggyQSA.push(\"\\\\[\" + whitespace + \"*name\" + whitespace + \"*=\" + whitespace + \"*(?:''|\\\"\\\")\");\n        }\n      });\n      if (!support.cssHas) {\n        // Support: Chrome 105 - 110+, Safari 15.4 - 16.3+\n        // Our regular `try-catch` mechanism fails to detect natively-unsupported\n        // pseudo-classes inside `:has()` (such as `:has(:contains(\"Foo\"))`)\n        // in browsers that parse the `:has()` argument as a forgiving selector list.\n        // https://drafts.csswg.org/selectors/#relational now requires the argument\n        // to be parsed unforgivingly, but browsers have not yet fully adjusted.\n        rbuggyQSA.push(\":has\");\n      }\n      rbuggyQSA = rbuggyQSA.length && new RegExp(rbuggyQSA.join(\"|\"));\n\n      /* Sorting\n      ---------------------------------------------------------------------- */\n\n      // Document order sorting\n      sortOrder = function sortOrder(a, b) {\n        // Flag for duplicate removal\n        if (a === b) {\n          hasDuplicate = true;\n          return 0;\n        }\n\n        // Sort on method existence if only one input has compareDocumentPosition\n        var compare = !a.compareDocumentPosition - !b.compareDocumentPosition;\n        if (compare) {\n          return compare;\n        }\n\n        // Calculate position if both inputs belong to the same document\n        // Support: IE 11+, Edge 17 - 18+\n        // IE/Edge sometimes throw a \"Permission denied\" error when strict-comparing\n        // two documents; shallow comparisons work.\n        // eslint-disable-next-line eqeqeq\n        compare = (a.ownerDocument || a) == (b.ownerDocument || b) ? a.compareDocumentPosition(b) :\n        // Otherwise we know they are disconnected\n        1;\n\n        // Disconnected nodes\n        if (compare & 1 || !support.sortDetached && b.compareDocumentPosition(a) === compare) {\n          // Choose the first element that is related to our preferred document\n          // Support: IE 11+, Edge 17 - 18+\n          // IE/Edge sometimes throw a \"Permission denied\" error when strict-comparing\n          // two documents; shallow comparisons work.\n          // eslint-disable-next-line eqeqeq\n          if (a === document || a.ownerDocument == preferredDoc && find.contains(preferredDoc, a)) {\n            return -1;\n          }\n\n          // Support: IE 11+, Edge 17 - 18+\n          // IE/Edge sometimes throw a \"Permission denied\" error when strict-comparing\n          // two documents; shallow comparisons work.\n          // eslint-disable-next-line eqeqeq\n          if (b === document || b.ownerDocument == preferredDoc && find.contains(preferredDoc, b)) {\n            return 1;\n          }\n\n          // Maintain original order\n          return sortInput ? indexOf.call(sortInput, a) - indexOf.call(sortInput, b) : 0;\n        }\n        return compare & 4 ? -1 : 1;\n      };\n      return document;\n    }\n    find.matches = function (expr, elements) {\n      return find(expr, null, null, elements);\n    };\n    find.matchesSelector = function (elem, expr) {\n      setDocument(elem);\n      if (documentIsHTML && !nonnativeSelectorCache[expr + \" \"] && (!rbuggyQSA || !rbuggyQSA.test(expr))) {\n        try {\n          var ret = matches.call(elem, expr);\n\n          // IE 9's matchesSelector returns false on disconnected nodes\n          if (ret || support.disconnectedMatch ||\n          // As well, disconnected nodes are said to be in a document\n          // fragment in IE 9\n          elem.document && elem.document.nodeType !== 11) {\n            return ret;\n          }\n        } catch (e) {\n          nonnativeSelectorCache(expr, true);\n        }\n      }\n      return find(expr, document, null, [elem]).length > 0;\n    };\n    find.contains = function (context, elem) {\n      // Set document vars if needed\n      // Support: IE 11+, Edge 17 - 18+\n      // IE/Edge sometimes throw a \"Permission denied\" error when strict-comparing\n      // two documents; shallow comparisons work.\n      // eslint-disable-next-line eqeqeq\n      if ((context.ownerDocument || context) != document) {\n        setDocument(context);\n      }\n      return jQuery.contains(context, elem);\n    };\n    find.attr = function (elem, name) {\n      // Set document vars if needed\n      // Support: IE 11+, Edge 17 - 18+\n      // IE/Edge sometimes throw a \"Permission denied\" error when strict-comparing\n      // two documents; shallow comparisons work.\n      // eslint-disable-next-line eqeqeq\n      if ((elem.ownerDocument || elem) != document) {\n        setDocument(elem);\n      }\n      var fn = Expr.attrHandle[name.toLowerCase()],\n        // Don't get fooled by Object.prototype properties (see trac-13807)\n        val = fn && hasOwn.call(Expr.attrHandle, name.toLowerCase()) ? fn(elem, name, !documentIsHTML) : undefined;\n      if (val !== undefined) {\n        return val;\n      }\n      return elem.getAttribute(name);\n    };\n    find.error = function (msg) {\n      throw new Error(\"Syntax error, unrecognized expression: \" + msg);\n    };\n\n    /**\n     * Document sorting and removing duplicates\n     * @param {ArrayLike} results\n     */\n    jQuery.uniqueSort = function (results) {\n      var elem,\n        duplicates = [],\n        j = 0,\n        i = 0;\n\n      // Unless we *know* we can detect duplicates, assume their presence\n      //\n      // Support: Android <=4.0+\n      // Testing for detecting duplicates is unpredictable so instead assume we can't\n      // depend on duplicate detection in all browsers without a stable sort.\n      hasDuplicate = !support.sortStable;\n      sortInput = !support.sortStable && _slice.call(results, 0);\n      sort.call(results, sortOrder);\n      if (hasDuplicate) {\n        while (elem = results[i++]) {\n          if (elem === results[i]) {\n            j = duplicates.push(i);\n          }\n        }\n        while (j--) {\n          splice.call(results, duplicates[j], 1);\n        }\n      }\n\n      // Clear input after sorting to release objects\n      // See https://github.com/jquery/sizzle/pull/225\n      sortInput = null;\n      return results;\n    };\n    jQuery.fn.uniqueSort = function () {\n      return this.pushStack(jQuery.uniqueSort(_slice.apply(this)));\n    };\n    Expr = jQuery.expr = {\n      // Can be adjusted by the user\n      cacheLength: 50,\n      createPseudo: markFunction,\n      match: matchExpr,\n      attrHandle: {},\n      find: {},\n      relative: {\n        \">\": {\n          dir: \"parentNode\",\n          first: true\n        },\n        \" \": {\n          dir: \"parentNode\"\n        },\n        \"+\": {\n          dir: \"previousSibling\",\n          first: true\n        },\n        \"~\": {\n          dir: \"previousSibling\"\n        }\n      },\n      preFilter: {\n        ATTR: function ATTR(match) {\n          match[1] = match[1].replace(runescape, funescape);\n\n          // Move the given value to match[3] whether quoted or unquoted\n          match[3] = (match[3] || match[4] || match[5] || \"\").replace(runescape, funescape);\n          if (match[2] === \"~=\") {\n            match[3] = \" \" + match[3] + \" \";\n          }\n          return match.slice(0, 4);\n        },\n        CHILD: function CHILD(match) {\n          /* matches from matchExpr[\"CHILD\"]\n          \t1 type (only|nth|...)\n          \t2 what (child|of-type)\n          \t3 argument (even|odd|\\d*|\\d*n([+-]\\d+)?|...)\n          \t4 xn-component of xn+y argument ([+-]?\\d*n|)\n          \t5 sign of xn-component\n          \t6 x of xn-component\n          \t7 sign of y-component\n          \t8 y of y-component\n          */\n          match[1] = match[1].toLowerCase();\n          if (match[1].slice(0, 3) === \"nth\") {\n            // nth-* requires argument\n            if (!match[3]) {\n              find.error(match[0]);\n            }\n\n            // numeric x and y parameters for Expr.filter.CHILD\n            // remember that false/true cast respectively to 0/1\n            match[4] = +(match[4] ? match[5] + (match[6] || 1) : 2 * (match[3] === \"even\" || match[3] === \"odd\"));\n            match[5] = +(match[7] + match[8] || match[3] === \"odd\");\n\n            // other types prohibit arguments\n          } else if (match[3]) {\n            find.error(match[0]);\n          }\n          return match;\n        },\n        PSEUDO: function PSEUDO(match) {\n          var excess,\n            unquoted = !match[6] && match[2];\n          if (matchExpr.CHILD.test(match[0])) {\n            return null;\n          }\n\n          // Accept quoted arguments as-is\n          if (match[3]) {\n            match[2] = match[4] || match[5] || \"\";\n\n            // Strip excess characters from unquoted arguments\n          } else if (unquoted && rpseudo.test(unquoted) && (\n          // Get excess from tokenize (recursively)\n          excess = tokenize(unquoted, true)) && (\n          // advance to the next closing parenthesis\n          excess = unquoted.indexOf(\")\", unquoted.length - excess) - unquoted.length)) {\n            // excess is a negative index\n            match[0] = match[0].slice(0, excess);\n            match[2] = unquoted.slice(0, excess);\n          }\n\n          // Return only captures needed by the pseudo filter method (type and argument)\n          return match.slice(0, 3);\n        }\n      },\n      filter: {\n        TAG: function TAG(nodeNameSelector) {\n          var expectedNodeName = nodeNameSelector.replace(runescape, funescape).toLowerCase();\n          return nodeNameSelector === \"*\" ? function () {\n            return true;\n          } : function (elem) {\n            return nodeName(elem, expectedNodeName);\n          };\n        },\n        CLASS: function CLASS(className) {\n          var pattern = classCache[className + \" \"];\n          return pattern || (pattern = new RegExp(\"(^|\" + whitespace + \")\" + className + \"(\" + whitespace + \"|$)\")) && classCache(className, function (elem) {\n            return pattern.test(typeof elem.className === \"string\" && elem.className || typeof elem.getAttribute !== \"undefined\" && elem.getAttribute(\"class\") || \"\");\n          });\n        },\n        ATTR: function ATTR(name, operator, check) {\n          return function (elem) {\n            var result = find.attr(elem, name);\n            if (result == null) {\n              return operator === \"!=\";\n            }\n            if (!operator) {\n              return true;\n            }\n            result += \"\";\n            if (operator === \"=\") {\n              return result === check;\n            }\n            if (operator === \"!=\") {\n              return result !== check;\n            }\n            if (operator === \"^=\") {\n              return check && result.indexOf(check) === 0;\n            }\n            if (operator === \"*=\") {\n              return check && result.indexOf(check) > -1;\n            }\n            if (operator === \"$=\") {\n              return check && result.slice(-check.length) === check;\n            }\n            if (operator === \"~=\") {\n              return (\" \" + result.replace(rwhitespace, \" \") + \" \").indexOf(check) > -1;\n            }\n            if (operator === \"|=\") {\n              return result === check || result.slice(0, check.length + 1) === check + \"-\";\n            }\n            return false;\n          };\n        },\n        CHILD: function CHILD(type, what, _argument, first, last) {\n          var simple = type.slice(0, 3) !== \"nth\",\n            forward = type.slice(-4) !== \"last\",\n            ofType = what === \"of-type\";\n          return first === 1 && last === 0 ?\n          // Shortcut for :nth-*(n)\n          function (elem) {\n            return !!elem.parentNode;\n          } : function (elem, _context, xml) {\n            var cache,\n              outerCache,\n              node,\n              nodeIndex,\n              start,\n              dir = simple !== forward ? \"nextSibling\" : \"previousSibling\",\n              parent = elem.parentNode,\n              name = ofType && elem.nodeName.toLowerCase(),\n              useCache = !xml && !ofType,\n              diff = false;\n            if (parent) {\n              // :(first|last|only)-(child|of-type)\n              if (simple) {\n                while (dir) {\n                  node = elem;\n                  while (node = node[dir]) {\n                    if (ofType ? nodeName(node, name) : node.nodeType === 1) {\n                      return false;\n                    }\n                  }\n\n                  // Reverse direction for :only-* (if we haven't yet done so)\n                  start = dir = type === \"only\" && !start && \"nextSibling\";\n                }\n                return true;\n              }\n              start = [forward ? parent.firstChild : parent.lastChild];\n\n              // non-xml :nth-child(...) stores cache data on `parent`\n              if (forward && useCache) {\n                // Seek `elem` from a previously-cached index\n                outerCache = parent[expando] || (parent[expando] = {});\n                cache = outerCache[type] || [];\n                nodeIndex = cache[0] === dirruns && cache[1];\n                diff = nodeIndex && cache[2];\n                node = nodeIndex && parent.childNodes[nodeIndex];\n                while (node = ++nodeIndex && node && node[dir] || (\n                // Fallback to seeking `elem` from the start\n                diff = nodeIndex = 0) || start.pop()) {\n                  // When found, cache indexes on `parent` and break\n                  if (node.nodeType === 1 && ++diff && node === elem) {\n                    outerCache[type] = [dirruns, nodeIndex, diff];\n                    break;\n                  }\n                }\n              } else {\n                // Use previously-cached element index if available\n                if (useCache) {\n                  outerCache = elem[expando] || (elem[expando] = {});\n                  cache = outerCache[type] || [];\n                  nodeIndex = cache[0] === dirruns && cache[1];\n                  diff = nodeIndex;\n                }\n\n                // xml :nth-child(...)\n                // or :nth-last-child(...) or :nth(-last)?-of-type(...)\n                if (diff === false) {\n                  // Use the same loop as above to seek `elem` from the start\n                  while (node = ++nodeIndex && node && node[dir] || (diff = nodeIndex = 0) || start.pop()) {\n                    if ((ofType ? nodeName(node, name) : node.nodeType === 1) && ++diff) {\n                      // Cache the index of each encountered element\n                      if (useCache) {\n                        outerCache = node[expando] || (node[expando] = {});\n                        outerCache[type] = [dirruns, diff];\n                      }\n                      if (node === elem) {\n                        break;\n                      }\n                    }\n                  }\n                }\n              }\n\n              // Incorporate the offset, then check against cycle size\n              diff -= last;\n              return diff === first || diff % first === 0 && diff / first >= 0;\n            }\n          };\n        },\n        PSEUDO: function PSEUDO(pseudo, argument) {\n          // pseudo-class names are case-insensitive\n          // https://www.w3.org/TR/selectors/#pseudo-classes\n          // Prioritize by case sensitivity in case custom pseudos are added with uppercase letters\n          // Remember that setFilters inherits from pseudos\n          var args,\n            fn = Expr.pseudos[pseudo] || Expr.setFilters[pseudo.toLowerCase()] || find.error(\"unsupported pseudo: \" + pseudo);\n\n          // The user may use createPseudo to indicate that\n          // arguments are needed to create the filter function\n          // just as jQuery does\n          if (fn[expando]) {\n            return fn(argument);\n          }\n\n          // But maintain support for old signatures\n          if (fn.length > 1) {\n            args = [pseudo, pseudo, \"\", argument];\n            return Expr.setFilters.hasOwnProperty(pseudo.toLowerCase()) ? markFunction(function (seed, matches) {\n              var idx,\n                matched = fn(seed, argument),\n                i = matched.length;\n              while (i--) {\n                idx = indexOf.call(seed, matched[i]);\n                seed[idx] = !(matches[idx] = matched[i]);\n              }\n            }) : function (elem) {\n              return fn(elem, 0, args);\n            };\n          }\n          return fn;\n        }\n      },\n      pseudos: {\n        // Potentially complex pseudos\n        not: markFunction(function (selector) {\n          // Trim the selector passed to compile\n          // to avoid treating leading and trailing\n          // spaces as combinators\n          var input = [],\n            results = [],\n            matcher = compile(selector.replace(rtrimCSS, \"$1\"));\n          return matcher[expando] ? markFunction(function (seed, matches, _context, xml) {\n            var elem,\n              unmatched = matcher(seed, null, xml, []),\n              i = seed.length;\n\n            // Match elements unmatched by `matcher`\n            while (i--) {\n              if (elem = unmatched[i]) {\n                seed[i] = !(matches[i] = elem);\n              }\n            }\n          }) : function (elem, _context, xml) {\n            input[0] = elem;\n            matcher(input, null, xml, results);\n\n            // Don't keep the element\n            // (see https://github.com/jquery/sizzle/issues/299)\n            input[0] = null;\n            return !results.pop();\n          };\n        }),\n        has: markFunction(function (selector) {\n          return function (elem) {\n            return find(selector, elem).length > 0;\n          };\n        }),\n        contains: markFunction(function (text) {\n          text = text.replace(runescape, funescape);\n          return function (elem) {\n            return (elem.textContent || jQuery.text(elem)).indexOf(text) > -1;\n          };\n        }),\n        // \"Whether an element is represented by a :lang() selector\n        // is based solely on the element's language value\n        // being equal to the identifier C,\n        // or beginning with the identifier C immediately followed by \"-\".\n        // The matching of C against the element's language value is performed case-insensitively.\n        // The identifier C does not have to be a valid language name.\"\n        // https://www.w3.org/TR/selectors/#lang-pseudo\n        lang: markFunction(function (lang) {\n          // lang value must be a valid identifier\n          if (!ridentifier.test(lang || \"\")) {\n            find.error(\"unsupported lang: \" + lang);\n          }\n          lang = lang.replace(runescape, funescape).toLowerCase();\n          return function (elem) {\n            var elemLang;\n            do {\n              if (elemLang = documentIsHTML ? elem.lang : elem.getAttribute(\"xml:lang\") || elem.getAttribute(\"lang\")) {\n                elemLang = elemLang.toLowerCase();\n                return elemLang === lang || elemLang.indexOf(lang + \"-\") === 0;\n              }\n            } while ((elem = elem.parentNode) && elem.nodeType === 1);\n            return false;\n          };\n        }),\n        // Miscellaneous\n        target: function target(elem) {\n          var hash = window.location && window.location.hash;\n          return hash && hash.slice(1) === elem.id;\n        },\n        root: function root(elem) {\n          return elem === documentElement;\n        },\n        focus: function focus(elem) {\n          return elem === safeActiveElement() && document.hasFocus() && !!(elem.type || elem.href || ~elem.tabIndex);\n        },\n        // Boolean properties\n        enabled: createDisabledPseudo(false),\n        disabled: createDisabledPseudo(true),\n        checked: function checked(elem) {\n          // In CSS3, :checked should return both checked and selected elements\n          // https://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked\n          return nodeName(elem, \"input\") && !!elem.checked || nodeName(elem, \"option\") && !!elem.selected;\n        },\n        selected: function selected(elem) {\n          // Support: IE <=11+\n          // Accessing the selectedIndex property\n          // forces the browser to treat the default option as\n          // selected when in an optgroup.\n          if (elem.parentNode) {\n            // eslint-disable-next-line no-unused-expressions\n            elem.parentNode.selectedIndex;\n          }\n          return elem.selected === true;\n        },\n        // Contents\n        empty: function empty(elem) {\n          // https://www.w3.org/TR/selectors/#empty-pseudo\n          // :empty is negated by element (1) or content nodes (text: 3; cdata: 4; entity ref: 5),\n          //   but not by others (comment: 8; processing instruction: 7; etc.)\n          // nodeType < 6 works because attributes (2) do not appear as children\n          for (elem = elem.firstChild; elem; elem = elem.nextSibling) {\n            if (elem.nodeType < 6) {\n              return false;\n            }\n          }\n          return true;\n        },\n        parent: function parent(elem) {\n          return !Expr.pseudos.empty(elem);\n        },\n        // Element/input types\n        header: function header(elem) {\n          return rheader.test(elem.nodeName);\n        },\n        input: function input(elem) {\n          return rinputs.test(elem.nodeName);\n        },\n        button: function button(elem) {\n          return nodeName(elem, \"input\") && elem.type === \"button\" || nodeName(elem, \"button\");\n        },\n        text: function text(elem) {\n          var attr;\n          return nodeName(elem, \"input\") && elem.type === \"text\" && (\n          // Support: IE <10 only\n          // New HTML5 attribute values (e.g., \"search\") appear\n          // with elem.type === \"text\"\n          (attr = elem.getAttribute(\"type\")) == null || attr.toLowerCase() === \"text\");\n        },\n        // Position-in-collection\n        first: createPositionalPseudo(function () {\n          return [0];\n        }),\n        last: createPositionalPseudo(function (_matchIndexes, length) {\n          return [length - 1];\n        }),\n        eq: createPositionalPseudo(function (_matchIndexes, length, argument) {\n          return [argument < 0 ? argument + length : argument];\n        }),\n        even: createPositionalPseudo(function (matchIndexes, length) {\n          var i = 0;\n          for (; i < length; i += 2) {\n            matchIndexes.push(i);\n          }\n          return matchIndexes;\n        }),\n        odd: createPositionalPseudo(function (matchIndexes, length) {\n          var i = 1;\n          for (; i < length; i += 2) {\n            matchIndexes.push(i);\n          }\n          return matchIndexes;\n        }),\n        lt: createPositionalPseudo(function (matchIndexes, length, argument) {\n          var i;\n          if (argument < 0) {\n            i = argument + length;\n          } else if (argument > length) {\n            i = length;\n          } else {\n            i = argument;\n          }\n          for (; --i >= 0;) {\n            matchIndexes.push(i);\n          }\n          return matchIndexes;\n        }),\n        gt: createPositionalPseudo(function (matchIndexes, length, argument) {\n          var i = argument < 0 ? argument + length : argument;\n          for (; ++i < length;) {\n            matchIndexes.push(i);\n          }\n          return matchIndexes;\n        })\n      }\n    };\n    Expr.pseudos.nth = Expr.pseudos.eq;\n\n    // Add button/input type pseudos\n    for (i in {\n      radio: true,\n      checkbox: true,\n      file: true,\n      password: true,\n      image: true\n    }) {\n      Expr.pseudos[i] = createInputPseudo(i);\n    }\n    for (i in {\n      submit: true,\n      reset: true\n    }) {\n      Expr.pseudos[i] = createButtonPseudo(i);\n    }\n\n    // Easy API for creating new setFilters\n    function setFilters() {}\n    setFilters.prototype = Expr.filters = Expr.pseudos;\n    Expr.setFilters = new setFilters();\n    function tokenize(selector, parseOnly) {\n      var matched,\n        match,\n        tokens,\n        type,\n        soFar,\n        groups,\n        preFilters,\n        cached = tokenCache[selector + \" \"];\n      if (cached) {\n        return parseOnly ? 0 : cached.slice(0);\n      }\n      soFar = selector;\n      groups = [];\n      preFilters = Expr.preFilter;\n      while (soFar) {\n        // Comma and first run\n        if (!matched || (match = rcomma.exec(soFar))) {\n          if (match) {\n            // Don't consume trailing commas as valid\n            soFar = soFar.slice(match[0].length) || soFar;\n          }\n          groups.push(tokens = []);\n        }\n        matched = false;\n\n        // Combinators\n        if (match = rleadingCombinator.exec(soFar)) {\n          matched = match.shift();\n          tokens.push({\n            value: matched,\n            // Cast descendant combinators to space\n            type: match[0].replace(rtrimCSS, \" \")\n          });\n          soFar = soFar.slice(matched.length);\n        }\n\n        // Filters\n        for (type in Expr.filter) {\n          if ((match = matchExpr[type].exec(soFar)) && (!preFilters[type] || (match = preFilters[type](match)))) {\n            matched = match.shift();\n            tokens.push({\n              value: matched,\n              type: type,\n              matches: match\n            });\n            soFar = soFar.slice(matched.length);\n          }\n        }\n        if (!matched) {\n          break;\n        }\n      }\n\n      // Return the length of the invalid excess\n      // if we're just parsing\n      // Otherwise, throw an error or return tokens\n      if (parseOnly) {\n        return soFar.length;\n      }\n      return soFar ? find.error(selector) :\n      // Cache the tokens\n      tokenCache(selector, groups).slice(0);\n    }\n    function toSelector(tokens) {\n      var i = 0,\n        len = tokens.length,\n        selector = \"\";\n      for (; i < len; i++) {\n        selector += tokens[i].value;\n      }\n      return selector;\n    }\n    function addCombinator(matcher, combinator, base) {\n      var dir = combinator.dir,\n        skip = combinator.next,\n        key = skip || dir,\n        checkNonElements = base && key === \"parentNode\",\n        doneName = done++;\n      return combinator.first ?\n      // Check against closest ancestor/preceding element\n      function (elem, context, xml) {\n        while (elem = elem[dir]) {\n          if (elem.nodeType === 1 || checkNonElements) {\n            return matcher(elem, context, xml);\n          }\n        }\n        return false;\n      } :\n      // Check against all ancestor/preceding elements\n      function (elem, context, xml) {\n        var oldCache,\n          outerCache,\n          newCache = [dirruns, doneName];\n\n        // We can't set arbitrary data on XML nodes, so they don't benefit from combinator caching\n        if (xml) {\n          while (elem = elem[dir]) {\n            if (elem.nodeType === 1 || checkNonElements) {\n              if (matcher(elem, context, xml)) {\n                return true;\n              }\n            }\n          }\n        } else {\n          while (elem = elem[dir]) {\n            if (elem.nodeType === 1 || checkNonElements) {\n              outerCache = elem[expando] || (elem[expando] = {});\n              if (skip && nodeName(elem, skip)) {\n                elem = elem[dir] || elem;\n              } else if ((oldCache = outerCache[key]) && oldCache[0] === dirruns && oldCache[1] === doneName) {\n                // Assign to newCache so results back-propagate to previous elements\n                return newCache[2] = oldCache[2];\n              } else {\n                // Reuse newcache so results back-propagate to previous elements\n                outerCache[key] = newCache;\n\n                // A match means we're done; a fail means we have to keep checking\n                if (newCache[2] = matcher(elem, context, xml)) {\n                  return true;\n                }\n              }\n            }\n          }\n        }\n        return false;\n      };\n    }\n    function elementMatcher(matchers) {\n      return matchers.length > 1 ? function (elem, context, xml) {\n        var i = matchers.length;\n        while (i--) {\n          if (!matchers[i](elem, context, xml)) {\n            return false;\n          }\n        }\n        return true;\n      } : matchers[0];\n    }\n    function multipleContexts(selector, contexts, results) {\n      var i = 0,\n        len = contexts.length;\n      for (; i < len; i++) {\n        find(selector, contexts[i], results);\n      }\n      return results;\n    }\n    function condense(unmatched, map, filter, context, xml) {\n      var elem,\n        newUnmatched = [],\n        i = 0,\n        len = unmatched.length,\n        mapped = map != null;\n      for (; i < len; i++) {\n        if (elem = unmatched[i]) {\n          if (!filter || filter(elem, context, xml)) {\n            newUnmatched.push(elem);\n            if (mapped) {\n              map.push(i);\n            }\n          }\n        }\n      }\n      return newUnmatched;\n    }\n    function setMatcher(preFilter, selector, matcher, postFilter, postFinder, postSelector) {\n      if (postFilter && !postFilter[expando]) {\n        postFilter = setMatcher(postFilter);\n      }\n      if (postFinder && !postFinder[expando]) {\n        postFinder = setMatcher(postFinder, postSelector);\n      }\n      return markFunction(function (seed, results, context, xml) {\n        var temp,\n          i,\n          elem,\n          matcherOut,\n          preMap = [],\n          postMap = [],\n          preexisting = results.length,\n          // Get initial elements from seed or context\n          elems = seed || multipleContexts(selector || \"*\", context.nodeType ? [context] : context, []),\n          // Prefilter to get matcher input, preserving a map for seed-results synchronization\n          matcherIn = preFilter && (seed || !selector) ? condense(elems, preMap, preFilter, context, xml) : elems;\n        if (matcher) {\n          // If we have a postFinder, or filtered seed, or non-seed postFilter\n          // or preexisting results,\n          matcherOut = postFinder || (seed ? preFilter : preexisting || postFilter) ?\n          // ...intermediate processing is necessary\n          [] :\n          // ...otherwise use results directly\n          results;\n\n          // Find primary matches\n          matcher(matcherIn, matcherOut, context, xml);\n        } else {\n          matcherOut = matcherIn;\n        }\n\n        // Apply postFilter\n        if (postFilter) {\n          temp = condense(matcherOut, postMap);\n          postFilter(temp, [], context, xml);\n\n          // Un-match failing elements by moving them back to matcherIn\n          i = temp.length;\n          while (i--) {\n            if (elem = temp[i]) {\n              matcherOut[postMap[i]] = !(matcherIn[postMap[i]] = elem);\n            }\n          }\n        }\n        if (seed) {\n          if (postFinder || preFilter) {\n            if (postFinder) {\n              // Get the final matcherOut by condensing this intermediate into postFinder contexts\n              temp = [];\n              i = matcherOut.length;\n              while (i--) {\n                if (elem = matcherOut[i]) {\n                  // Restore matcherIn since elem is not yet a final match\n                  temp.push(matcherIn[i] = elem);\n                }\n              }\n              postFinder(null, matcherOut = [], temp, xml);\n            }\n\n            // Move matched elements from seed to results to keep them synchronized\n            i = matcherOut.length;\n            while (i--) {\n              if ((elem = matcherOut[i]) && (temp = postFinder ? indexOf.call(seed, elem) : preMap[i]) > -1) {\n                seed[temp] = !(results[temp] = elem);\n              }\n            }\n          }\n\n          // Add elements to results, through postFinder if defined\n        } else {\n          matcherOut = condense(matcherOut === results ? matcherOut.splice(preexisting, matcherOut.length) : matcherOut);\n          if (postFinder) {\n            postFinder(null, results, matcherOut, xml);\n          } else {\n            push.apply(results, matcherOut);\n          }\n        }\n      });\n    }\n    function matcherFromTokens(tokens) {\n      var checkContext,\n        matcher,\n        j,\n        len = tokens.length,\n        leadingRelative = Expr.relative[tokens[0].type],\n        implicitRelative = leadingRelative || Expr.relative[\" \"],\n        i = leadingRelative ? 1 : 0,\n        // The foundational matcher ensures that elements are reachable from top-level context(s)\n        matchContext = addCombinator(function (elem) {\n          return elem === checkContext;\n        }, implicitRelative, true),\n        matchAnyContext = addCombinator(function (elem) {\n          return indexOf.call(checkContext, elem) > -1;\n        }, implicitRelative, true),\n        matchers = [function (elem, context, xml) {\n          // Support: IE 11+, Edge 17 - 18+\n          // IE/Edge sometimes throw a \"Permission denied\" error when strict-comparing\n          // two documents; shallow comparisons work.\n          // eslint-disable-next-line eqeqeq\n          var ret = !leadingRelative && (xml || context != outermostContext) || ((checkContext = context).nodeType ? matchContext(elem, context, xml) : matchAnyContext(elem, context, xml));\n\n          // Avoid hanging onto element\n          // (see https://github.com/jquery/sizzle/issues/299)\n          checkContext = null;\n          return ret;\n        }];\n      for (; i < len; i++) {\n        if (matcher = Expr.relative[tokens[i].type]) {\n          matchers = [addCombinator(elementMatcher(matchers), matcher)];\n        } else {\n          matcher = Expr.filter[tokens[i].type].apply(null, tokens[i].matches);\n\n          // Return special upon seeing a positional matcher\n          if (matcher[expando]) {\n            // Find the next relative operator (if any) for proper handling\n            j = ++i;\n            for (; j < len; j++) {\n              if (Expr.relative[tokens[j].type]) {\n                break;\n              }\n            }\n            return setMatcher(i > 1 && elementMatcher(matchers), i > 1 && toSelector(\n            // If the preceding token was a descendant combinator, insert an implicit any-element `*`\n            tokens.slice(0, i - 1).concat({\n              value: tokens[i - 2].type === \" \" ? \"*\" : \"\"\n            })).replace(rtrimCSS, \"$1\"), matcher, i < j && matcherFromTokens(tokens.slice(i, j)), j < len && matcherFromTokens(tokens = tokens.slice(j)), j < len && toSelector(tokens));\n          }\n          matchers.push(matcher);\n        }\n      }\n      return elementMatcher(matchers);\n    }\n    function matcherFromGroupMatchers(elementMatchers, setMatchers) {\n      var bySet = setMatchers.length > 0,\n        byElement = elementMatchers.length > 0,\n        superMatcher = function superMatcher(seed, context, xml, results, outermost) {\n          var elem,\n            j,\n            matcher,\n            matchedCount = 0,\n            i = \"0\",\n            unmatched = seed && [],\n            setMatched = [],\n            contextBackup = outermostContext,\n            // We must always have either seed elements or outermost context\n            elems = seed || byElement && Expr.find.TAG(\"*\", outermost),\n            // Use integer dirruns iff this is the outermost matcher\n            dirrunsUnique = dirruns += contextBackup == null ? 1 : Math.random() || 0.1,\n            len = elems.length;\n          if (outermost) {\n            // Support: IE 11+, Edge 17 - 18+\n            // IE/Edge sometimes throw a \"Permission denied\" error when strict-comparing\n            // two documents; shallow comparisons work.\n            // eslint-disable-next-line eqeqeq\n            outermostContext = context == document || context || outermost;\n          }\n\n          // Add elements passing elementMatchers directly to results\n          // Support: iOS <=7 - 9 only\n          // Tolerate NodeList properties (IE: \"length\"; Safari: <number>) matching\n          // elements by id. (see trac-14142)\n          for (; i !== len && (elem = elems[i]) != null; i++) {\n            if (byElement && elem) {\n              j = 0;\n\n              // Support: IE 11+, Edge 17 - 18+\n              // IE/Edge sometimes throw a \"Permission denied\" error when strict-comparing\n              // two documents; shallow comparisons work.\n              // eslint-disable-next-line eqeqeq\n              if (!context && elem.ownerDocument != document) {\n                setDocument(elem);\n                xml = !documentIsHTML;\n              }\n              while (matcher = elementMatchers[j++]) {\n                if (matcher(elem, context || document, xml)) {\n                  push.call(results, elem);\n                  break;\n                }\n              }\n              if (outermost) {\n                dirruns = dirrunsUnique;\n              }\n            }\n\n            // Track unmatched elements for set filters\n            if (bySet) {\n              // They will have gone through all possible matchers\n              if (elem = !matcher && elem) {\n                matchedCount--;\n              }\n\n              // Lengthen the array for every element, matched or not\n              if (seed) {\n                unmatched.push(elem);\n              }\n            }\n          }\n\n          // `i` is now the count of elements visited above, and adding it to `matchedCount`\n          // makes the latter nonnegative.\n          matchedCount += i;\n\n          // Apply set filters to unmatched elements\n          // NOTE: This can be skipped if there are no unmatched elements (i.e., `matchedCount`\n          // equals `i`), unless we didn't visit _any_ elements in the above loop because we have\n          // no element matchers and no seed.\n          // Incrementing an initially-string \"0\" `i` allows `i` to remain a string only in that\n          // case, which will result in a \"00\" `matchedCount` that differs from `i` but is also\n          // numerically zero.\n          if (bySet && i !== matchedCount) {\n            j = 0;\n            while (matcher = setMatchers[j++]) {\n              matcher(unmatched, setMatched, context, xml);\n            }\n            if (seed) {\n              // Reintegrate element matches to eliminate the need for sorting\n              if (matchedCount > 0) {\n                while (i--) {\n                  if (!(unmatched[i] || setMatched[i])) {\n                    setMatched[i] = pop.call(results);\n                  }\n                }\n              }\n\n              // Discard index placeholder values to get only actual matches\n              setMatched = condense(setMatched);\n            }\n\n            // Add matches to results\n            push.apply(results, setMatched);\n\n            // Seedless set matches succeeding multiple successful matchers stipulate sorting\n            if (outermost && !seed && setMatched.length > 0 && matchedCount + setMatchers.length > 1) {\n              jQuery.uniqueSort(results);\n            }\n          }\n\n          // Override manipulation of globals by nested matchers\n          if (outermost) {\n            dirruns = dirrunsUnique;\n            outermostContext = contextBackup;\n          }\n          return unmatched;\n        };\n      return bySet ? markFunction(superMatcher) : superMatcher;\n    }\n    function compile(selector, match /* Internal Use Only */) {\n      var i,\n        setMatchers = [],\n        elementMatchers = [],\n        cached = compilerCache[selector + \" \"];\n      if (!cached) {\n        // Generate a function of recursive functions that can be used to check each element\n        if (!match) {\n          match = tokenize(selector);\n        }\n        i = match.length;\n        while (i--) {\n          cached = matcherFromTokens(match[i]);\n          if (cached[expando]) {\n            setMatchers.push(cached);\n          } else {\n            elementMatchers.push(cached);\n          }\n        }\n\n        // Cache the compiled function\n        cached = compilerCache(selector, matcherFromGroupMatchers(elementMatchers, setMatchers));\n\n        // Save selector and tokenization\n        cached.selector = selector;\n      }\n      return cached;\n    }\n\n    /**\n     * A low-level selection function that works with jQuery's compiled\n     *  selector functions\n     * @param {String|Function} selector A selector or a pre-compiled\n     *  selector function built with jQuery selector compile\n     * @param {Element} context\n     * @param {Array} [results]\n     * @param {Array} [seed] A set of elements to match against\n     */\n    function select(selector, context, results, seed) {\n      var i,\n        tokens,\n        token,\n        type,\n        find,\n        compiled = typeof selector === \"function\" && selector,\n        match = !seed && tokenize(selector = compiled.selector || selector);\n      results = results || [];\n\n      // Try to minimize operations if there is only one selector in the list and no seed\n      // (the latter of which guarantees us context)\n      if (match.length === 1) {\n        // Reduce context if the leading compound selector is an ID\n        tokens = match[0] = match[0].slice(0);\n        if (tokens.length > 2 && (token = tokens[0]).type === \"ID\" && context.nodeType === 9 && documentIsHTML && Expr.relative[tokens[1].type]) {\n          context = (Expr.find.ID(token.matches[0].replace(runescape, funescape), context) || [])[0];\n          if (!context) {\n            return results;\n\n            // Precompiled matchers will still verify ancestry, so step up a level\n          } else if (compiled) {\n            context = context.parentNode;\n          }\n          selector = selector.slice(tokens.shift().value.length);\n        }\n\n        // Fetch a seed set for right-to-left matching\n        i = matchExpr.needsContext.test(selector) ? 0 : tokens.length;\n        while (i--) {\n          token = tokens[i];\n\n          // Abort if we hit a combinator\n          if (Expr.relative[type = token.type]) {\n            break;\n          }\n          if (find = Expr.find[type]) {\n            // Search, expanding context for leading sibling combinators\n            if (seed = find(token.matches[0].replace(runescape, funescape), rsibling.test(tokens[0].type) && testContext(context.parentNode) || context)) {\n              // If seed is empty or no tokens remain, we can return early\n              tokens.splice(i, 1);\n              selector = seed.length && toSelector(tokens);\n              if (!selector) {\n                push.apply(results, seed);\n                return results;\n              }\n              break;\n            }\n          }\n        }\n      }\n\n      // Compile and execute a filtering function if one is not provided\n      // Provide `match` to avoid retokenization if we modified the selector above\n      (compiled || compile(selector, match))(seed, context, !documentIsHTML, results, !context || rsibling.test(selector) && testContext(context.parentNode) || context);\n      return results;\n    }\n\n    // One-time assignments\n\n    // Support: Android <=4.0 - 4.1+\n    // Sort stability\n    support.sortStable = expando.split(\"\").sort(sortOrder).join(\"\") === expando;\n\n    // Initialize against the default document\n    setDocument();\n\n    // Support: Android <=4.0 - 4.1+\n    // Detached nodes confoundingly follow *each other*\n    support.sortDetached = assert(function (el) {\n      // Should return 1, but returns 4 (following)\n      return el.compareDocumentPosition(document.createElement(\"fieldset\")) & 1;\n    });\n    jQuery.find = find;\n\n    // Deprecated\n    jQuery.expr[\":\"] = jQuery.expr.pseudos;\n    jQuery.unique = jQuery.uniqueSort;\n\n    // These have always been private, but they used to be documented as part of\n    // Sizzle so let's maintain them for now for backwards compatibility purposes.\n    find.compile = compile;\n    find.select = select;\n    find.setDocument = setDocument;\n    find.tokenize = tokenize;\n    find.escape = jQuery.escapeSelector;\n    find.getText = jQuery.text;\n    find.isXML = jQuery.isXMLDoc;\n    find.selectors = jQuery.expr;\n    find.support = jQuery.support;\n    find.uniqueSort = jQuery.uniqueSort;\n\n    /* eslint-enable */\n  })();\n  var dir = function dir(elem, _dir, until) {\n    var matched = [],\n      truncate = until !== undefined;\n    while ((elem = elem[_dir]) && elem.nodeType !== 9) {\n      if (elem.nodeType === 1) {\n        if (truncate && jQuery(elem).is(until)) {\n          break;\n        }\n        matched.push(elem);\n      }\n    }\n    return matched;\n  };\n  var _siblings = function siblings(n, elem) {\n    var matched = [];\n    for (; n; n = n.nextSibling) {\n      if (n.nodeType === 1 && n !== elem) {\n        matched.push(n);\n      }\n    }\n    return matched;\n  };\n  var rneedsContext = jQuery.expr.match.needsContext;\n  var rsingleTag = /^<([a-z][^\\/\\0>:\\x20\\t\\r\\n\\f]*)[\\x20\\t\\r\\n\\f]*\\/?>(?:<\\/\\1>|)$/i;\n\n  // Implement the identical functionality for filter and not\n  function winnow(elements, qualifier, not) {\n    if (isFunction(qualifier)) {\n      return jQuery.grep(elements, function (elem, i) {\n        return !!qualifier.call(elem, i, elem) !== not;\n      });\n    }\n\n    // Single element\n    if (qualifier.nodeType) {\n      return jQuery.grep(elements, function (elem) {\n        return elem === qualifier !== not;\n      });\n    }\n\n    // Arraylike of elements (jQuery, arguments, Array)\n    if (typeof qualifier !== \"string\") {\n      return jQuery.grep(elements, function (elem) {\n        return indexOf.call(qualifier, elem) > -1 !== not;\n      });\n    }\n\n    // Filtered directly for both simple and complex selectors\n    return jQuery.filter(qualifier, elements, not);\n  }\n  jQuery.filter = function (expr, elems, not) {\n    var elem = elems[0];\n    if (not) {\n      expr = \":not(\" + expr + \")\";\n    }\n    if (elems.length === 1 && elem.nodeType === 1) {\n      return jQuery.find.matchesSelector(elem, expr) ? [elem] : [];\n    }\n    return jQuery.find.matches(expr, jQuery.grep(elems, function (elem) {\n      return elem.nodeType === 1;\n    }));\n  };\n  jQuery.fn.extend({\n    find: function find(selector) {\n      var i,\n        ret,\n        len = this.length,\n        self = this;\n      if (typeof selector !== \"string\") {\n        return this.pushStack(jQuery(selector).filter(function () {\n          for (i = 0; i < len; i++) {\n            if (jQuery.contains(self[i], this)) {\n              return true;\n            }\n          }\n        }));\n      }\n      ret = this.pushStack([]);\n      for (i = 0; i < len; i++) {\n        jQuery.find(selector, self[i], ret);\n      }\n      return len > 1 ? jQuery.uniqueSort(ret) : ret;\n    },\n    filter: function filter(selector) {\n      return this.pushStack(winnow(this, selector || [], false));\n    },\n    not: function not(selector) {\n      return this.pushStack(winnow(this, selector || [], true));\n    },\n    is: function is(selector) {\n      return !!winnow(this,\n      // If this is a positional/relative selector, check membership in the returned set\n      // so $(\"p:first\").is(\"p:last\") won't return true for a doc with two \"p\".\n      typeof selector === \"string\" && rneedsContext.test(selector) ? jQuery(selector) : selector || [], false).length;\n    }\n  });\n\n  // Initialize a jQuery object\n\n  // A central reference to the root jQuery(document)\n  var rootjQuery,\n    // A simple way to check for HTML strings\n    // Prioritize #id over <tag> to avoid XSS via location.hash (trac-9521)\n    // Strict HTML recognition (trac-11290: must start with <)\n    // Shortcut simple #id case for speed\n    rquickExpr = /^(?:\\s*(<[\\w\\W]+>)[^>]*|#([\\w-]+))$/,\n    init = jQuery.fn.init = function (selector, context, root) {\n      var match, elem;\n\n      // HANDLE: $(\"\"), $(null), $(undefined), $(false)\n      if (!selector) {\n        return this;\n      }\n\n      // Method init() accepts an alternate rootjQuery\n      // so migrate can support jQuery.sub (gh-2101)\n      root = root || rootjQuery;\n\n      // Handle HTML strings\n      if (typeof selector === \"string\") {\n        if (selector[0] === \"<\" && selector[selector.length - 1] === \">\" && selector.length >= 3) {\n          // Assume that strings that start and end with <> are HTML and skip the regex check\n          match = [null, selector, null];\n        } else {\n          match = rquickExpr.exec(selector);\n        }\n\n        // Match html or make sure no context is specified for #id\n        if (match && (match[1] || !context)) {\n          // HANDLE: $(html) -> $(array)\n          if (match[1]) {\n            context = context instanceof jQuery ? context[0] : context;\n\n            // Option to run scripts is true for back-compat\n            // Intentionally let the error be thrown if parseHTML is not present\n            jQuery.merge(this, jQuery.parseHTML(match[1], context && context.nodeType ? context.ownerDocument || context : document, true));\n\n            // HANDLE: $(html, props)\n            if (rsingleTag.test(match[1]) && jQuery.isPlainObject(context)) {\n              for (match in context) {\n                // Properties of context are called as methods if possible\n                if (isFunction(this[match])) {\n                  this[match](context[match]);\n\n                  // ...and otherwise set as attributes\n                } else {\n                  this.attr(match, context[match]);\n                }\n              }\n            }\n            return this;\n\n            // HANDLE: $(#id)\n          } else {\n            elem = document.getElementById(match[2]);\n            if (elem) {\n              // Inject the element directly into the jQuery object\n              this[0] = elem;\n              this.length = 1;\n            }\n            return this;\n          }\n\n          // HANDLE: $(expr, $(...))\n        } else if (!context || context.jquery) {\n          return (context || root).find(selector);\n\n          // HANDLE: $(expr, context)\n          // (which is just equivalent to: $(context).find(expr)\n        } else {\n          return this.constructor(context).find(selector);\n        }\n\n        // HANDLE: $(DOMElement)\n      } else if (selector.nodeType) {\n        this[0] = selector;\n        this.length = 1;\n        return this;\n\n        // HANDLE: $(function)\n        // Shortcut for document ready\n      } else if (isFunction(selector)) {\n        return root.ready !== undefined ? root.ready(selector) :\n        // Execute immediately if ready is not present\n        selector(jQuery);\n      }\n      return jQuery.makeArray(selector, this);\n    };\n\n  // Give the init function the jQuery prototype for later instantiation\n  init.prototype = jQuery.fn;\n\n  // Initialize central reference\n  rootjQuery = jQuery(document);\n  var rparentsprev = /^(?:parents|prev(?:Until|All))/,\n    // Methods guaranteed to produce a unique set when starting from a unique set\n    guaranteedUnique = {\n      children: true,\n      contents: true,\n      next: true,\n      prev: true\n    };\n  jQuery.fn.extend({\n    has: function has(target) {\n      var targets = jQuery(target, this),\n        l = targets.length;\n      return this.filter(function () {\n        var i = 0;\n        for (; i < l; i++) {\n          if (jQuery.contains(this, targets[i])) {\n            return true;\n          }\n        }\n      });\n    },\n    closest: function closest(selectors, context) {\n      var cur,\n        i = 0,\n        l = this.length,\n        matched = [],\n        targets = typeof selectors !== \"string\" && jQuery(selectors);\n\n      // Positional selectors never match, since there's no _selection_ context\n      if (!rneedsContext.test(selectors)) {\n        for (; i < l; i++) {\n          for (cur = this[i]; cur && cur !== context; cur = cur.parentNode) {\n            // Always skip document fragments\n            if (cur.nodeType < 11 && (targets ? targets.index(cur) > -1 :\n            // Don't pass non-elements to jQuery#find\n            cur.nodeType === 1 && jQuery.find.matchesSelector(cur, selectors))) {\n              matched.push(cur);\n              break;\n            }\n          }\n        }\n      }\n      return this.pushStack(matched.length > 1 ? jQuery.uniqueSort(matched) : matched);\n    },\n    // Determine the position of an element within the set\n    index: function index(elem) {\n      // No argument, return index in parent\n      if (!elem) {\n        return this[0] && this[0].parentNode ? this.first().prevAll().length : -1;\n      }\n\n      // Index in selector\n      if (typeof elem === \"string\") {\n        return indexOf.call(jQuery(elem), this[0]);\n      }\n\n      // Locate the position of the desired element\n      return indexOf.call(this,\n      // If it receives a jQuery object, the first element is used\n      elem.jquery ? elem[0] : elem);\n    },\n    add: function add(selector, context) {\n      return this.pushStack(jQuery.uniqueSort(jQuery.merge(this.get(), jQuery(selector, context))));\n    },\n    addBack: function addBack(selector) {\n      return this.add(selector == null ? this.prevObject : this.prevObject.filter(selector));\n    }\n  });\n  function sibling(cur, dir) {\n    while ((cur = cur[dir]) && cur.nodeType !== 1) {}\n    return cur;\n  }\n  jQuery.each({\n    parent: function parent(elem) {\n      var parent = elem.parentNode;\n      return parent && parent.nodeType !== 11 ? parent : null;\n    },\n    parents: function parents(elem) {\n      return dir(elem, \"parentNode\");\n    },\n    parentsUntil: function parentsUntil(elem, _i, until) {\n      return dir(elem, \"parentNode\", until);\n    },\n    next: function next(elem) {\n      return sibling(elem, \"nextSibling\");\n    },\n    prev: function prev(elem) {\n      return sibling(elem, \"previousSibling\");\n    },\n    nextAll: function nextAll(elem) {\n      return dir(elem, \"nextSibling\");\n    },\n    prevAll: function prevAll(elem) {\n      return dir(elem, \"previousSibling\");\n    },\n    nextUntil: function nextUntil(elem, _i, until) {\n      return dir(elem, \"nextSibling\", until);\n    },\n    prevUntil: function prevUntil(elem, _i, until) {\n      return dir(elem, \"previousSibling\", until);\n    },\n    siblings: function siblings(elem) {\n      return _siblings((elem.parentNode || {}).firstChild, elem);\n    },\n    children: function children(elem) {\n      return _siblings(elem.firstChild);\n    },\n    contents: function contents(elem) {\n      if (elem.contentDocument != null &&\n      // Support: IE 11+\n      // <object> elements with no `data` attribute has an object\n      // `contentDocument` with a `null` prototype.\n      getProto(elem.contentDocument)) {\n        return elem.contentDocument;\n      }\n\n      // Support: IE 9 - 11 only, iOS 7 only, Android Browser <=4.3 only\n      // Treat the template element as a regular one in browsers that\n      // don't support it.\n      if (nodeName(elem, \"template\")) {\n        elem = elem.content || elem;\n      }\n      return jQuery.merge([], elem.childNodes);\n    }\n  }, function (name, fn) {\n    jQuery.fn[name] = function (until, selector) {\n      var matched = jQuery.map(this, fn, until);\n      if (name.slice(-5) !== \"Until\") {\n        selector = until;\n      }\n      if (selector && typeof selector === \"string\") {\n        matched = jQuery.filter(selector, matched);\n      }\n      if (this.length > 1) {\n        // Remove duplicates\n        if (!guaranteedUnique[name]) {\n          jQuery.uniqueSort(matched);\n        }\n\n        // Reverse order for parents* and prev-derivatives\n        if (rparentsprev.test(name)) {\n          matched.reverse();\n        }\n      }\n      return this.pushStack(matched);\n    };\n  });\n  var rnothtmlwhite = /[^\\x20\\t\\r\\n\\f]+/g;\n\n  // Convert String-formatted options into Object-formatted ones\n  function createOptions(options) {\n    var object = {};\n    jQuery.each(options.match(rnothtmlwhite) || [], function (_, flag) {\n      object[flag] = true;\n    });\n    return object;\n  }\n\n  /*\n   * Create a callback list using the following parameters:\n   *\n   *\toptions: an optional list of space-separated options that will change how\n   *\t\t\tthe callback list behaves or a more traditional option object\n   *\n   * By default a callback list will act like an event callback list and can be\n   * \"fired\" multiple times.\n   *\n   * Possible options:\n   *\n   *\tonce:\t\t\twill ensure the callback list can only be fired once (like a Deferred)\n   *\n   *\tmemory:\t\t\twill keep track of previous values and will call any callback added\n   *\t\t\t\t\tafter the list has been fired right away with the latest \"memorized\"\n   *\t\t\t\t\tvalues (like a Deferred)\n   *\n   *\tunique:\t\t\twill ensure a callback can only be added once (no duplicate in the list)\n   *\n   *\tstopOnFalse:\tinterrupt callings when a callback returns false\n   *\n   */\n  jQuery.Callbacks = function (options) {\n    // Convert options from String-formatted to Object-formatted if needed\n    // (we check in cache first)\n    options = typeof options === \"string\" ? createOptions(options) : jQuery.extend({}, options);\n    var\n      // Flag to know if list is currently firing\n      firing,\n      // Last fire value for non-forgettable lists\n      memory,\n      // Flag to know if list was already fired\n      _fired,\n      // Flag to prevent firing\n      _locked,\n      // Actual callback list\n      list = [],\n      // Queue of execution data for repeatable lists\n      queue = [],\n      // Index of currently firing callback (modified by add/remove as needed)\n      firingIndex = -1,\n      // Fire callbacks\n      fire = function fire() {\n        // Enforce single-firing\n        _locked = _locked || options.once;\n\n        // Execute callbacks for all pending executions,\n        // respecting firingIndex overrides and runtime changes\n        _fired = firing = true;\n        for (; queue.length; firingIndex = -1) {\n          memory = queue.shift();\n          while (++firingIndex < list.length) {\n            // Run callback and check for early termination\n            if (list[firingIndex].apply(memory[0], memory[1]) === false && options.stopOnFalse) {\n              // Jump to end and forget the data so .add doesn't re-fire\n              firingIndex = list.length;\n              memory = false;\n            }\n          }\n        }\n\n        // Forget the data if we're done with it\n        if (!options.memory) {\n          memory = false;\n        }\n        firing = false;\n\n        // Clean up if we're done firing for good\n        if (_locked) {\n          // Keep an empty list if we have data for future add calls\n          if (memory) {\n            list = [];\n\n            // Otherwise, this object is spent\n          } else {\n            list = \"\";\n          }\n        }\n      },\n      // Actual Callbacks object\n      self = {\n        // Add a callback or a collection of callbacks to the list\n        add: function add() {\n          if (list) {\n            // If we have memory from a past run, we should fire after adding\n            if (memory && !firing) {\n              firingIndex = list.length - 1;\n              queue.push(memory);\n            }\n            (function add(args) {\n              jQuery.each(args, function (_, arg) {\n                if (isFunction(arg)) {\n                  if (!options.unique || !self.has(arg)) {\n                    list.push(arg);\n                  }\n                } else if (arg && arg.length && toType(arg) !== \"string\") {\n                  // Inspect recursively\n                  add(arg);\n                }\n              });\n            })(arguments);\n            if (memory && !firing) {\n              fire();\n            }\n          }\n          return this;\n        },\n        // Remove a callback from the list\n        remove: function remove() {\n          jQuery.each(arguments, function (_, arg) {\n            var index;\n            while ((index = jQuery.inArray(arg, list, index)) > -1) {\n              list.splice(index, 1);\n\n              // Handle firing indexes\n              if (index <= firingIndex) {\n                firingIndex--;\n              }\n            }\n          });\n          return this;\n        },\n        // Check if a given callback is in the list.\n        // If no argument is given, return whether or not list has callbacks attached.\n        has: function has(fn) {\n          return fn ? jQuery.inArray(fn, list) > -1 : list.length > 0;\n        },\n        // Remove all callbacks from the list\n        empty: function empty() {\n          if (list) {\n            list = [];\n          }\n          return this;\n        },\n        // Disable .fire and .add\n        // Abort any current/pending executions\n        // Clear all callbacks and values\n        disable: function disable() {\n          _locked = queue = [];\n          list = memory = \"\";\n          return this;\n        },\n        disabled: function disabled() {\n          return !list;\n        },\n        // Disable .fire\n        // Also disable .add unless we have memory (since it would have no effect)\n        // Abort any pending executions\n        lock: function lock() {\n          _locked = queue = [];\n          if (!memory && !firing) {\n            list = memory = \"\";\n          }\n          return this;\n        },\n        locked: function locked() {\n          return !!_locked;\n        },\n        // Call all callbacks with the given context and arguments\n        fireWith: function fireWith(context, args) {\n          if (!_locked) {\n            args = args || [];\n            args = [context, args.slice ? args.slice() : args];\n            queue.push(args);\n            if (!firing) {\n              fire();\n            }\n          }\n          return this;\n        },\n        // Call all the callbacks with the given arguments\n        fire: function fire() {\n          self.fireWith(this, arguments);\n          return this;\n        },\n        // To know if the callbacks have already been called at least once\n        fired: function fired() {\n          return !!_fired;\n        }\n      };\n    return self;\n  };\n  function Identity(v) {\n    return v;\n  }\n  function Thrower(ex) {\n    throw ex;\n  }\n  function adoptValue(value, resolve, reject, noValue) {\n    var method;\n    try {\n      // Check for promise aspect first to privilege synchronous behavior\n      if (value && isFunction(method = value.promise)) {\n        method.call(value).done(resolve).fail(reject);\n\n        // Other thenables\n      } else if (value && isFunction(method = value.then)) {\n        method.call(value, resolve, reject);\n\n        // Other non-thenables\n      } else {\n        // Control `resolve` arguments by letting Array#slice cast boolean `noValue` to integer:\n        // * false: [ value ].slice( 0 ) => resolve( value )\n        // * true: [ value ].slice( 1 ) => resolve()\n        resolve.apply(undefined, [value].slice(noValue));\n      }\n\n      // For Promises/A+, convert exceptions into rejections\n      // Since jQuery.when doesn't unwrap thenables, we can skip the extra checks appearing in\n      // Deferred#then to conditionally suppress rejection.\n    } catch (value) {\n      // Support: Android 4.0 only\n      // Strict mode functions invoked without .call/.apply get global-object context\n      reject.apply(undefined, [value]);\n    }\n  }\n  jQuery.extend({\n    Deferred: function Deferred(func) {\n      var tuples = [\n        // action, add listener, callbacks,\n        // ... .then handlers, argument index, [final state]\n        [\"notify\", \"progress\", jQuery.Callbacks(\"memory\"), jQuery.Callbacks(\"memory\"), 2], [\"resolve\", \"done\", jQuery.Callbacks(\"once memory\"), jQuery.Callbacks(\"once memory\"), 0, \"resolved\"], [\"reject\", \"fail\", jQuery.Callbacks(\"once memory\"), jQuery.Callbacks(\"once memory\"), 1, \"rejected\"]],\n        _state = \"pending\",\n        _promise = {\n          state: function state() {\n            return _state;\n          },\n          always: function always() {\n            deferred.done(arguments).fail(arguments);\n            return this;\n          },\n          \"catch\": function _catch(fn) {\n            return _promise.then(null, fn);\n          },\n          // Keep pipe for back-compat\n          pipe: function pipe( /* fnDone, fnFail, fnProgress */\n          ) {\n            var fns = arguments;\n            return jQuery.Deferred(function (newDefer) {\n              jQuery.each(tuples, function (_i, tuple) {\n                // Map tuples (progress, done, fail) to arguments (done, fail, progress)\n                var fn = isFunction(fns[tuple[4]]) && fns[tuple[4]];\n\n                // deferred.progress(function() { bind to newDefer or newDefer.notify })\n                // deferred.done(function() { bind to newDefer or newDefer.resolve })\n                // deferred.fail(function() { bind to newDefer or newDefer.reject })\n                deferred[tuple[1]](function () {\n                  var returned = fn && fn.apply(this, arguments);\n                  if (returned && isFunction(returned.promise)) {\n                    returned.promise().progress(newDefer.notify).done(newDefer.resolve).fail(newDefer.reject);\n                  } else {\n                    newDefer[tuple[0] + \"With\"](this, fn ? [returned] : arguments);\n                  }\n                });\n              });\n              fns = null;\n            }).promise();\n          },\n          then: function then(onFulfilled, onRejected, onProgress) {\n            var maxDepth = 0;\n            function resolve(depth, deferred, handler, special) {\n              return function () {\n                var that = this,\n                  args = arguments,\n                  mightThrow = function mightThrow() {\n                    var returned, then;\n\n                    // Support: Promises/A+ section 2.3.3.3.3\n                    // https://promisesaplus.com/#point-59\n                    // Ignore double-resolution attempts\n                    if (depth < maxDepth) {\n                      return;\n                    }\n                    returned = handler.apply(that, args);\n\n                    // Support: Promises/A+ section 2.3.1\n                    // https://promisesaplus.com/#point-48\n                    if (returned === deferred.promise()) {\n                      throw new TypeError(\"Thenable self-resolution\");\n                    }\n\n                    // Support: Promises/A+ sections 2.3.3.1, 3.5\n                    // https://promisesaplus.com/#point-54\n                    // https://promisesaplus.com/#point-75\n                    // Retrieve `then` only once\n                    then = returned && (\n                    // Support: Promises/A+ section 2.3.4\n                    // https://promisesaplus.com/#point-64\n                    // Only check objects and functions for thenability\n                    _typeof(returned) === \"object\" || typeof returned === \"function\") && returned.then;\n\n                    // Handle a returned thenable\n                    if (isFunction(then)) {\n                      // Special processors (notify) just wait for resolution\n                      if (special) {\n                        then.call(returned, resolve(maxDepth, deferred, Identity, special), resolve(maxDepth, deferred, Thrower, special));\n\n                        // Normal processors (resolve) also hook into progress\n                      } else {\n                        // ...and disregard older resolution values\n                        maxDepth++;\n                        then.call(returned, resolve(maxDepth, deferred, Identity, special), resolve(maxDepth, deferred, Thrower, special), resolve(maxDepth, deferred, Identity, deferred.notifyWith));\n                      }\n\n                      // Handle all other returned values\n                    } else {\n                      // Only substitute handlers pass on context\n                      // and multiple values (non-spec behavior)\n                      if (handler !== Identity) {\n                        that = undefined;\n                        args = [returned];\n                      }\n\n                      // Process the value(s)\n                      // Default process is resolve\n                      (special || deferred.resolveWith)(that, args);\n                    }\n                  },\n                  // Only normal processors (resolve) catch and reject exceptions\n                  process = special ? mightThrow : function () {\n                    try {\n                      mightThrow();\n                    } catch (e) {\n                      if (jQuery.Deferred.exceptionHook) {\n                        jQuery.Deferred.exceptionHook(e, process.error);\n                      }\n\n                      // Support: Promises/A+ section 2.3.3.3.4.1\n                      // https://promisesaplus.com/#point-61\n                      // Ignore post-resolution exceptions\n                      if (depth + 1 >= maxDepth) {\n                        // Only substitute handlers pass on context\n                        // and multiple values (non-spec behavior)\n                        if (handler !== Thrower) {\n                          that = undefined;\n                          args = [e];\n                        }\n                        deferred.rejectWith(that, args);\n                      }\n                    }\n                  };\n\n                // Support: Promises/A+ section 2.3.3.3.1\n                // https://promisesaplus.com/#point-57\n                // Re-resolve promises immediately to dodge false rejection from\n                // subsequent errors\n                if (depth) {\n                  process();\n                } else {\n                  // Call an optional hook to record the error, in case of exception\n                  // since it's otherwise lost when execution goes async\n                  if (jQuery.Deferred.getErrorHook) {\n                    process.error = jQuery.Deferred.getErrorHook();\n\n                    // The deprecated alias of the above. While the name suggests\n                    // returning the stack, not an error instance, jQuery just passes\n                    // it directly to `console.warn` so both will work; an instance\n                    // just better cooperates with source maps.\n                  } else if (jQuery.Deferred.getStackHook) {\n                    process.error = jQuery.Deferred.getStackHook();\n                  }\n                  window.setTimeout(process);\n                }\n              };\n            }\n            return jQuery.Deferred(function (newDefer) {\n              // progress_handlers.add( ... )\n              tuples[0][3].add(resolve(0, newDefer, isFunction(onProgress) ? onProgress : Identity, newDefer.notifyWith));\n\n              // fulfilled_handlers.add( ... )\n              tuples[1][3].add(resolve(0, newDefer, isFunction(onFulfilled) ? onFulfilled : Identity));\n\n              // rejected_handlers.add( ... )\n              tuples[2][3].add(resolve(0, newDefer, isFunction(onRejected) ? onRejected : Thrower));\n            }).promise();\n          },\n          // Get a promise for this deferred\n          // If obj is provided, the promise aspect is added to the object\n          promise: function promise(obj) {\n            return obj != null ? jQuery.extend(obj, _promise) : _promise;\n          }\n        },\n        deferred = {};\n\n      // Add list-specific methods\n      jQuery.each(tuples, function (i, tuple) {\n        var list = tuple[2],\n          stateString = tuple[5];\n\n        // promise.progress = list.add\n        // promise.done = list.add\n        // promise.fail = list.add\n        _promise[tuple[1]] = list.add;\n\n        // Handle state\n        if (stateString) {\n          list.add(function () {\n            // state = \"resolved\" (i.e., fulfilled)\n            // state = \"rejected\"\n            _state = stateString;\n          },\n          // rejected_callbacks.disable\n          // fulfilled_callbacks.disable\n          tuples[3 - i][2].disable,\n          // rejected_handlers.disable\n          // fulfilled_handlers.disable\n          tuples[3 - i][3].disable,\n          // progress_callbacks.lock\n          tuples[0][2].lock,\n          // progress_handlers.lock\n          tuples[0][3].lock);\n        }\n\n        // progress_handlers.fire\n        // fulfilled_handlers.fire\n        // rejected_handlers.fire\n        list.add(tuple[3].fire);\n\n        // deferred.notify = function() { deferred.notifyWith(...) }\n        // deferred.resolve = function() { deferred.resolveWith(...) }\n        // deferred.reject = function() { deferred.rejectWith(...) }\n        deferred[tuple[0]] = function () {\n          deferred[tuple[0] + \"With\"](this === deferred ? undefined : this, arguments);\n          return this;\n        };\n\n        // deferred.notifyWith = list.fireWith\n        // deferred.resolveWith = list.fireWith\n        // deferred.rejectWith = list.fireWith\n        deferred[tuple[0] + \"With\"] = list.fireWith;\n      });\n\n      // Make the deferred a promise\n      _promise.promise(deferred);\n\n      // Call given func if any\n      if (func) {\n        func.call(deferred, deferred);\n      }\n\n      // All done!\n      return deferred;\n    },\n    // Deferred helper\n    when: function when(singleValue) {\n      var\n        // count of uncompleted subordinates\n        remaining = arguments.length,\n        // count of unprocessed arguments\n        i = remaining,\n        // subordinate fulfillment data\n        resolveContexts = Array(i),\n        resolveValues = _slice.call(arguments),\n        // the primary Deferred\n        primary = jQuery.Deferred(),\n        // subordinate callback factory\n        updateFunc = function updateFunc(i) {\n          return function (value) {\n            resolveContexts[i] = this;\n            resolveValues[i] = arguments.length > 1 ? _slice.call(arguments) : value;\n            if (! --remaining) {\n              primary.resolveWith(resolveContexts, resolveValues);\n            }\n          };\n        };\n\n      // Single- and empty arguments are adopted like Promise.resolve\n      if (remaining <= 1) {\n        adoptValue(singleValue, primary.done(updateFunc(i)).resolve, primary.reject, !remaining);\n\n        // Use .then() to unwrap secondary thenables (cf. gh-3000)\n        if (primary.state() === \"pending\" || isFunction(resolveValues[i] && resolveValues[i].then)) {\n          return primary.then();\n        }\n      }\n\n      // Multiple arguments are aggregated like Promise.all array elements\n      while (i--) {\n        adoptValue(resolveValues[i], updateFunc(i), primary.reject);\n      }\n      return primary.promise();\n    }\n  });\n\n  // These usually indicate a programmer mistake during development,\n  // warn about them ASAP rather than swallowing them by default.\n  var rerrorNames = /^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;\n\n  // If `jQuery.Deferred.getErrorHook` is defined, `asyncError` is an error\n  // captured before the async barrier to get the original error cause\n  // which may otherwise be hidden.\n  jQuery.Deferred.exceptionHook = function (error, asyncError) {\n    // Support: IE 8 - 9 only\n    // Console exists when dev tools are open, which can happen at any time\n    if (window.console && window.console.warn && error && rerrorNames.test(error.name)) {\n      window.console.warn(\"jQuery.Deferred exception: \" + error.message, error.stack, asyncError);\n    }\n  };\n  jQuery.readyException = function (error) {\n    window.setTimeout(function () {\n      throw error;\n    });\n  };\n\n  // The deferred used on DOM ready\n  var readyList = jQuery.Deferred();\n  jQuery.fn.ready = function (fn) {\n    readyList.then(fn)\n\n    // Wrap jQuery.readyException in a function so that the lookup\n    // happens at the time of error handling instead of callback\n    // registration.\n    [\"catch\"](function (error) {\n      jQuery.readyException(error);\n    });\n    return this;\n  };\n  jQuery.extend({\n    // Is the DOM ready to be used? Set to true once it occurs.\n    isReady: false,\n    // A counter to track how many items to wait for before\n    // the ready event fires. See trac-6781\n    readyWait: 1,\n    // Handle when the DOM is ready\n    ready: function ready(wait) {\n      // Abort if there are pending holds or we're already ready\n      if (wait === true ? --jQuery.readyWait : jQuery.isReady) {\n        return;\n      }\n\n      // Remember that the DOM is ready\n      jQuery.isReady = true;\n\n      // If a normal DOM Ready event fired, decrement, and wait if need be\n      if (wait !== true && --jQuery.readyWait > 0) {\n        return;\n      }\n\n      // If there are functions bound, to execute\n      readyList.resolveWith(document, [jQuery]);\n    }\n  });\n  jQuery.ready.then = readyList.then;\n\n  // The ready event handler and self cleanup method\n  function completed() {\n    document.removeEventListener(\"DOMContentLoaded\", completed);\n    window.removeEventListener(\"load\", completed);\n    jQuery.ready();\n  }\n\n  // Catch cases where $(document).ready() is called\n  // after the browser event has already occurred.\n  // Support: IE <=9 - 10 only\n  // Older IE sometimes signals \"interactive\" too soon\n  if (document.readyState === \"complete\" || document.readyState !== \"loading\" && !document.documentElement.doScroll) {\n    // Handle it asynchronously to allow scripts the opportunity to delay ready\n    window.setTimeout(jQuery.ready);\n  } else {\n    // Use the handy event callback\n    document.addEventListener(\"DOMContentLoaded\", completed);\n\n    // A fallback to window.onload, that will always work\n    window.addEventListener(\"load\", completed);\n  }\n\n  // Multifunctional method to get and set values of a collection\n  // The value/s can optionally be executed if it's a function\n  var access = function access(elems, fn, key, value, chainable, emptyGet, raw) {\n    var i = 0,\n      len = elems.length,\n      bulk = key == null;\n\n    // Sets many values\n    if (toType(key) === \"object\") {\n      chainable = true;\n      for (i in key) {\n        access(elems, fn, i, key[i], true, emptyGet, raw);\n      }\n\n      // Sets one value\n    } else if (value !== undefined) {\n      chainable = true;\n      if (!isFunction(value)) {\n        raw = true;\n      }\n      if (bulk) {\n        // Bulk operations run against the entire set\n        if (raw) {\n          fn.call(elems, value);\n          fn = null;\n\n          // ...except when executing function values\n        } else {\n          bulk = fn;\n          fn = function fn(elem, _key, value) {\n            return bulk.call(jQuery(elem), value);\n          };\n        }\n      }\n      if (fn) {\n        for (; i < len; i++) {\n          fn(elems[i], key, raw ? value : value.call(elems[i], i, fn(elems[i], key)));\n        }\n      }\n    }\n    if (chainable) {\n      return elems;\n    }\n\n    // Gets\n    if (bulk) {\n      return fn.call(elems);\n    }\n    return len ? fn(elems[0], key) : emptyGet;\n  };\n\n  // Matches dashed string for camelizing\n  var rmsPrefix = /^-ms-/,\n    rdashAlpha = /-([a-z])/g;\n\n  // Used by camelCase as callback to replace()\n  function fcamelCase(_all, letter) {\n    return letter.toUpperCase();\n  }\n\n  // Convert dashed to camelCase; used by the css and data modules\n  // Support: IE <=9 - 11, Edge 12 - 15\n  // Microsoft forgot to hump their vendor prefix (trac-9572)\n  function camelCase(string) {\n    return string.replace(rmsPrefix, \"ms-\").replace(rdashAlpha, fcamelCase);\n  }\n  var acceptData = function acceptData(owner) {\n    // Accepts only:\n    //  - Node\n    //    - Node.ELEMENT_NODE\n    //    - Node.DOCUMENT_NODE\n    //  - Object\n    //    - Any\n    return owner.nodeType === 1 || owner.nodeType === 9 || !+owner.nodeType;\n  };\n  function Data() {\n    this.expando = jQuery.expando + Data.uid++;\n  }\n  Data.uid = 1;\n  Data.prototype = {\n    cache: function cache(owner) {\n      // Check if the owner object already has a cache\n      var value = owner[this.expando];\n\n      // If not, create one\n      if (!value) {\n        value = {};\n\n        // We can accept data for non-element nodes in modern browsers,\n        // but we should not, see trac-8335.\n        // Always return an empty object.\n        if (acceptData(owner)) {\n          // If it is a node unlikely to be stringify-ed or looped over\n          // use plain assignment\n          if (owner.nodeType) {\n            owner[this.expando] = value;\n\n            // Otherwise secure it in a non-enumerable property\n            // configurable must be true to allow the property to be\n            // deleted when data is removed\n          } else {\n            Object.defineProperty(owner, this.expando, {\n              value: value,\n              configurable: true\n            });\n          }\n        }\n      }\n      return value;\n    },\n    set: function set(owner, data, value) {\n      var prop,\n        cache = this.cache(owner);\n\n      // Handle: [ owner, key, value ] args\n      // Always use camelCase key (gh-2257)\n      if (typeof data === \"string\") {\n        cache[camelCase(data)] = value;\n\n        // Handle: [ owner, { properties } ] args\n      } else {\n        // Copy the properties one-by-one to the cache object\n        for (prop in data) {\n          cache[camelCase(prop)] = data[prop];\n        }\n      }\n      return cache;\n    },\n    get: function get(owner, key) {\n      return key === undefined ? this.cache(owner) :\n      // Always use camelCase key (gh-2257)\n      owner[this.expando] && owner[this.expando][camelCase(key)];\n    },\n    access: function access(owner, key, value) {\n      // In cases where either:\n      //\n      //   1. No key was specified\n      //   2. A string key was specified, but no value provided\n      //\n      // Take the \"read\" path and allow the get method to determine\n      // which value to return, respectively either:\n      //\n      //   1. The entire cache object\n      //   2. The data stored at the key\n      //\n      if (key === undefined || key && typeof key === \"string\" && value === undefined) {\n        return this.get(owner, key);\n      }\n\n      // When the key is not a string, or both a key and value\n      // are specified, set or extend (existing objects) with either:\n      //\n      //   1. An object of properties\n      //   2. A key and value\n      //\n      this.set(owner, key, value);\n\n      // Since the \"set\" path can have two possible entry points\n      // return the expected data based on which path was taken[*]\n      return value !== undefined ? value : key;\n    },\n    remove: function remove(owner, key) {\n      var i,\n        cache = owner[this.expando];\n      if (cache === undefined) {\n        return;\n      }\n      if (key !== undefined) {\n        // Support array or space separated string of keys\n        if (Array.isArray(key)) {\n          // If key is an array of keys...\n          // We always set camelCase keys, so remove that.\n          key = key.map(camelCase);\n        } else {\n          key = camelCase(key);\n\n          // If a key with the spaces exists, use it.\n          // Otherwise, create an array by matching non-whitespace\n          key = key in cache ? [key] : key.match(rnothtmlwhite) || [];\n        }\n        i = key.length;\n        while (i--) {\n          delete cache[key[i]];\n        }\n      }\n\n      // Remove the expando if there's no more data\n      if (key === undefined || jQuery.isEmptyObject(cache)) {\n        // Support: Chrome <=35 - 45\n        // Webkit & Blink performance suffers when deleting properties\n        // from DOM nodes, so set to undefined instead\n        // https://bugs.chromium.org/p/chromium/issues/detail?id=378607 (bug restricted)\n        if (owner.nodeType) {\n          owner[this.expando] = undefined;\n        } else {\n          delete owner[this.expando];\n        }\n      }\n    },\n    hasData: function hasData(owner) {\n      var cache = owner[this.expando];\n      return cache !== undefined && !jQuery.isEmptyObject(cache);\n    }\n  };\n  var dataPriv = new Data();\n  var dataUser = new Data();\n\n  //\tImplementation Summary\n  //\n  //\t1. Enforce API surface and semantic compatibility with 1.9.x branch\n  //\t2. Improve the module's maintainability by reducing the storage\n  //\t\tpaths to a single mechanism.\n  //\t3. Use the same single mechanism to support \"private\" and \"user\" data.\n  //\t4. _Never_ expose \"private\" data to user code (TODO: Drop _data, _removeData)\n  //\t5. Avoid exposing implementation details on user objects (eg. expando properties)\n  //\t6. Provide a clear path for implementation upgrade to WeakMap in 2014\n\n  var rbrace = /^(?:\\{[\\w\\W]*\\}|\\[[\\w\\W]*\\])$/,\n    rmultiDash = /[A-Z]/g;\n  function getData(data) {\n    if (data === \"true\") {\n      return true;\n    }\n    if (data === \"false\") {\n      return false;\n    }\n    if (data === \"null\") {\n      return null;\n    }\n\n    // Only convert to a number if it doesn't change the string\n    if (data === +data + \"\") {\n      return +data;\n    }\n    if (rbrace.test(data)) {\n      return JSON.parse(data);\n    }\n    return data;\n  }\n  function dataAttr(elem, key, data) {\n    var name;\n\n    // If nothing was found internally, try to fetch any\n    // data from the HTML5 data-* attribute\n    if (data === undefined && elem.nodeType === 1) {\n      name = \"data-\" + key.replace(rmultiDash, \"-$&\").toLowerCase();\n      data = elem.getAttribute(name);\n      if (typeof data === \"string\") {\n        try {\n          data = getData(data);\n        } catch (e) {}\n\n        // Make sure we set the data so it isn't changed later\n        dataUser.set(elem, key, data);\n      } else {\n        data = undefined;\n      }\n    }\n    return data;\n  }\n  jQuery.extend({\n    hasData: function hasData(elem) {\n      return dataUser.hasData(elem) || dataPriv.hasData(elem);\n    },\n    data: function data(elem, name, _data) {\n      return dataUser.access(elem, name, _data);\n    },\n    removeData: function removeData(elem, name) {\n      dataUser.remove(elem, name);\n    },\n    // TODO: Now that all calls to _data and _removeData have been replaced\n    // with direct calls to dataPriv methods, these can be deprecated.\n    _data: function _data(elem, name, data) {\n      return dataPriv.access(elem, name, data);\n    },\n    _removeData: function _removeData(elem, name) {\n      dataPriv.remove(elem, name);\n    }\n  });\n  jQuery.fn.extend({\n    data: function data(key, value) {\n      var i,\n        name,\n        data,\n        elem = this[0],\n        attrs = elem && elem.attributes;\n\n      // Gets all values\n      if (key === undefined) {\n        if (this.length) {\n          data = dataUser.get(elem);\n          if (elem.nodeType === 1 && !dataPriv.get(elem, \"hasDataAttrs\")) {\n            i = attrs.length;\n            while (i--) {\n              // Support: IE 11 only\n              // The attrs elements can be null (trac-14894)\n              if (attrs[i]) {\n                name = attrs[i].name;\n                if (name.indexOf(\"data-\") === 0) {\n                  name = camelCase(name.slice(5));\n                  dataAttr(elem, name, data[name]);\n                }\n              }\n            }\n            dataPriv.set(elem, \"hasDataAttrs\", true);\n          }\n        }\n        return data;\n      }\n\n      // Sets multiple values\n      if (_typeof(key) === \"object\") {\n        return this.each(function () {\n          dataUser.set(this, key);\n        });\n      }\n      return access(this, function (value) {\n        var data;\n\n        // The calling jQuery object (element matches) is not empty\n        // (and therefore has an element appears at this[ 0 ]) and the\n        // `value` parameter was not undefined. An empty jQuery object\n        // will result in `undefined` for elem = this[ 0 ] which will\n        // throw an exception if an attempt to read a data cache is made.\n        if (elem && value === undefined) {\n          // Attempt to get data from the cache\n          // The key will always be camelCased in Data\n          data = dataUser.get(elem, key);\n          if (data !== undefined) {\n            return data;\n          }\n\n          // Attempt to \"discover\" the data in\n          // HTML5 custom data-* attrs\n          data = dataAttr(elem, key);\n          if (data !== undefined) {\n            return data;\n          }\n\n          // We tried really hard, but the data doesn't exist.\n          return;\n        }\n\n        // Set the data...\n        this.each(function () {\n          // We always store the camelCased key\n          dataUser.set(this, key, value);\n        });\n      }, null, value, arguments.length > 1, null, true);\n    },\n    removeData: function removeData(key) {\n      return this.each(function () {\n        dataUser.remove(this, key);\n      });\n    }\n  });\n  jQuery.extend({\n    queue: function queue(elem, type, data) {\n      var queue;\n      if (elem) {\n        type = (type || \"fx\") + \"queue\";\n        queue = dataPriv.get(elem, type);\n\n        // Speed up dequeue by getting out quickly if this is just a lookup\n        if (data) {\n          if (!queue || Array.isArray(data)) {\n            queue = dataPriv.access(elem, type, jQuery.makeArray(data));\n          } else {\n            queue.push(data);\n          }\n        }\n        return queue || [];\n      }\n    },\n    dequeue: function dequeue(elem, type) {\n      type = type || \"fx\";\n      var queue = jQuery.queue(elem, type),\n        startLength = queue.length,\n        fn = queue.shift(),\n        hooks = jQuery._queueHooks(elem, type),\n        next = function next() {\n          jQuery.dequeue(elem, type);\n        };\n\n      // If the fx queue is dequeued, always remove the progress sentinel\n      if (fn === \"inprogress\") {\n        fn = queue.shift();\n        startLength--;\n      }\n      if (fn) {\n        // Add a progress sentinel to prevent the fx queue from being\n        // automatically dequeued\n        if (type === \"fx\") {\n          queue.unshift(\"inprogress\");\n        }\n\n        // Clear up the last queue stop function\n        delete hooks.stop;\n        fn.call(elem, next, hooks);\n      }\n      if (!startLength && hooks) {\n        hooks.empty.fire();\n      }\n    },\n    // Not public - generate a queueHooks object, or return the current one\n    _queueHooks: function _queueHooks(elem, type) {\n      var key = type + \"queueHooks\";\n      return dataPriv.get(elem, key) || dataPriv.access(elem, key, {\n        empty: jQuery.Callbacks(\"once memory\").add(function () {\n          dataPriv.remove(elem, [type + \"queue\", key]);\n        })\n      });\n    }\n  });\n  jQuery.fn.extend({\n    queue: function queue(type, data) {\n      var setter = 2;\n      if (typeof type !== \"string\") {\n        data = type;\n        type = \"fx\";\n        setter--;\n      }\n      if (arguments.length < setter) {\n        return jQuery.queue(this[0], type);\n      }\n      return data === undefined ? this : this.each(function () {\n        var queue = jQuery.queue(this, type, data);\n\n        // Ensure a hooks for this queue\n        jQuery._queueHooks(this, type);\n        if (type === \"fx\" && queue[0] !== \"inprogress\") {\n          jQuery.dequeue(this, type);\n        }\n      });\n    },\n    dequeue: function dequeue(type) {\n      return this.each(function () {\n        jQuery.dequeue(this, type);\n      });\n    },\n    clearQueue: function clearQueue(type) {\n      return this.queue(type || \"fx\", []);\n    },\n    // Get a promise resolved when queues of a certain type\n    // are emptied (fx is the type by default)\n    promise: function promise(type, obj) {\n      var tmp,\n        count = 1,\n        defer = jQuery.Deferred(),\n        elements = this,\n        i = this.length,\n        resolve = function resolve() {\n          if (! --count) {\n            defer.resolveWith(elements, [elements]);\n          }\n        };\n      if (typeof type !== \"string\") {\n        obj = type;\n        type = undefined;\n      }\n      type = type || \"fx\";\n      while (i--) {\n        tmp = dataPriv.get(elements[i], type + \"queueHooks\");\n        if (tmp && tmp.empty) {\n          count++;\n          tmp.empty.add(resolve);\n        }\n      }\n      resolve();\n      return defer.promise(obj);\n    }\n  });\n  var pnum = /[+-]?(?:\\d*\\.|)\\d+(?:[eE][+-]?\\d+|)/.source;\n  var rcssNum = new RegExp(\"^(?:([+-])=|)(\" + pnum + \")([a-z%]*)$\", \"i\");\n  var cssExpand = [\"Top\", \"Right\", \"Bottom\", \"Left\"];\n  var documentElement = document.documentElement;\n  var isAttached = function isAttached(elem) {\n      return jQuery.contains(elem.ownerDocument, elem);\n    },\n    composed = {\n      composed: true\n    };\n\n  // Support: IE 9 - 11+, Edge 12 - 18+, iOS 10.0 - 10.2 only\n  // Check attachment across shadow DOM boundaries when possible (gh-3504)\n  // Support: iOS 10.0-10.2 only\n  // Early iOS 10 versions support `attachShadow` but not `getRootNode`,\n  // leading to errors. We need to check for `getRootNode`.\n  if (documentElement.getRootNode) {\n    isAttached = function isAttached(elem) {\n      return jQuery.contains(elem.ownerDocument, elem) || elem.getRootNode(composed) === elem.ownerDocument;\n    };\n  }\n  var isHiddenWithinTree = function isHiddenWithinTree(elem, el) {\n    // isHiddenWithinTree might be called from jQuery#filter function;\n    // in that case, element will be second argument\n    elem = el || elem;\n\n    // Inline style trumps all\n    return elem.style.display === \"none\" || elem.style.display === \"\" &&\n    // Otherwise, check computed style\n    // Support: Firefox <=43 - 45\n    // Disconnected elements can have computed display: none, so first confirm that elem is\n    // in the document.\n    isAttached(elem) && jQuery.css(elem, \"display\") === \"none\";\n  };\n  function adjustCSS(elem, prop, valueParts, tween) {\n    var adjusted,\n      scale,\n      maxIterations = 20,\n      currentValue = tween ? function () {\n        return tween.cur();\n      } : function () {\n        return jQuery.css(elem, prop, \"\");\n      },\n      initial = currentValue(),\n      unit = valueParts && valueParts[3] || (jQuery.cssNumber[prop] ? \"\" : \"px\"),\n      // Starting value computation is required for potential unit mismatches\n      initialInUnit = elem.nodeType && (jQuery.cssNumber[prop] || unit !== \"px\" && +initial) && rcssNum.exec(jQuery.css(elem, prop));\n    if (initialInUnit && initialInUnit[3] !== unit) {\n      // Support: Firefox <=54\n      // Halve the iteration target value to prevent interference from CSS upper bounds (gh-2144)\n      initial = initial / 2;\n\n      // Trust units reported by jQuery.css\n      unit = unit || initialInUnit[3];\n\n      // Iteratively approximate from a nonzero starting point\n      initialInUnit = +initial || 1;\n      while (maxIterations--) {\n        // Evaluate and update our best guess (doubling guesses that zero out).\n        // Finish if the scale equals or crosses 1 (making the old*new product non-positive).\n        jQuery.style(elem, prop, initialInUnit + unit);\n        if ((1 - scale) * (1 - (scale = currentValue() / initial || 0.5)) <= 0) {\n          maxIterations = 0;\n        }\n        initialInUnit = initialInUnit / scale;\n      }\n      initialInUnit = initialInUnit * 2;\n      jQuery.style(elem, prop, initialInUnit + unit);\n\n      // Make sure we update the tween properties later on\n      valueParts = valueParts || [];\n    }\n    if (valueParts) {\n      initialInUnit = +initialInUnit || +initial || 0;\n\n      // Apply relative offset (+=/-=) if specified\n      adjusted = valueParts[1] ? initialInUnit + (valueParts[1] + 1) * valueParts[2] : +valueParts[2];\n      if (tween) {\n        tween.unit = unit;\n        tween.start = initialInUnit;\n        tween.end = adjusted;\n      }\n    }\n    return adjusted;\n  }\n  var defaultDisplayMap = {};\n  function getDefaultDisplay(elem) {\n    var temp,\n      doc = elem.ownerDocument,\n      nodeName = elem.nodeName,\n      display = defaultDisplayMap[nodeName];\n    if (display) {\n      return display;\n    }\n    temp = doc.body.appendChild(doc.createElement(nodeName));\n    display = jQuery.css(temp, \"display\");\n    temp.parentNode.removeChild(temp);\n    if (display === \"none\") {\n      display = \"block\";\n    }\n    defaultDisplayMap[nodeName] = display;\n    return display;\n  }\n  function showHide(elements, show) {\n    var display,\n      elem,\n      values = [],\n      index = 0,\n      length = elements.length;\n\n    // Determine new display value for elements that need to change\n    for (; index < length; index++) {\n      elem = elements[index];\n      if (!elem.style) {\n        continue;\n      }\n      display = elem.style.display;\n      if (show) {\n        // Since we force visibility upon cascade-hidden elements, an immediate (and slow)\n        // check is required in this first loop unless we have a nonempty display value (either\n        // inline or about-to-be-restored)\n        if (display === \"none\") {\n          values[index] = dataPriv.get(elem, \"display\") || null;\n          if (!values[index]) {\n            elem.style.display = \"\";\n          }\n        }\n        if (elem.style.display === \"\" && isHiddenWithinTree(elem)) {\n          values[index] = getDefaultDisplay(elem);\n        }\n      } else {\n        if (display !== \"none\") {\n          values[index] = \"none\";\n\n          // Remember what we're overwriting\n          dataPriv.set(elem, \"display\", display);\n        }\n      }\n    }\n\n    // Set the display of the elements in a second loop to avoid constant reflow\n    for (index = 0; index < length; index++) {\n      if (values[index] != null) {\n        elements[index].style.display = values[index];\n      }\n    }\n    return elements;\n  }\n  jQuery.fn.extend({\n    show: function show() {\n      return showHide(this, true);\n    },\n    hide: function hide() {\n      return showHide(this);\n    },\n    toggle: function toggle(state) {\n      if (typeof state === \"boolean\") {\n        return state ? this.show() : this.hide();\n      }\n      return this.each(function () {\n        if (isHiddenWithinTree(this)) {\n          jQuery(this).show();\n        } else {\n          jQuery(this).hide();\n        }\n      });\n    }\n  });\n  var rcheckableType = /^(?:checkbox|radio)$/i;\n  var rtagName = /<([a-z][^\\/\\0>\\x20\\t\\r\\n\\f]*)/i;\n  var rscriptType = /^$|^module$|\\/(?:java|ecma)script/i;\n  (function () {\n    var fragment = document.createDocumentFragment(),\n      div = fragment.appendChild(document.createElement(\"div\")),\n      input = document.createElement(\"input\");\n\n    // Support: Android 4.0 - 4.3 only\n    // Check state lost if the name is set (trac-11217)\n    // Support: Windows Web Apps (WWA)\n    // `name` and `type` must use .setAttribute for WWA (trac-14901)\n    input.setAttribute(\"type\", \"radio\");\n    input.setAttribute(\"checked\", \"checked\");\n    input.setAttribute(\"name\", \"t\");\n    div.appendChild(input);\n\n    // Support: Android <=4.1 only\n    // Older WebKit doesn't clone checked state correctly in fragments\n    support.checkClone = div.cloneNode(true).cloneNode(true).lastChild.checked;\n\n    // Support: IE <=11 only\n    // Make sure textarea (and checkbox) defaultValue is properly cloned\n    div.innerHTML = \"<textarea>x</textarea>\";\n    support.noCloneChecked = !!div.cloneNode(true).lastChild.defaultValue;\n\n    // Support: IE <=9 only\n    // IE <=9 replaces <option> tags with their contents when inserted outside of\n    // the select element.\n    div.innerHTML = \"<option></option>\";\n    support.option = !!div.lastChild;\n  })();\n\n  // We have to close these tags to support XHTML (trac-13200)\n  var wrapMap = {\n    // XHTML parsers do not magically insert elements in the\n    // same way that tag soup parsers do. So we cannot shorten\n    // this by omitting <tbody> or other required elements.\n    thead: [1, \"<table>\", \"</table>\"],\n    col: [2, \"<table><colgroup>\", \"</colgroup></table>\"],\n    tr: [2, \"<table><tbody>\", \"</tbody></table>\"],\n    td: [3, \"<table><tbody><tr>\", \"</tr></tbody></table>\"],\n    _default: [0, \"\", \"\"]\n  };\n  wrapMap.tbody = wrapMap.tfoot = wrapMap.colgroup = wrapMap.caption = wrapMap.thead;\n  wrapMap.th = wrapMap.td;\n\n  // Support: IE <=9 only\n  if (!support.option) {\n    wrapMap.optgroup = wrapMap.option = [1, \"<select multiple='multiple'>\", \"</select>\"];\n  }\n  function getAll(context, tag) {\n    // Support: IE <=9 - 11 only\n    // Use typeof to avoid zero-argument method invocation on host objects (trac-15151)\n    var ret;\n    if (typeof context.getElementsByTagName !== \"undefined\") {\n      ret = context.getElementsByTagName(tag || \"*\");\n    } else if (typeof context.querySelectorAll !== \"undefined\") {\n      ret = context.querySelectorAll(tag || \"*\");\n    } else {\n      ret = [];\n    }\n    if (tag === undefined || tag && nodeName(context, tag)) {\n      return jQuery.merge([context], ret);\n    }\n    return ret;\n  }\n\n  // Mark scripts as having already been evaluated\n  function setGlobalEval(elems, refElements) {\n    var i = 0,\n      l = elems.length;\n    for (; i < l; i++) {\n      dataPriv.set(elems[i], \"globalEval\", !refElements || dataPriv.get(refElements[i], \"globalEval\"));\n    }\n  }\n  var rhtml = /<|&#?\\w+;/;\n  function buildFragment(elems, context, scripts, selection, ignored) {\n    var elem,\n      tmp,\n      tag,\n      wrap,\n      attached,\n      j,\n      fragment = context.createDocumentFragment(),\n      nodes = [],\n      i = 0,\n      l = elems.length;\n    for (; i < l; i++) {\n      elem = elems[i];\n      if (elem || elem === 0) {\n        // Add nodes directly\n        if (toType(elem) === \"object\") {\n          // Support: Android <=4.0 only, PhantomJS 1 only\n          // push.apply(_, arraylike) throws on ancient WebKit\n          jQuery.merge(nodes, elem.nodeType ? [elem] : elem);\n\n          // Convert non-html into a text node\n        } else if (!rhtml.test(elem)) {\n          nodes.push(context.createTextNode(elem));\n\n          // Convert html into DOM nodes\n        } else {\n          tmp = tmp || fragment.appendChild(context.createElement(\"div\"));\n\n          // Deserialize a standard representation\n          tag = (rtagName.exec(elem) || [\"\", \"\"])[1].toLowerCase();\n          wrap = wrapMap[tag] || wrapMap._default;\n          tmp.innerHTML = wrap[1] + jQuery.htmlPrefilter(elem) + wrap[2];\n\n          // Descend through wrappers to the right content\n          j = wrap[0];\n          while (j--) {\n            tmp = tmp.lastChild;\n          }\n\n          // Support: Android <=4.0 only, PhantomJS 1 only\n          // push.apply(_, arraylike) throws on ancient WebKit\n          jQuery.merge(nodes, tmp.childNodes);\n\n          // Remember the top-level container\n          tmp = fragment.firstChild;\n\n          // Ensure the created nodes are orphaned (trac-12392)\n          tmp.textContent = \"\";\n        }\n      }\n    }\n\n    // Remove wrapper from fragment\n    fragment.textContent = \"\";\n    i = 0;\n    while (elem = nodes[i++]) {\n      // Skip elements already in the context collection (trac-4087)\n      if (selection && jQuery.inArray(elem, selection) > -1) {\n        if (ignored) {\n          ignored.push(elem);\n        }\n        continue;\n      }\n      attached = isAttached(elem);\n\n      // Append to fragment\n      tmp = getAll(fragment.appendChild(elem), \"script\");\n\n      // Preserve script evaluation history\n      if (attached) {\n        setGlobalEval(tmp);\n      }\n\n      // Capture executables\n      if (scripts) {\n        j = 0;\n        while (elem = tmp[j++]) {\n          if (rscriptType.test(elem.type || \"\")) {\n            scripts.push(elem);\n          }\n        }\n      }\n    }\n    return fragment;\n  }\n  var rtypenamespace = /^([^.]*)(?:\\.(.+)|)/;\n  function returnTrue() {\n    return true;\n  }\n  function returnFalse() {\n    return false;\n  }\n  function _on(elem, types, selector, data, fn, one) {\n    var origFn, type;\n\n    // Types can be a map of types/handlers\n    if (_typeof(types) === \"object\") {\n      // ( types-Object, selector, data )\n      if (typeof selector !== \"string\") {\n        // ( types-Object, data )\n        data = data || selector;\n        selector = undefined;\n      }\n      for (type in types) {\n        _on(elem, type, selector, data, types[type], one);\n      }\n      return elem;\n    }\n    if (data == null && fn == null) {\n      // ( types, fn )\n      fn = selector;\n      data = selector = undefined;\n    } else if (fn == null) {\n      if (typeof selector === \"string\") {\n        // ( types, selector, fn )\n        fn = data;\n        data = undefined;\n      } else {\n        // ( types, data, fn )\n        fn = data;\n        data = selector;\n        selector = undefined;\n      }\n    }\n    if (fn === false) {\n      fn = returnFalse;\n    } else if (!fn) {\n      return elem;\n    }\n    if (one === 1) {\n      origFn = fn;\n      fn = function fn(event) {\n        // Can use an empty set, since event contains the info\n        jQuery().off(event);\n        return origFn.apply(this, arguments);\n      };\n\n      // Use same guid so caller can remove using origFn\n      fn.guid = origFn.guid || (origFn.guid = jQuery.guid++);\n    }\n    return elem.each(function () {\n      jQuery.event.add(this, types, fn, data, selector);\n    });\n  }\n\n  /*\n   * Helper functions for managing events -- not part of the public interface.\n   * Props to Dean Edwards' addEvent library for many of the ideas.\n   */\n  jQuery.event = {\n    global: {},\n    add: function add(elem, types, handler, data, selector) {\n      var handleObjIn,\n        eventHandle,\n        tmp,\n        events,\n        t,\n        handleObj,\n        special,\n        handlers,\n        type,\n        namespaces,\n        origType,\n        elemData = dataPriv.get(elem);\n\n      // Only attach events to objects that accept data\n      if (!acceptData(elem)) {\n        return;\n      }\n\n      // Caller can pass in an object of custom data in lieu of the handler\n      if (handler.handler) {\n        handleObjIn = handler;\n        handler = handleObjIn.handler;\n        selector = handleObjIn.selector;\n      }\n\n      // Ensure that invalid selectors throw exceptions at attach time\n      // Evaluate against documentElement in case elem is a non-element node (e.g., document)\n      if (selector) {\n        jQuery.find.matchesSelector(documentElement, selector);\n      }\n\n      // Make sure that the handler has a unique ID, used to find/remove it later\n      if (!handler.guid) {\n        handler.guid = jQuery.guid++;\n      }\n\n      // Init the element's event structure and main handler, if this is the first\n      if (!(events = elemData.events)) {\n        events = elemData.events = Object.create(null);\n      }\n      if (!(eventHandle = elemData.handle)) {\n        eventHandle = elemData.handle = function (e) {\n          // Discard the second event of a jQuery.event.trigger() and\n          // when an event is called after a page has unloaded\n          return typeof jQuery !== \"undefined\" && jQuery.event.triggered !== e.type ? jQuery.event.dispatch.apply(elem, arguments) : undefined;\n        };\n      }\n\n      // Handle multiple events separated by a space\n      types = (types || \"\").match(rnothtmlwhite) || [\"\"];\n      t = types.length;\n      while (t--) {\n        tmp = rtypenamespace.exec(types[t]) || [];\n        type = origType = tmp[1];\n        namespaces = (tmp[2] || \"\").split(\".\").sort();\n\n        // There *must* be a type, no attaching namespace-only handlers\n        if (!type) {\n          continue;\n        }\n\n        // If event changes its type, use the special event handlers for the changed type\n        special = jQuery.event.special[type] || {};\n\n        // If selector defined, determine special event api type, otherwise given type\n        type = (selector ? special.delegateType : special.bindType) || type;\n\n        // Update special based on newly reset type\n        special = jQuery.event.special[type] || {};\n\n        // handleObj is passed to all event handlers\n        handleObj = jQuery.extend({\n          type: type,\n          origType: origType,\n          data: data,\n          handler: handler,\n          guid: handler.guid,\n          selector: selector,\n          needsContext: selector && jQuery.expr.match.needsContext.test(selector),\n          namespace: namespaces.join(\".\")\n        }, handleObjIn);\n\n        // Init the event handler queue if we're the first\n        if (!(handlers = events[type])) {\n          handlers = events[type] = [];\n          handlers.delegateCount = 0;\n\n          // Only use addEventListener if the special events handler returns false\n          if (!special.setup || special.setup.call(elem, data, namespaces, eventHandle) === false) {\n            if (elem.addEventListener) {\n              elem.addEventListener(type, eventHandle);\n            }\n          }\n        }\n        if (special.add) {\n          special.add.call(elem, handleObj);\n          if (!handleObj.handler.guid) {\n            handleObj.handler.guid = handler.guid;\n          }\n        }\n\n        // Add to the element's handler list, delegates in front\n        if (selector) {\n          handlers.splice(handlers.delegateCount++, 0, handleObj);\n        } else {\n          handlers.push(handleObj);\n        }\n\n        // Keep track of which events have ever been used, for event optimization\n        jQuery.event.global[type] = true;\n      }\n    },\n    // Detach an event or set of events from an element\n    remove: function remove(elem, types, handler, selector, mappedTypes) {\n      var j,\n        origCount,\n        tmp,\n        events,\n        t,\n        handleObj,\n        special,\n        handlers,\n        type,\n        namespaces,\n        origType,\n        elemData = dataPriv.hasData(elem) && dataPriv.get(elem);\n      if (!elemData || !(events = elemData.events)) {\n        return;\n      }\n\n      // Once for each type.namespace in types; type may be omitted\n      types = (types || \"\").match(rnothtmlwhite) || [\"\"];\n      t = types.length;\n      while (t--) {\n        tmp = rtypenamespace.exec(types[t]) || [];\n        type = origType = tmp[1];\n        namespaces = (tmp[2] || \"\").split(\".\").sort();\n\n        // Unbind all events (on this namespace, if provided) for the element\n        if (!type) {\n          for (type in events) {\n            jQuery.event.remove(elem, type + types[t], handler, selector, true);\n          }\n          continue;\n        }\n        special = jQuery.event.special[type] || {};\n        type = (selector ? special.delegateType : special.bindType) || type;\n        handlers = events[type] || [];\n        tmp = tmp[2] && new RegExp(\"(^|\\\\.)\" + namespaces.join(\"\\\\.(?:.*\\\\.|)\") + \"(\\\\.|$)\");\n\n        // Remove matching events\n        origCount = j = handlers.length;\n        while (j--) {\n          handleObj = handlers[j];\n          if ((mappedTypes || origType === handleObj.origType) && (!handler || handler.guid === handleObj.guid) && (!tmp || tmp.test(handleObj.namespace)) && (!selector || selector === handleObj.selector || selector === \"**\" && handleObj.selector)) {\n            handlers.splice(j, 1);\n            if (handleObj.selector) {\n              handlers.delegateCount--;\n            }\n            if (special.remove) {\n              special.remove.call(elem, handleObj);\n            }\n          }\n        }\n\n        // Remove generic event handler if we removed something and no more handlers exist\n        // (avoids potential for endless recursion during removal of special event handlers)\n        if (origCount && !handlers.length) {\n          if (!special.teardown || special.teardown.call(elem, namespaces, elemData.handle) === false) {\n            jQuery.removeEvent(elem, type, elemData.handle);\n          }\n          delete events[type];\n        }\n      }\n\n      // Remove data and the expando if it's no longer used\n      if (jQuery.isEmptyObject(events)) {\n        dataPriv.remove(elem, \"handle events\");\n      }\n    },\n    dispatch: function dispatch(nativeEvent) {\n      var i,\n        j,\n        ret,\n        matched,\n        handleObj,\n        handlerQueue,\n        args = new Array(arguments.length),\n        // Make a writable jQuery.Event from the native event object\n        event = jQuery.event.fix(nativeEvent),\n        handlers = (dataPriv.get(this, \"events\") || Object.create(null))[event.type] || [],\n        special = jQuery.event.special[event.type] || {};\n\n      // Use the fix-ed jQuery.Event rather than the (read-only) native event\n      args[0] = event;\n      for (i = 1; i < arguments.length; i++) {\n        args[i] = arguments[i];\n      }\n      event.delegateTarget = this;\n\n      // Call the preDispatch hook for the mapped type, and let it bail if desired\n      if (special.preDispatch && special.preDispatch.call(this, event) === false) {\n        return;\n      }\n\n      // Determine handlers\n      handlerQueue = jQuery.event.handlers.call(this, event, handlers);\n\n      // Run delegates first; they may want to stop propagation beneath us\n      i = 0;\n      while ((matched = handlerQueue[i++]) && !event.isPropagationStopped()) {\n        event.currentTarget = matched.elem;\n        j = 0;\n        while ((handleObj = matched.handlers[j++]) && !event.isImmediatePropagationStopped()) {\n          // If the event is namespaced, then each handler is only invoked if it is\n          // specially universal or its namespaces are a superset of the event's.\n          if (!event.rnamespace || handleObj.namespace === false || event.rnamespace.test(handleObj.namespace)) {\n            event.handleObj = handleObj;\n            event.data = handleObj.data;\n            ret = ((jQuery.event.special[handleObj.origType] || {}).handle || handleObj.handler).apply(matched.elem, args);\n            if (ret !== undefined) {\n              if ((event.result = ret) === false) {\n                event.preventDefault();\n                event.stopPropagation();\n              }\n            }\n          }\n        }\n      }\n\n      // Call the postDispatch hook for the mapped type\n      if (special.postDispatch) {\n        special.postDispatch.call(this, event);\n      }\n      return event.result;\n    },\n    handlers: function handlers(event, _handlers) {\n      var i,\n        handleObj,\n        sel,\n        matchedHandlers,\n        matchedSelectors,\n        handlerQueue = [],\n        delegateCount = _handlers.delegateCount,\n        cur = event.target;\n\n      // Find delegate handlers\n      if (delegateCount &&\n      // Support: IE <=9\n      // Black-hole SVG <use> instance trees (trac-13180)\n      cur.nodeType &&\n      // Support: Firefox <=42\n      // Suppress spec-violating clicks indicating a non-primary pointer button (trac-3861)\n      // https://www.w3.org/TR/DOM-Level-3-Events/#event-type-click\n      // Support: IE 11 only\n      // ...but not arrow key \"clicks\" of radio inputs, which can have `button` -1 (gh-2343)\n      !(event.type === \"click\" && event.button >= 1)) {\n        for (; cur !== this; cur = cur.parentNode || this) {\n          // Don't check non-elements (trac-13208)\n          // Don't process clicks on disabled elements (trac-6911, trac-8165, trac-11382, trac-11764)\n          if (cur.nodeType === 1 && !(event.type === \"click\" && cur.disabled === true)) {\n            matchedHandlers = [];\n            matchedSelectors = {};\n            for (i = 0; i < delegateCount; i++) {\n              handleObj = _handlers[i];\n\n              // Don't conflict with Object.prototype properties (trac-13203)\n              sel = handleObj.selector + \" \";\n              if (matchedSelectors[sel] === undefined) {\n                matchedSelectors[sel] = handleObj.needsContext ? jQuery(sel, this).index(cur) > -1 : jQuery.find(sel, this, null, [cur]).length;\n              }\n              if (matchedSelectors[sel]) {\n                matchedHandlers.push(handleObj);\n              }\n            }\n            if (matchedHandlers.length) {\n              handlerQueue.push({\n                elem: cur,\n                handlers: matchedHandlers\n              });\n            }\n          }\n        }\n      }\n\n      // Add the remaining (directly-bound) handlers\n      cur = this;\n      if (delegateCount < _handlers.length) {\n        handlerQueue.push({\n          elem: cur,\n          handlers: _handlers.slice(delegateCount)\n        });\n      }\n      return handlerQueue;\n    },\n    addProp: function addProp(name, hook) {\n      Object.defineProperty(jQuery.Event.prototype, name, {\n        enumerable: true,\n        configurable: true,\n        get: isFunction(hook) ? function () {\n          if (this.originalEvent) {\n            return hook(this.originalEvent);\n          }\n        } : function () {\n          if (this.originalEvent) {\n            return this.originalEvent[name];\n          }\n        },\n        set: function set(value) {\n          Object.defineProperty(this, name, {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: value\n          });\n        }\n      });\n    },\n    fix: function fix(originalEvent) {\n      return originalEvent[jQuery.expando] ? originalEvent : new jQuery.Event(originalEvent);\n    },\n    special: {\n      load: {\n        // Prevent triggered image.load events from bubbling to window.load\n        noBubble: true\n      },\n      click: {\n        // Utilize native event to ensure correct state for checkable inputs\n        setup: function setup(data) {\n          // For mutual compressibility with _default, replace `this` access with a local var.\n          // `|| data` is dead code meant only to preserve the variable through minification.\n          var el = this || data;\n\n          // Claim the first handler\n          if (rcheckableType.test(el.type) && el.click && nodeName(el, \"input\")) {\n            // dataPriv.set( el, \"click\", ... )\n            leverageNative(el, \"click\", true);\n          }\n\n          // Return false to allow normal processing in the caller\n          return false;\n        },\n        trigger: function trigger(data) {\n          // For mutual compressibility with _default, replace `this` access with a local var.\n          // `|| data` is dead code meant only to preserve the variable through minification.\n          var el = this || data;\n\n          // Force setup before triggering a click\n          if (rcheckableType.test(el.type) && el.click && nodeName(el, \"input\")) {\n            leverageNative(el, \"click\");\n          }\n\n          // Return non-false to allow normal event-path propagation\n          return true;\n        },\n        // For cross-browser consistency, suppress native .click() on links\n        // Also prevent it if we're currently inside a leveraged native-event stack\n        _default: function _default(event) {\n          var target = event.target;\n          return rcheckableType.test(target.type) && target.click && nodeName(target, \"input\") && dataPriv.get(target, \"click\") || nodeName(target, \"a\");\n        }\n      },\n      beforeunload: {\n        postDispatch: function postDispatch(event) {\n          // Support: Firefox 20+\n          // Firefox doesn't alert if the returnValue field is not set.\n          if (event.result !== undefined && event.originalEvent) {\n            event.originalEvent.returnValue = event.result;\n          }\n        }\n      }\n    }\n  };\n\n  // Ensure the presence of an event listener that handles manually-triggered\n  // synthetic events by interrupting progress until reinvoked in response to\n  // *native* events that it fires directly, ensuring that state changes have\n  // already occurred before other listeners are invoked.\n  function leverageNative(el, type, isSetup) {\n    // Missing `isSetup` indicates a trigger call, which must force setup through jQuery.event.add\n    if (!isSetup) {\n      if (dataPriv.get(el, type) === undefined) {\n        jQuery.event.add(el, type, returnTrue);\n      }\n      return;\n    }\n\n    // Register the controller as a special universal handler for all event namespaces\n    dataPriv.set(el, type, false);\n    jQuery.event.add(el, type, {\n      namespace: false,\n      handler: function handler(event) {\n        var result,\n          saved = dataPriv.get(this, type);\n        if (event.isTrigger & 1 && this[type]) {\n          // Interrupt processing of the outer synthetic .trigger()ed event\n          if (!saved) {\n            // Store arguments for use when handling the inner native event\n            // There will always be at least one argument (an event object), so this array\n            // will not be confused with a leftover capture object.\n            saved = _slice.call(arguments);\n            dataPriv.set(this, type, saved);\n\n            // Trigger the native event and capture its result\n            this[type]();\n            result = dataPriv.get(this, type);\n            dataPriv.set(this, type, false);\n            if (saved !== result) {\n              // Cancel the outer synthetic event\n              event.stopImmediatePropagation();\n              event.preventDefault();\n              return result;\n            }\n\n            // If this is an inner synthetic event for an event with a bubbling surrogate\n            // (focus or blur), assume that the surrogate already propagated from triggering\n            // the native event and prevent that from happening again here.\n            // This technically gets the ordering wrong w.r.t. to `.trigger()` (in which the\n            // bubbling surrogate propagates *after* the non-bubbling base), but that seems\n            // less bad than duplication.\n          } else if ((jQuery.event.special[type] || {}).delegateType) {\n            event.stopPropagation();\n          }\n\n          // If this is a native event triggered above, everything is now in order\n          // Fire an inner synthetic event with the original arguments\n        } else if (saved) {\n          // ...and capture the result\n          dataPriv.set(this, type, jQuery.event.trigger(saved[0], saved.slice(1), this));\n\n          // Abort handling of the native event by all jQuery handlers while allowing\n          // native handlers on the same element to run. On target, this is achieved\n          // by stopping immediate propagation just on the jQuery event. However,\n          // the native event is re-wrapped by a jQuery one on each level of the\n          // propagation so the only way to stop it for jQuery is to stop it for\n          // everyone via native `stopPropagation()`. This is not a problem for\n          // focus/blur which don't bubble, but it does also stop click on checkboxes\n          // and radios. We accept this limitation.\n          event.stopPropagation();\n          event.isImmediatePropagationStopped = returnTrue;\n        }\n      }\n    });\n  }\n  jQuery.removeEvent = function (elem, type, handle) {\n    // This \"if\" is needed for plain objects\n    if (elem.removeEventListener) {\n      elem.removeEventListener(type, handle);\n    }\n  };\n  jQuery.Event = function (src, props) {\n    // Allow instantiation without the 'new' keyword\n    if (!(this instanceof jQuery.Event)) {\n      return new jQuery.Event(src, props);\n    }\n\n    // Event object\n    if (src && src.type) {\n      this.originalEvent = src;\n      this.type = src.type;\n\n      // Events bubbling up the document may have been marked as prevented\n      // by a handler lower down the tree; reflect the correct value.\n      this.isDefaultPrevented = src.defaultPrevented || src.defaultPrevented === undefined &&\n      // Support: Android <=2.3 only\n      src.returnValue === false ? returnTrue : returnFalse;\n\n      // Create target properties\n      // Support: Safari <=6 - 7 only\n      // Target should not be a text node (trac-504, trac-13143)\n      this.target = src.target && src.target.nodeType === 3 ? src.target.parentNode : src.target;\n      this.currentTarget = src.currentTarget;\n      this.relatedTarget = src.relatedTarget;\n\n      // Event type\n    } else {\n      this.type = src;\n    }\n\n    // Put explicitly provided properties onto the event object\n    if (props) {\n      jQuery.extend(this, props);\n    }\n\n    // Create a timestamp if incoming event doesn't have one\n    this.timeStamp = src && src.timeStamp || Date.now();\n\n    // Mark it as fixed\n    this[jQuery.expando] = true;\n  };\n\n  // jQuery.Event is based on DOM3 Events as specified by the ECMAScript Language Binding\n  // https://www.w3.org/TR/2003/WD-DOM-Level-3-Events-20030331/ecma-script-binding.html\n  jQuery.Event.prototype = {\n    constructor: jQuery.Event,\n    isDefaultPrevented: returnFalse,\n    isPropagationStopped: returnFalse,\n    isImmediatePropagationStopped: returnFalse,\n    isSimulated: false,\n    preventDefault: function preventDefault() {\n      var e = this.originalEvent;\n      this.isDefaultPrevented = returnTrue;\n      if (e && !this.isSimulated) {\n        e.preventDefault();\n      }\n    },\n    stopPropagation: function stopPropagation() {\n      var e = this.originalEvent;\n      this.isPropagationStopped = returnTrue;\n      if (e && !this.isSimulated) {\n        e.stopPropagation();\n      }\n    },\n    stopImmediatePropagation: function stopImmediatePropagation() {\n      var e = this.originalEvent;\n      this.isImmediatePropagationStopped = returnTrue;\n      if (e && !this.isSimulated) {\n        e.stopImmediatePropagation();\n      }\n      this.stopPropagation();\n    }\n  };\n\n  // Includes all common event props including KeyEvent and MouseEvent specific props\n  jQuery.each({\n    altKey: true,\n    bubbles: true,\n    cancelable: true,\n    changedTouches: true,\n    ctrlKey: true,\n    detail: true,\n    eventPhase: true,\n    metaKey: true,\n    pageX: true,\n    pageY: true,\n    shiftKey: true,\n    view: true,\n    \"char\": true,\n    code: true,\n    charCode: true,\n    key: true,\n    keyCode: true,\n    button: true,\n    buttons: true,\n    clientX: true,\n    clientY: true,\n    offsetX: true,\n    offsetY: true,\n    pointerId: true,\n    pointerType: true,\n    screenX: true,\n    screenY: true,\n    targetTouches: true,\n    toElement: true,\n    touches: true,\n    which: true\n  }, jQuery.event.addProp);\n  jQuery.each({\n    focus: \"focusin\",\n    blur: \"focusout\"\n  }, function (type, delegateType) {\n    function focusMappedHandler(nativeEvent) {\n      if (document.documentMode) {\n        // Support: IE 11+\n        // Attach a single focusin/focusout handler on the document while someone wants\n        // focus/blur. This is because the former are synchronous in IE while the latter\n        // are async. In other browsers, all those handlers are invoked synchronously.\n\n        // `handle` from private data would already wrap the event, but we need\n        // to change the `type` here.\n        var handle = dataPriv.get(this, \"handle\"),\n          event = jQuery.event.fix(nativeEvent);\n        event.type = nativeEvent.type === \"focusin\" ? \"focus\" : \"blur\";\n        event.isSimulated = true;\n\n        // First, handle focusin/focusout\n        handle(nativeEvent);\n\n        // ...then, handle focus/blur\n        //\n        // focus/blur don't bubble while focusin/focusout do; simulate the former by only\n        // invoking the handler at the lower level.\n        if (event.target === event.currentTarget) {\n          // The setup part calls `leverageNative`, which, in turn, calls\n          // `jQuery.event.add`, so event handle will already have been set\n          // by this point.\n          handle(event);\n        }\n      } else {\n        // For non-IE browsers, attach a single capturing handler on the document\n        // while someone wants focusin/focusout.\n        jQuery.event.simulate(delegateType, nativeEvent.target, jQuery.event.fix(nativeEvent));\n      }\n    }\n    jQuery.event.special[type] = {\n      // Utilize native event if possible so blur/focus sequence is correct\n      setup: function setup() {\n        var attaches;\n\n        // Claim the first handler\n        // dataPriv.set( this, \"focus\", ... )\n        // dataPriv.set( this, \"blur\", ... )\n        leverageNative(this, type, true);\n        if (document.documentMode) {\n          // Support: IE 9 - 11+\n          // We use the same native handler for focusin & focus (and focusout & blur)\n          // so we need to coordinate setup & teardown parts between those events.\n          // Use `delegateType` as the key as `type` is already used by `leverageNative`.\n          attaches = dataPriv.get(this, delegateType);\n          if (!attaches) {\n            this.addEventListener(delegateType, focusMappedHandler);\n          }\n          dataPriv.set(this, delegateType, (attaches || 0) + 1);\n        } else {\n          // Return false to allow normal processing in the caller\n          return false;\n        }\n      },\n      trigger: function trigger() {\n        // Force setup before trigger\n        leverageNative(this, type);\n\n        // Return non-false to allow normal event-path propagation\n        return true;\n      },\n      teardown: function teardown() {\n        var attaches;\n        if (document.documentMode) {\n          attaches = dataPriv.get(this, delegateType) - 1;\n          if (!attaches) {\n            this.removeEventListener(delegateType, focusMappedHandler);\n            dataPriv.remove(this, delegateType);\n          } else {\n            dataPriv.set(this, delegateType, attaches);\n          }\n        } else {\n          // Return false to indicate standard teardown should be applied\n          return false;\n        }\n      },\n      // Suppress native focus or blur if we're currently inside\n      // a leveraged native-event stack\n      _default: function _default(event) {\n        return dataPriv.get(event.target, type);\n      },\n      delegateType: delegateType\n    };\n\n    // Support: Firefox <=44\n    // Firefox doesn't have focus(in | out) events\n    // Related ticket - https://bugzilla.mozilla.org/show_bug.cgi?id=687787\n    //\n    // Support: Chrome <=48 - 49, Safari <=9.0 - 9.1\n    // focus(in | out) events fire after focus & blur events,\n    // which is spec violation - http://www.w3.org/TR/DOM-Level-3-Events/#events-focusevent-event-order\n    // Related ticket - https://bugs.chromium.org/p/chromium/issues/detail?id=449857\n    //\n    // Support: IE 9 - 11+\n    // To preserve relative focusin/focus & focusout/blur event order guaranteed on the 3.x branch,\n    // attach a single handler for both events in IE.\n    jQuery.event.special[delegateType] = {\n      setup: function setup() {\n        // Handle: regular nodes (via `this.ownerDocument`), window\n        // (via `this.document`) & document (via `this`).\n        var doc = this.ownerDocument || this.document || this,\n          dataHolder = document.documentMode ? this : doc,\n          attaches = dataPriv.get(dataHolder, delegateType);\n\n        // Support: IE 9 - 11+\n        // We use the same native handler for focusin & focus (and focusout & blur)\n        // so we need to coordinate setup & teardown parts between those events.\n        // Use `delegateType` as the key as `type` is already used by `leverageNative`.\n        if (!attaches) {\n          if (document.documentMode) {\n            this.addEventListener(delegateType, focusMappedHandler);\n          } else {\n            doc.addEventListener(type, focusMappedHandler, true);\n          }\n        }\n        dataPriv.set(dataHolder, delegateType, (attaches || 0) + 1);\n      },\n      teardown: function teardown() {\n        var doc = this.ownerDocument || this.document || this,\n          dataHolder = document.documentMode ? this : doc,\n          attaches = dataPriv.get(dataHolder, delegateType) - 1;\n        if (!attaches) {\n          if (document.documentMode) {\n            this.removeEventListener(delegateType, focusMappedHandler);\n          } else {\n            doc.removeEventListener(type, focusMappedHandler, true);\n          }\n          dataPriv.remove(dataHolder, delegateType);\n        } else {\n          dataPriv.set(dataHolder, delegateType, attaches);\n        }\n      }\n    };\n  });\n\n  // Create mouseenter/leave events using mouseover/out and event-time checks\n  // so that event delegation works in jQuery.\n  // Do the same for pointerenter/pointerleave and pointerover/pointerout\n  //\n  // Support: Safari 7 only\n  // Safari sends mouseenter too often; see:\n  // https://bugs.chromium.org/p/chromium/issues/detail?id=470258\n  // for the description of the bug (it existed in older Chrome versions as well).\n  jQuery.each({\n    mouseenter: \"mouseover\",\n    mouseleave: \"mouseout\",\n    pointerenter: \"pointerover\",\n    pointerleave: \"pointerout\"\n  }, function (orig, fix) {\n    jQuery.event.special[orig] = {\n      delegateType: fix,\n      bindType: fix,\n      handle: function handle(event) {\n        var ret,\n          target = this,\n          related = event.relatedTarget,\n          handleObj = event.handleObj;\n\n        // For mouseenter/leave call the handler if related is outside the target.\n        // NB: No relatedTarget if the mouse left/entered the browser window\n        if (!related || related !== target && !jQuery.contains(target, related)) {\n          event.type = handleObj.origType;\n          ret = handleObj.handler.apply(this, arguments);\n          event.type = fix;\n        }\n        return ret;\n      }\n    };\n  });\n  jQuery.fn.extend({\n    on: function on(types, selector, data, fn) {\n      return _on(this, types, selector, data, fn);\n    },\n    one: function one(types, selector, data, fn) {\n      return _on(this, types, selector, data, fn, 1);\n    },\n    off: function off(types, selector, fn) {\n      var handleObj, type;\n      if (types && types.preventDefault && types.handleObj) {\n        // ( event )  dispatched jQuery.Event\n        handleObj = types.handleObj;\n        jQuery(types.delegateTarget).off(handleObj.namespace ? handleObj.origType + \".\" + handleObj.namespace : handleObj.origType, handleObj.selector, handleObj.handler);\n        return this;\n      }\n      if (_typeof(types) === \"object\") {\n        // ( types-object [, selector] )\n        for (type in types) {\n          this.off(type, selector, types[type]);\n        }\n        return this;\n      }\n      if (selector === false || typeof selector === \"function\") {\n        // ( types [, fn] )\n        fn = selector;\n        selector = undefined;\n      }\n      if (fn === false) {\n        fn = returnFalse;\n      }\n      return this.each(function () {\n        jQuery.event.remove(this, types, fn, selector);\n      });\n    }\n  });\n  var\n    // Support: IE <=10 - 11, Edge 12 - 13 only\n    // In IE/Edge using regex groups here causes severe slowdowns.\n    // See https://connect.microsoft.com/IE/feedback/details/1736512/\n    rnoInnerhtml = /<script|<style|<link/i,\n    // checked=\"checked\" or checked\n    rchecked = /checked\\s*(?:[^=]|=\\s*.checked.)/i,\n    rcleanScript = /^\\s*<!\\[CDATA\\[|\\]\\]>\\s*$/g;\n\n  // Prefer a tbody over its parent table for containing new rows\n  function manipulationTarget(elem, content) {\n    if (nodeName(elem, \"table\") && nodeName(content.nodeType !== 11 ? content : content.firstChild, \"tr\")) {\n      return jQuery(elem).children(\"tbody\")[0] || elem;\n    }\n    return elem;\n  }\n\n  // Replace/restore the type attribute of script elements for safe DOM manipulation\n  function disableScript(elem) {\n    elem.type = (elem.getAttribute(\"type\") !== null) + \"/\" + elem.type;\n    return elem;\n  }\n  function restoreScript(elem) {\n    if ((elem.type || \"\").slice(0, 5) === \"true/\") {\n      elem.type = elem.type.slice(5);\n    } else {\n      elem.removeAttribute(\"type\");\n    }\n    return elem;\n  }\n  function cloneCopyEvent(src, dest) {\n    var i, l, type, pdataOld, udataOld, udataCur, events;\n    if (dest.nodeType !== 1) {\n      return;\n    }\n\n    // 1. Copy private data: events, handlers, etc.\n    if (dataPriv.hasData(src)) {\n      pdataOld = dataPriv.get(src);\n      events = pdataOld.events;\n      if (events) {\n        dataPriv.remove(dest, \"handle events\");\n        for (type in events) {\n          for (i = 0, l = events[type].length; i < l; i++) {\n            jQuery.event.add(dest, type, events[type][i]);\n          }\n        }\n      }\n    }\n\n    // 2. Copy user data\n    if (dataUser.hasData(src)) {\n      udataOld = dataUser.access(src);\n      udataCur = jQuery.extend({}, udataOld);\n      dataUser.set(dest, udataCur);\n    }\n  }\n\n  // Fix IE bugs, see support tests\n  function fixInput(src, dest) {\n    var nodeName = dest.nodeName.toLowerCase();\n\n    // Fails to persist the checked state of a cloned checkbox or radio button.\n    if (nodeName === \"input\" && rcheckableType.test(src.type)) {\n      dest.checked = src.checked;\n\n      // Fails to return the selected option to the default selected state when cloning options\n    } else if (nodeName === \"input\" || nodeName === \"textarea\") {\n      dest.defaultValue = src.defaultValue;\n    }\n  }\n  function domManip(collection, args, callback, ignored) {\n    // Flatten any nested arrays\n    args = flat(args);\n    var fragment,\n      first,\n      scripts,\n      hasScripts,\n      node,\n      doc,\n      i = 0,\n      l = collection.length,\n      iNoClone = l - 1,\n      value = args[0],\n      valueIsFunction = isFunction(value);\n\n    // We can't cloneNode fragments that contain checked, in WebKit\n    if (valueIsFunction || l > 1 && typeof value === \"string\" && !support.checkClone && rchecked.test(value)) {\n      return collection.each(function (index) {\n        var self = collection.eq(index);\n        if (valueIsFunction) {\n          args[0] = value.call(this, index, self.html());\n        }\n        domManip(self, args, callback, ignored);\n      });\n    }\n    if (l) {\n      fragment = buildFragment(args, collection[0].ownerDocument, false, collection, ignored);\n      first = fragment.firstChild;\n      if (fragment.childNodes.length === 1) {\n        fragment = first;\n      }\n\n      // Require either new content or an interest in ignored elements to invoke the callback\n      if (first || ignored) {\n        scripts = jQuery.map(getAll(fragment, \"script\"), disableScript);\n        hasScripts = scripts.length;\n\n        // Use the original fragment for the last item\n        // instead of the first because it can end up\n        // being emptied incorrectly in certain situations (trac-8070).\n        for (; i < l; i++) {\n          node = fragment;\n          if (i !== iNoClone) {\n            node = jQuery.clone(node, true, true);\n\n            // Keep references to cloned scripts for later restoration\n            if (hasScripts) {\n              // Support: Android <=4.0 only, PhantomJS 1 only\n              // push.apply(_, arraylike) throws on ancient WebKit\n              jQuery.merge(scripts, getAll(node, \"script\"));\n            }\n          }\n          callback.call(collection[i], node, i);\n        }\n        if (hasScripts) {\n          doc = scripts[scripts.length - 1].ownerDocument;\n\n          // Re-enable scripts\n          jQuery.map(scripts, restoreScript);\n\n          // Evaluate executable scripts on first document insertion\n          for (i = 0; i < hasScripts; i++) {\n            node = scripts[i];\n            if (rscriptType.test(node.type || \"\") && !dataPriv.access(node, \"globalEval\") && jQuery.contains(doc, node)) {\n              if (node.src && (node.type || \"\").toLowerCase() !== \"module\") {\n                // Optional AJAX dependency, but won't run scripts if not present\n                if (jQuery._evalUrl && !node.noModule) {\n                  jQuery._evalUrl(node.src, {\n                    nonce: node.nonce || node.getAttribute(\"nonce\")\n                  }, doc);\n                }\n              } else {\n                // Unwrap a CDATA section containing script contents. This shouldn't be\n                // needed as in XML documents they're already not visible when\n                // inspecting element contents and in HTML documents they have no\n                // meaning but we're preserving that logic for backwards compatibility.\n                // This will be removed completely in 4.0. See gh-4904.\n                DOMEval(node.textContent.replace(rcleanScript, \"\"), node, doc);\n              }\n            }\n          }\n        }\n      }\n    }\n    return collection;\n  }\n  function _remove(elem, selector, keepData) {\n    var node,\n      nodes = selector ? jQuery.filter(selector, elem) : elem,\n      i = 0;\n    for (; (node = nodes[i]) != null; i++) {\n      if (!keepData && node.nodeType === 1) {\n        jQuery.cleanData(getAll(node));\n      }\n      if (node.parentNode) {\n        if (keepData && isAttached(node)) {\n          setGlobalEval(getAll(node, \"script\"));\n        }\n        node.parentNode.removeChild(node);\n      }\n    }\n    return elem;\n  }\n  jQuery.extend({\n    htmlPrefilter: function htmlPrefilter(html) {\n      return html;\n    },\n    clone: function clone(elem, dataAndEvents, deepDataAndEvents) {\n      var i,\n        l,\n        srcElements,\n        destElements,\n        clone = elem.cloneNode(true),\n        inPage = isAttached(elem);\n\n      // Fix IE cloning issues\n      if (!support.noCloneChecked && (elem.nodeType === 1 || elem.nodeType === 11) && !jQuery.isXMLDoc(elem)) {\n        // We eschew jQuery#find here for performance reasons:\n        // https://jsperf.com/getall-vs-sizzle/2\n        destElements = getAll(clone);\n        srcElements = getAll(elem);\n        for (i = 0, l = srcElements.length; i < l; i++) {\n          fixInput(srcElements[i], destElements[i]);\n        }\n      }\n\n      // Copy the events from the original to the clone\n      if (dataAndEvents) {\n        if (deepDataAndEvents) {\n          srcElements = srcElements || getAll(elem);\n          destElements = destElements || getAll(clone);\n          for (i = 0, l = srcElements.length; i < l; i++) {\n            cloneCopyEvent(srcElements[i], destElements[i]);\n          }\n        } else {\n          cloneCopyEvent(elem, clone);\n        }\n      }\n\n      // Preserve script evaluation history\n      destElements = getAll(clone, \"script\");\n      if (destElements.length > 0) {\n        setGlobalEval(destElements, !inPage && getAll(elem, \"script\"));\n      }\n\n      // Return the cloned set\n      return clone;\n    },\n    cleanData: function cleanData(elems) {\n      var data,\n        elem,\n        type,\n        special = jQuery.event.special,\n        i = 0;\n      for (; (elem = elems[i]) !== undefined; i++) {\n        if (acceptData(elem)) {\n          if (data = elem[dataPriv.expando]) {\n            if (data.events) {\n              for (type in data.events) {\n                if (special[type]) {\n                  jQuery.event.remove(elem, type);\n\n                  // This is a shortcut to avoid jQuery.event.remove's overhead\n                } else {\n                  jQuery.removeEvent(elem, type, data.handle);\n                }\n              }\n            }\n\n            // Support: Chrome <=35 - 45+\n            // Assign undefined instead of using delete, see Data#remove\n            elem[dataPriv.expando] = undefined;\n          }\n          if (elem[dataUser.expando]) {\n            // Support: Chrome <=35 - 45+\n            // Assign undefined instead of using delete, see Data#remove\n            elem[dataUser.expando] = undefined;\n          }\n        }\n      }\n    }\n  });\n  jQuery.fn.extend({\n    detach: function detach(selector) {\n      return _remove(this, selector, true);\n    },\n    remove: function remove(selector) {\n      return _remove(this, selector);\n    },\n    text: function text(value) {\n      return access(this, function (value) {\n        return value === undefined ? jQuery.text(this) : this.empty().each(function () {\n          if (this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9) {\n            this.textContent = value;\n          }\n        });\n      }, null, value, arguments.length);\n    },\n    append: function append() {\n      return domManip(this, arguments, function (elem) {\n        if (this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9) {\n          var target = manipulationTarget(this, elem);\n          target.appendChild(elem);\n        }\n      });\n    },\n    prepend: function prepend() {\n      return domManip(this, arguments, function (elem) {\n        if (this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9) {\n          var target = manipulationTarget(this, elem);\n          target.insertBefore(elem, target.firstChild);\n        }\n      });\n    },\n    before: function before() {\n      return domManip(this, arguments, function (elem) {\n        if (this.parentNode) {\n          this.parentNode.insertBefore(elem, this);\n        }\n      });\n    },\n    after: function after() {\n      return domManip(this, arguments, function (elem) {\n        if (this.parentNode) {\n          this.parentNode.insertBefore(elem, this.nextSibling);\n        }\n      });\n    },\n    empty: function empty() {\n      var elem,\n        i = 0;\n      for (; (elem = this[i]) != null; i++) {\n        if (elem.nodeType === 1) {\n          // Prevent memory leaks\n          jQuery.cleanData(getAll(elem, false));\n\n          // Remove any remaining nodes\n          elem.textContent = \"\";\n        }\n      }\n      return this;\n    },\n    clone: function clone(dataAndEvents, deepDataAndEvents) {\n      dataAndEvents = dataAndEvents == null ? false : dataAndEvents;\n      deepDataAndEvents = deepDataAndEvents == null ? dataAndEvents : deepDataAndEvents;\n      return this.map(function () {\n        return jQuery.clone(this, dataAndEvents, deepDataAndEvents);\n      });\n    },\n    html: function html(value) {\n      return access(this, function (value) {\n        var elem = this[0] || {},\n          i = 0,\n          l = this.length;\n        if (value === undefined && elem.nodeType === 1) {\n          return elem.innerHTML;\n        }\n\n        // See if we can take a shortcut and just use innerHTML\n        if (typeof value === \"string\" && !rnoInnerhtml.test(value) && !wrapMap[(rtagName.exec(value) || [\"\", \"\"])[1].toLowerCase()]) {\n          value = jQuery.htmlPrefilter(value);\n          try {\n            for (; i < l; i++) {\n              elem = this[i] || {};\n\n              // Remove element nodes and prevent memory leaks\n              if (elem.nodeType === 1) {\n                jQuery.cleanData(getAll(elem, false));\n                elem.innerHTML = value;\n              }\n            }\n            elem = 0;\n\n            // If using innerHTML throws an exception, use the fallback method\n          } catch (e) {}\n        }\n        if (elem) {\n          this.empty().append(value);\n        }\n      }, null, value, arguments.length);\n    },\n    replaceWith: function replaceWith() {\n      var ignored = [];\n\n      // Make the changes, replacing each non-ignored context element with the new content\n      return domManip(this, arguments, function (elem) {\n        var parent = this.parentNode;\n        if (jQuery.inArray(this, ignored) < 0) {\n          jQuery.cleanData(getAll(this));\n          if (parent) {\n            parent.replaceChild(elem, this);\n          }\n        }\n\n        // Force callback invocation\n      }, ignored);\n    }\n  });\n  jQuery.each({\n    appendTo: \"append\",\n    prependTo: \"prepend\",\n    insertBefore: \"before\",\n    insertAfter: \"after\",\n    replaceAll: \"replaceWith\"\n  }, function (name, original) {\n    jQuery.fn[name] = function (selector) {\n      var elems,\n        ret = [],\n        insert = jQuery(selector),\n        last = insert.length - 1,\n        i = 0;\n      for (; i <= last; i++) {\n        elems = i === last ? this : this.clone(true);\n        jQuery(insert[i])[original](elems);\n\n        // Support: Android <=4.0 only, PhantomJS 1 only\n        // .get() because push.apply(_, arraylike) throws on ancient WebKit\n        push.apply(ret, elems.get());\n      }\n      return this.pushStack(ret);\n    };\n  });\n  var rnumnonpx = new RegExp(\"^(\" + pnum + \")(?!px)[a-z%]+$\", \"i\");\n  var rcustomProp = /^--/;\n  var getStyles = function getStyles(elem) {\n    // Support: IE <=11 only, Firefox <=30 (trac-15098, trac-14150)\n    // IE throws on elements created in popups\n    // FF meanwhile throws on frame elements through \"defaultView.getComputedStyle\"\n    var view = elem.ownerDocument.defaultView;\n    if (!view || !view.opener) {\n      view = window;\n    }\n    return view.getComputedStyle(elem);\n  };\n  var swap = function swap(elem, options, callback) {\n    var ret,\n      name,\n      old = {};\n\n    // Remember the old values, and insert the new ones\n    for (name in options) {\n      old[name] = elem.style[name];\n      elem.style[name] = options[name];\n    }\n    ret = callback.call(elem);\n\n    // Revert the old values\n    for (name in options) {\n      elem.style[name] = old[name];\n    }\n    return ret;\n  };\n  var rboxStyle = new RegExp(cssExpand.join(\"|\"), \"i\");\n  (function () {\n    // Executing both pixelPosition & boxSizingReliable tests require only one layout\n    // so they're executed at the same time to save the second computation.\n    function computeStyleTests() {\n      // This is a singleton, we need to execute it only once\n      if (!div) {\n        return;\n      }\n      container.style.cssText = \"position:absolute;left:-11111px;width:60px;\" + \"margin-top:1px;padding:0;border:0\";\n      div.style.cssText = \"position:relative;display:block;box-sizing:border-box;overflow:scroll;\" + \"margin:auto;border:1px;padding:1px;\" + \"width:60%;top:1%\";\n      documentElement.appendChild(container).appendChild(div);\n      var divStyle = window.getComputedStyle(div);\n      pixelPositionVal = divStyle.top !== \"1%\";\n\n      // Support: Android 4.0 - 4.3 only, Firefox <=3 - 44\n      reliableMarginLeftVal = roundPixelMeasures(divStyle.marginLeft) === 12;\n\n      // Support: Android 4.0 - 4.3 only, Safari <=9.1 - 10.1, iOS <=7.0 - 9.3\n      // Some styles come back with percentage values, even though they shouldn't\n      div.style.right = \"60%\";\n      pixelBoxStylesVal = roundPixelMeasures(divStyle.right) === 36;\n\n      // Support: IE 9 - 11 only\n      // Detect misreporting of content dimensions for box-sizing:border-box elements\n      boxSizingReliableVal = roundPixelMeasures(divStyle.width) === 36;\n\n      // Support: IE 9 only\n      // Detect overflow:scroll screwiness (gh-3699)\n      // Support: Chrome <=64\n      // Don't get tricked when zoom affects offsetWidth (gh-4029)\n      div.style.position = \"absolute\";\n      scrollboxSizeVal = roundPixelMeasures(div.offsetWidth / 3) === 12;\n      documentElement.removeChild(container);\n\n      // Nullify the div so it wouldn't be stored in the memory and\n      // it will also be a sign that checks already performed\n      div = null;\n    }\n    function roundPixelMeasures(measure) {\n      return Math.round(parseFloat(measure));\n    }\n    var pixelPositionVal,\n      boxSizingReliableVal,\n      scrollboxSizeVal,\n      pixelBoxStylesVal,\n      reliableTrDimensionsVal,\n      reliableMarginLeftVal,\n      container = document.createElement(\"div\"),\n      div = document.createElement(\"div\");\n\n    // Finish early in limited (non-browser) environments\n    if (!div.style) {\n      return;\n    }\n\n    // Support: IE <=9 - 11 only\n    // Style of cloned element affects source element cloned (trac-8908)\n    div.style.backgroundClip = \"content-box\";\n    div.cloneNode(true).style.backgroundClip = \"\";\n    support.clearCloneStyle = div.style.backgroundClip === \"content-box\";\n    jQuery.extend(support, {\n      boxSizingReliable: function boxSizingReliable() {\n        computeStyleTests();\n        return boxSizingReliableVal;\n      },\n      pixelBoxStyles: function pixelBoxStyles() {\n        computeStyleTests();\n        return pixelBoxStylesVal;\n      },\n      pixelPosition: function pixelPosition() {\n        computeStyleTests();\n        return pixelPositionVal;\n      },\n      reliableMarginLeft: function reliableMarginLeft() {\n        computeStyleTests();\n        return reliableMarginLeftVal;\n      },\n      scrollboxSize: function scrollboxSize() {\n        computeStyleTests();\n        return scrollboxSizeVal;\n      },\n      // Support: IE 9 - 11+, Edge 15 - 18+\n      // IE/Edge misreport `getComputedStyle` of table rows with width/height\n      // set in CSS while `offset*` properties report correct values.\n      // Behavior in IE 9 is more subtle than in newer versions & it passes\n      // some versions of this test; make sure not to make it pass there!\n      //\n      // Support: Firefox 70+\n      // Only Firefox includes border widths\n      // in computed dimensions. (gh-4529)\n      reliableTrDimensions: function reliableTrDimensions() {\n        var table, tr, trChild, trStyle;\n        if (reliableTrDimensionsVal == null) {\n          table = document.createElement(\"table\");\n          tr = document.createElement(\"tr\");\n          trChild = document.createElement(\"div\");\n          table.style.cssText = \"position:absolute;left:-11111px;border-collapse:separate\";\n          tr.style.cssText = \"box-sizing:content-box;border:1px solid\";\n\n          // Support: Chrome 86+\n          // Height set through cssText does not get applied.\n          // Computed height then comes back as 0.\n          tr.style.height = \"1px\";\n          trChild.style.height = \"9px\";\n\n          // Support: Android 8 Chrome 86+\n          // In our bodyBackground.html iframe,\n          // display for all div elements is set to \"inline\",\n          // which causes a problem only in Android 8 Chrome 86.\n          // Ensuring the div is `display: block`\n          // gets around this issue.\n          trChild.style.display = \"block\";\n          documentElement.appendChild(table).appendChild(tr).appendChild(trChild);\n          trStyle = window.getComputedStyle(tr);\n          reliableTrDimensionsVal = parseInt(trStyle.height, 10) + parseInt(trStyle.borderTopWidth, 10) + parseInt(trStyle.borderBottomWidth, 10) === tr.offsetHeight;\n          documentElement.removeChild(table);\n        }\n        return reliableTrDimensionsVal;\n      }\n    });\n  })();\n  function curCSS(elem, name, computed) {\n    var width,\n      minWidth,\n      maxWidth,\n      ret,\n      isCustomProp = rcustomProp.test(name),\n      // Support: Firefox 51+\n      // Retrieving style before computed somehow\n      // fixes an issue with getting wrong values\n      // on detached elements\n      style = elem.style;\n    computed = computed || getStyles(elem);\n\n    // getPropertyValue is needed for:\n    //   .css('filter') (IE 9 only, trac-12537)\n    //   .css('--customProperty) (gh-3144)\n    if (computed) {\n      // Support: IE <=9 - 11+\n      // IE only supports `\"float\"` in `getPropertyValue`; in computed styles\n      // it's only available as `\"cssFloat\"`. We no longer modify properties\n      // sent to `.css()` apart from camelCasing, so we need to check both.\n      // Normally, this would create difference in behavior: if\n      // `getPropertyValue` returns an empty string, the value returned\n      // by `.css()` would be `undefined`. This is usually the case for\n      // disconnected elements. However, in IE even disconnected elements\n      // with no styles return `\"none\"` for `getPropertyValue( \"float\" )`\n      ret = computed.getPropertyValue(name) || computed[name];\n      if (isCustomProp && ret) {\n        // Support: Firefox 105+, Chrome <=105+\n        // Spec requires trimming whitespace for custom properties (gh-4926).\n        // Firefox only trims leading whitespace. Chrome just collapses\n        // both leading & trailing whitespace to a single space.\n        //\n        // Fall back to `undefined` if empty string returned.\n        // This collapses a missing definition with property defined\n        // and set to an empty string but there's no standard API\n        // allowing us to differentiate them without a performance penalty\n        // and returning `undefined` aligns with older jQuery.\n        //\n        // rtrimCSS treats U+000D CARRIAGE RETURN and U+000C FORM FEED\n        // as whitespace while CSS does not, but this is not a problem\n        // because CSS preprocessing replaces them with U+000A LINE FEED\n        // (which *is* CSS whitespace)\n        // https://www.w3.org/TR/css-syntax-3/#input-preprocessing\n        ret = ret.replace(rtrimCSS, \"$1\") || undefined;\n      }\n      if (ret === \"\" && !isAttached(elem)) {\n        ret = jQuery.style(elem, name);\n      }\n\n      // A tribute to the \"awesome hack by Dean Edwards\"\n      // Android Browser returns percentage for some values,\n      // but width seems to be reliably pixels.\n      // This is against the CSSOM draft spec:\n      // https://drafts.csswg.org/cssom/#resolved-values\n      if (!support.pixelBoxStyles() && rnumnonpx.test(ret) && rboxStyle.test(name)) {\n        // Remember the original values\n        width = style.width;\n        minWidth = style.minWidth;\n        maxWidth = style.maxWidth;\n\n        // Put in the new values to get a computed value out\n        style.minWidth = style.maxWidth = style.width = ret;\n        ret = computed.width;\n\n        // Revert the changed values\n        style.width = width;\n        style.minWidth = minWidth;\n        style.maxWidth = maxWidth;\n      }\n    }\n    return ret !== undefined ?\n    // Support: IE <=9 - 11 only\n    // IE returns zIndex value as an integer.\n    ret + \"\" : ret;\n  }\n  function addGetHookIf(conditionFn, hookFn) {\n    // Define the hook, we'll check on the first run if it's really needed.\n    return {\n      get: function get() {\n        if (conditionFn()) {\n          // Hook not needed (or it's not possible to use it due\n          // to missing dependency), remove it.\n          delete this.get;\n          return;\n        }\n\n        // Hook needed; redefine it so that the support test is not executed again.\n        return (this.get = hookFn).apply(this, arguments);\n      }\n    };\n  }\n  var cssPrefixes = [\"Webkit\", \"Moz\", \"ms\"],\n    emptyStyle = document.createElement(\"div\").style,\n    vendorProps = {};\n\n  // Return a vendor-prefixed property or undefined\n  function vendorPropName(name) {\n    // Check for vendor prefixed names\n    var capName = name[0].toUpperCase() + name.slice(1),\n      i = cssPrefixes.length;\n    while (i--) {\n      name = cssPrefixes[i] + capName;\n      if (name in emptyStyle) {\n        return name;\n      }\n    }\n  }\n\n  // Return a potentially-mapped jQuery.cssProps or vendor prefixed property\n  function finalPropName(name) {\n    var _final = jQuery.cssProps[name] || vendorProps[name];\n    if (_final) {\n      return _final;\n    }\n    if (name in emptyStyle) {\n      return name;\n    }\n    return vendorProps[name] = vendorPropName(name) || name;\n  }\n  var\n    // Swappable if display is none or starts with table\n    // except \"table\", \"table-cell\", or \"table-caption\"\n    // See here for display values: https://developer.mozilla.org/en-US/docs/CSS/display\n    rdisplayswap = /^(none|table(?!-c[ea]).+)/,\n    cssShow = {\n      position: \"absolute\",\n      visibility: \"hidden\",\n      display: \"block\"\n    },\n    cssNormalTransform = {\n      letterSpacing: \"0\",\n      fontWeight: \"400\"\n    };\n  function setPositiveNumber(_elem, value, subtract) {\n    // Any relative (+/-) values have already been\n    // normalized at this point\n    var matches = rcssNum.exec(value);\n    return matches ?\n    // Guard against undefined \"subtract\", e.g., when used as in cssHooks\n    Math.max(0, matches[2] - (subtract || 0)) + (matches[3] || \"px\") : value;\n  }\n  function boxModelAdjustment(elem, dimension, box, isBorderBox, styles, computedVal) {\n    var i = dimension === \"width\" ? 1 : 0,\n      extra = 0,\n      delta = 0,\n      marginDelta = 0;\n\n    // Adjustment may not be necessary\n    if (box === (isBorderBox ? \"border\" : \"content\")) {\n      return 0;\n    }\n    for (; i < 4; i += 2) {\n      // Both box models exclude margin\n      // Count margin delta separately to only add it after scroll gutter adjustment.\n      // This is needed to make negative margins work with `outerHeight( true )` (gh-3982).\n      if (box === \"margin\") {\n        marginDelta += jQuery.css(elem, box + cssExpand[i], true, styles);\n      }\n\n      // If we get here with a content-box, we're seeking \"padding\" or \"border\" or \"margin\"\n      if (!isBorderBox) {\n        // Add padding\n        delta += jQuery.css(elem, \"padding\" + cssExpand[i], true, styles);\n\n        // For \"border\" or \"margin\", add border\n        if (box !== \"padding\") {\n          delta += jQuery.css(elem, \"border\" + cssExpand[i] + \"Width\", true, styles);\n\n          // But still keep track of it otherwise\n        } else {\n          extra += jQuery.css(elem, \"border\" + cssExpand[i] + \"Width\", true, styles);\n        }\n\n        // If we get here with a border-box (content + padding + border), we're seeking \"content\" or\n        // \"padding\" or \"margin\"\n      } else {\n        // For \"content\", subtract padding\n        if (box === \"content\") {\n          delta -= jQuery.css(elem, \"padding\" + cssExpand[i], true, styles);\n        }\n\n        // For \"content\" or \"padding\", subtract border\n        if (box !== \"margin\") {\n          delta -= jQuery.css(elem, \"border\" + cssExpand[i] + \"Width\", true, styles);\n        }\n      }\n    }\n\n    // Account for positive content-box scroll gutter when requested by providing computedVal\n    if (!isBorderBox && computedVal >= 0) {\n      // offsetWidth/offsetHeight is a rounded sum of content, padding, scroll gutter, and border\n      // Assuming integer scroll gutter, subtract the rest and round down\n      delta += Math.max(0, Math.ceil(elem[\"offset\" + dimension[0].toUpperCase() + dimension.slice(1)] - computedVal - delta - extra - 0.5\n\n      // If offsetWidth/offsetHeight is unknown, then we can't determine content-box scroll gutter\n      // Use an explicit zero to avoid NaN (gh-3964)\n      )) || 0;\n    }\n    return delta + marginDelta;\n  }\n  function getWidthOrHeight(elem, dimension, extra) {\n    // Start with computed style\n    var styles = getStyles(elem),\n      // To avoid forcing a reflow, only fetch boxSizing if we need it (gh-4322).\n      // Fake content-box until we know it's needed to know the true value.\n      boxSizingNeeded = !support.boxSizingReliable() || extra,\n      isBorderBox = boxSizingNeeded && jQuery.css(elem, \"boxSizing\", false, styles) === \"border-box\",\n      valueIsBorderBox = isBorderBox,\n      val = curCSS(elem, dimension, styles),\n      offsetProp = \"offset\" + dimension[0].toUpperCase() + dimension.slice(1);\n\n    // Support: Firefox <=54\n    // Return a confounding non-pixel value or feign ignorance, as appropriate.\n    if (rnumnonpx.test(val)) {\n      if (!extra) {\n        return val;\n      }\n      val = \"auto\";\n    }\n\n    // Support: IE 9 - 11 only\n    // Use offsetWidth/offsetHeight for when box sizing is unreliable.\n    // In those cases, the computed value can be trusted to be border-box.\n    if ((!support.boxSizingReliable() && isBorderBox ||\n    // Support: IE 10 - 11+, Edge 15 - 18+\n    // IE/Edge misreport `getComputedStyle` of table rows with width/height\n    // set in CSS while `offset*` properties report correct values.\n    // Interestingly, in some cases IE 9 doesn't suffer from this issue.\n    !support.reliableTrDimensions() && nodeName(elem, \"tr\") ||\n    // Fall back to offsetWidth/offsetHeight when value is \"auto\"\n    // This happens for inline elements with no explicit setting (gh-3571)\n    val === \"auto\" ||\n    // Support: Android <=4.1 - 4.3 only\n    // Also use offsetWidth/offsetHeight for misreported inline dimensions (gh-3602)\n    !parseFloat(val) && jQuery.css(elem, \"display\", false, styles) === \"inline\") &&\n    // Make sure the element is visible & connected\n    elem.getClientRects().length) {\n      isBorderBox = jQuery.css(elem, \"boxSizing\", false, styles) === \"border-box\";\n\n      // Where available, offsetWidth/offsetHeight approximate border box dimensions.\n      // Where not available (e.g., SVG), assume unreliable box-sizing and interpret the\n      // retrieved value as a content box dimension.\n      valueIsBorderBox = offsetProp in elem;\n      if (valueIsBorderBox) {\n        val = elem[offsetProp];\n      }\n    }\n\n    // Normalize \"\" and auto\n    val = parseFloat(val) || 0;\n\n    // Adjust for the element's box model\n    return val + boxModelAdjustment(elem, dimension, extra || (isBorderBox ? \"border\" : \"content\"), valueIsBorderBox, styles,\n    // Provide the current computed size to request scroll gutter calculation (gh-3589)\n    val) + \"px\";\n  }\n  jQuery.extend({\n    // Add in style property hooks for overriding the default\n    // behavior of getting and setting a style property\n    cssHooks: {\n      opacity: {\n        get: function get(elem, computed) {\n          if (computed) {\n            // We should always get a number back from opacity\n            var ret = curCSS(elem, \"opacity\");\n            return ret === \"\" ? \"1\" : ret;\n          }\n        }\n      }\n    },\n    // Don't automatically add \"px\" to these possibly-unitless properties\n    cssNumber: {\n      animationIterationCount: true,\n      aspectRatio: true,\n      borderImageSlice: true,\n      columnCount: true,\n      flexGrow: true,\n      flexShrink: true,\n      fontWeight: true,\n      gridArea: true,\n      gridColumn: true,\n      gridColumnEnd: true,\n      gridColumnStart: true,\n      gridRow: true,\n      gridRowEnd: true,\n      gridRowStart: true,\n      lineHeight: true,\n      opacity: true,\n      order: true,\n      orphans: true,\n      scale: true,\n      widows: true,\n      zIndex: true,\n      zoom: true,\n      // SVG-related\n      fillOpacity: true,\n      floodOpacity: true,\n      stopOpacity: true,\n      strokeMiterlimit: true,\n      strokeOpacity: true\n    },\n    // Add in properties whose names you wish to fix before\n    // setting or getting the value\n    cssProps: {},\n    // Get and set the style property on a DOM Node\n    style: function style(elem, name, value, extra) {\n      // Don't set styles on text and comment nodes\n      if (!elem || elem.nodeType === 3 || elem.nodeType === 8 || !elem.style) {\n        return;\n      }\n\n      // Make sure that we're working with the right name\n      var ret,\n        type,\n        hooks,\n        origName = camelCase(name),\n        isCustomProp = rcustomProp.test(name),\n        style = elem.style;\n\n      // Make sure that we're working with the right name. We don't\n      // want to query the value if it is a CSS custom property\n      // since they are user-defined.\n      if (!isCustomProp) {\n        name = finalPropName(origName);\n      }\n\n      // Gets hook for the prefixed version, then unprefixed version\n      hooks = jQuery.cssHooks[name] || jQuery.cssHooks[origName];\n\n      // Check if we're setting a value\n      if (value !== undefined) {\n        type = _typeof(value);\n\n        // Convert \"+=\" or \"-=\" to relative numbers (trac-7345)\n        if (type === \"string\" && (ret = rcssNum.exec(value)) && ret[1]) {\n          value = adjustCSS(elem, name, ret);\n\n          // Fixes bug trac-9237\n          type = \"number\";\n        }\n\n        // Make sure that null and NaN values aren't set (trac-7116)\n        if (value == null || value !== value) {\n          return;\n        }\n\n        // If a number was passed in, add the unit (except for certain CSS properties)\n        // The isCustomProp check can be removed in jQuery 4.0 when we only auto-append\n        // \"px\" to a few hardcoded values.\n        if (type === \"number\" && !isCustomProp) {\n          value += ret && ret[3] || (jQuery.cssNumber[origName] ? \"\" : \"px\");\n        }\n\n        // background-* props affect original clone's values\n        if (!support.clearCloneStyle && value === \"\" && name.indexOf(\"background\") === 0) {\n          style[name] = \"inherit\";\n        }\n\n        // If a hook was provided, use that value, otherwise just set the specified value\n        if (!hooks || !(\"set\" in hooks) || (value = hooks.set(elem, value, extra)) !== undefined) {\n          if (isCustomProp) {\n            style.setProperty(name, value);\n          } else {\n            style[name] = value;\n          }\n        }\n      } else {\n        // If a hook was provided get the non-computed value from there\n        if (hooks && \"get\" in hooks && (ret = hooks.get(elem, false, extra)) !== undefined) {\n          return ret;\n        }\n\n        // Otherwise just get the value from the style object\n        return style[name];\n      }\n    },\n    css: function css(elem, name, extra, styles) {\n      var val,\n        num,\n        hooks,\n        origName = camelCase(name),\n        isCustomProp = rcustomProp.test(name);\n\n      // Make sure that we're working with the right name. We don't\n      // want to modify the value if it is a CSS custom property\n      // since they are user-defined.\n      if (!isCustomProp) {\n        name = finalPropName(origName);\n      }\n\n      // Try prefixed name followed by the unprefixed name\n      hooks = jQuery.cssHooks[name] || jQuery.cssHooks[origName];\n\n      // If a hook was provided get the computed value from there\n      if (hooks && \"get\" in hooks) {\n        val = hooks.get(elem, true, extra);\n      }\n\n      // Otherwise, if a way to get the computed value exists, use that\n      if (val === undefined) {\n        val = curCSS(elem, name, styles);\n      }\n\n      // Convert \"normal\" to computed value\n      if (val === \"normal\" && name in cssNormalTransform) {\n        val = cssNormalTransform[name];\n      }\n\n      // Make numeric if forced or a qualifier was provided and val looks numeric\n      if (extra === \"\" || extra) {\n        num = parseFloat(val);\n        return extra === true || isFinite(num) ? num || 0 : val;\n      }\n      return val;\n    }\n  });\n  jQuery.each([\"height\", \"width\"], function (_i, dimension) {\n    jQuery.cssHooks[dimension] = {\n      get: function get(elem, computed, extra) {\n        if (computed) {\n          // Certain elements can have dimension info if we invisibly show them\n          // but it must have a current display style that would benefit\n          return rdisplayswap.test(jQuery.css(elem, \"display\")) && (\n          // Support: Safari 8+\n          // Table columns in Safari have non-zero offsetWidth & zero\n          // getBoundingClientRect().width unless display is changed.\n          // Support: IE <=11 only\n          // Running getBoundingClientRect on a disconnected node\n          // in IE throws an error.\n          !elem.getClientRects().length || !elem.getBoundingClientRect().width) ? swap(elem, cssShow, function () {\n            return getWidthOrHeight(elem, dimension, extra);\n          }) : getWidthOrHeight(elem, dimension, extra);\n        }\n      },\n      set: function set(elem, value, extra) {\n        var matches,\n          styles = getStyles(elem),\n          // Only read styles.position if the test has a chance to fail\n          // to avoid forcing a reflow.\n          scrollboxSizeBuggy = !support.scrollboxSize() && styles.position === \"absolute\",\n          // To avoid forcing a reflow, only fetch boxSizing if we need it (gh-3991)\n          boxSizingNeeded = scrollboxSizeBuggy || extra,\n          isBorderBox = boxSizingNeeded && jQuery.css(elem, \"boxSizing\", false, styles) === \"border-box\",\n          subtract = extra ? boxModelAdjustment(elem, dimension, extra, isBorderBox, styles) : 0;\n\n        // Account for unreliable border-box dimensions by comparing offset* to computed and\n        // faking a content-box to get border and padding (gh-3699)\n        if (isBorderBox && scrollboxSizeBuggy) {\n          subtract -= Math.ceil(elem[\"offset\" + dimension[0].toUpperCase() + dimension.slice(1)] - parseFloat(styles[dimension]) - boxModelAdjustment(elem, dimension, \"border\", false, styles) - 0.5);\n        }\n\n        // Convert to pixels if value adjustment is needed\n        if (subtract && (matches = rcssNum.exec(value)) && (matches[3] || \"px\") !== \"px\") {\n          elem.style[dimension] = value;\n          value = jQuery.css(elem, dimension);\n        }\n        return setPositiveNumber(elem, value, subtract);\n      }\n    };\n  });\n  jQuery.cssHooks.marginLeft = addGetHookIf(support.reliableMarginLeft, function (elem, computed) {\n    if (computed) {\n      return (parseFloat(curCSS(elem, \"marginLeft\")) || elem.getBoundingClientRect().left - swap(elem, {\n        marginLeft: 0\n      }, function () {\n        return elem.getBoundingClientRect().left;\n      })) + \"px\";\n    }\n  });\n\n  // These hooks are used by animate to expand properties\n  jQuery.each({\n    margin: \"\",\n    padding: \"\",\n    border: \"Width\"\n  }, function (prefix, suffix) {\n    jQuery.cssHooks[prefix + suffix] = {\n      expand: function expand(value) {\n        var i = 0,\n          expanded = {},\n          // Assumes a single number if not a string\n          parts = typeof value === \"string\" ? value.split(\" \") : [value];\n        for (; i < 4; i++) {\n          expanded[prefix + cssExpand[i] + suffix] = parts[i] || parts[i - 2] || parts[0];\n        }\n        return expanded;\n      }\n    };\n    if (prefix !== \"margin\") {\n      jQuery.cssHooks[prefix + suffix].set = setPositiveNumber;\n    }\n  });\n  jQuery.fn.extend({\n    css: function css(name, value) {\n      return access(this, function (elem, name, value) {\n        var styles,\n          len,\n          map = {},\n          i = 0;\n        if (Array.isArray(name)) {\n          styles = getStyles(elem);\n          len = name.length;\n          for (; i < len; i++) {\n            map[name[i]] = jQuery.css(elem, name[i], false, styles);\n          }\n          return map;\n        }\n        return value !== undefined ? jQuery.style(elem, name, value) : jQuery.css(elem, name);\n      }, name, value, arguments.length > 1);\n    }\n  });\n  function Tween(elem, options, prop, end, easing) {\n    return new Tween.prototype.init(elem, options, prop, end, easing);\n  }\n  jQuery.Tween = Tween;\n  Tween.prototype = {\n    constructor: Tween,\n    init: function init(elem, options, prop, end, easing, unit) {\n      this.elem = elem;\n      this.prop = prop;\n      this.easing = easing || jQuery.easing._default;\n      this.options = options;\n      this.start = this.now = this.cur();\n      this.end = end;\n      this.unit = unit || (jQuery.cssNumber[prop] ? \"\" : \"px\");\n    },\n    cur: function cur() {\n      var hooks = Tween.propHooks[this.prop];\n      return hooks && hooks.get ? hooks.get(this) : Tween.propHooks._default.get(this);\n    },\n    run: function run(percent) {\n      var eased,\n        hooks = Tween.propHooks[this.prop];\n      if (this.options.duration) {\n        this.pos = eased = jQuery.easing[this.easing](percent, this.options.duration * percent, 0, 1, this.options.duration);\n      } else {\n        this.pos = eased = percent;\n      }\n      this.now = (this.end - this.start) * eased + this.start;\n      if (this.options.step) {\n        this.options.step.call(this.elem, this.now, this);\n      }\n      if (hooks && hooks.set) {\n        hooks.set(this);\n      } else {\n        Tween.propHooks._default.set(this);\n      }\n      return this;\n    }\n  };\n  Tween.prototype.init.prototype = Tween.prototype;\n  Tween.propHooks = {\n    _default: {\n      get: function get(tween) {\n        var result;\n\n        // Use a property on the element directly when it is not a DOM element,\n        // or when there is no matching style property that exists.\n        if (tween.elem.nodeType !== 1 || tween.elem[tween.prop] != null && tween.elem.style[tween.prop] == null) {\n          return tween.elem[tween.prop];\n        }\n\n        // Passing an empty string as a 3rd parameter to .css will automatically\n        // attempt a parseFloat and fallback to a string if the parse fails.\n        // Simple values such as \"10px\" are parsed to Float;\n        // complex values such as \"rotate(1rad)\" are returned as-is.\n        result = jQuery.css(tween.elem, tween.prop, \"\");\n\n        // Empty strings, null, undefined and \"auto\" are converted to 0.\n        return !result || result === \"auto\" ? 0 : result;\n      },\n      set: function set(tween) {\n        // Use step hook for back compat.\n        // Use cssHook if its there.\n        // Use .style if available and use plain properties where available.\n        if (jQuery.fx.step[tween.prop]) {\n          jQuery.fx.step[tween.prop](tween);\n        } else if (tween.elem.nodeType === 1 && (jQuery.cssHooks[tween.prop] || tween.elem.style[finalPropName(tween.prop)] != null)) {\n          jQuery.style(tween.elem, tween.prop, tween.now + tween.unit);\n        } else {\n          tween.elem[tween.prop] = tween.now;\n        }\n      }\n    }\n  };\n\n  // Support: IE <=9 only\n  // Panic based approach to setting things on disconnected nodes\n  Tween.propHooks.scrollTop = Tween.propHooks.scrollLeft = {\n    set: function set(tween) {\n      if (tween.elem.nodeType && tween.elem.parentNode) {\n        tween.elem[tween.prop] = tween.now;\n      }\n    }\n  };\n  jQuery.easing = {\n    linear: function linear(p) {\n      return p;\n    },\n    swing: function swing(p) {\n      return 0.5 - Math.cos(p * Math.PI) / 2;\n    },\n    _default: \"swing\"\n  };\n  jQuery.fx = Tween.prototype.init;\n\n  // Back compat <1.8 extension point\n  jQuery.fx.step = {};\n  var fxNow,\n    inProgress,\n    rfxtypes = /^(?:toggle|show|hide)$/,\n    rrun = /queueHooks$/;\n  function schedule() {\n    if (inProgress) {\n      if (document.hidden === false && window.requestAnimationFrame) {\n        window.requestAnimationFrame(schedule);\n      } else {\n        window.setTimeout(schedule, jQuery.fx.interval);\n      }\n      jQuery.fx.tick();\n    }\n  }\n\n  // Animations created synchronously will run synchronously\n  function createFxNow() {\n    window.setTimeout(function () {\n      fxNow = undefined;\n    });\n    return fxNow = Date.now();\n  }\n\n  // Generate parameters to create a standard animation\n  function genFx(type, includeWidth) {\n    var which,\n      i = 0,\n      attrs = {\n        height: type\n      };\n\n    // If we include width, step value is 1 to do all cssExpand values,\n    // otherwise step value is 2 to skip over Left and Right\n    includeWidth = includeWidth ? 1 : 0;\n    for (; i < 4; i += 2 - includeWidth) {\n      which = cssExpand[i];\n      attrs[\"margin\" + which] = attrs[\"padding\" + which] = type;\n    }\n    if (includeWidth) {\n      attrs.opacity = attrs.width = type;\n    }\n    return attrs;\n  }\n  function createTween(value, prop, animation) {\n    var tween,\n      collection = (Animation.tweeners[prop] || []).concat(Animation.tweeners[\"*\"]),\n      index = 0,\n      length = collection.length;\n    for (; index < length; index++) {\n      if (tween = collection[index].call(animation, prop, value)) {\n        // We're done with this property\n        return tween;\n      }\n    }\n  }\n  function defaultPrefilter(elem, props, opts) {\n    var prop,\n      value,\n      toggle,\n      hooks,\n      oldfire,\n      propTween,\n      restoreDisplay,\n      display,\n      isBox = \"width\" in props || \"height\" in props,\n      anim = this,\n      orig = {},\n      style = elem.style,\n      hidden = elem.nodeType && isHiddenWithinTree(elem),\n      dataShow = dataPriv.get(elem, \"fxshow\");\n\n    // Queue-skipping animations hijack the fx hooks\n    if (!opts.queue) {\n      hooks = jQuery._queueHooks(elem, \"fx\");\n      if (hooks.unqueued == null) {\n        hooks.unqueued = 0;\n        oldfire = hooks.empty.fire;\n        hooks.empty.fire = function () {\n          if (!hooks.unqueued) {\n            oldfire();\n          }\n        };\n      }\n      hooks.unqueued++;\n      anim.always(function () {\n        // Ensure the complete handler is called before this completes\n        anim.always(function () {\n          hooks.unqueued--;\n          if (!jQuery.queue(elem, \"fx\").length) {\n            hooks.empty.fire();\n          }\n        });\n      });\n    }\n\n    // Detect show/hide animations\n    for (prop in props) {\n      value = props[prop];\n      if (rfxtypes.test(value)) {\n        delete props[prop];\n        toggle = toggle || value === \"toggle\";\n        if (value === (hidden ? \"hide\" : \"show\")) {\n          // Pretend to be hidden if this is a \"show\" and\n          // there is still data from a stopped show/hide\n          if (value === \"show\" && dataShow && dataShow[prop] !== undefined) {\n            hidden = true;\n\n            // Ignore all other no-op show/hide data\n          } else {\n            continue;\n          }\n        }\n        orig[prop] = dataShow && dataShow[prop] || jQuery.style(elem, prop);\n      }\n    }\n\n    // Bail out if this is a no-op like .hide().hide()\n    propTween = !jQuery.isEmptyObject(props);\n    if (!propTween && jQuery.isEmptyObject(orig)) {\n      return;\n    }\n\n    // Restrict \"overflow\" and \"display\" styles during box animations\n    if (isBox && elem.nodeType === 1) {\n      // Support: IE <=9 - 11, Edge 12 - 15\n      // Record all 3 overflow attributes because IE does not infer the shorthand\n      // from identically-valued overflowX and overflowY and Edge just mirrors\n      // the overflowX value there.\n      opts.overflow = [style.overflow, style.overflowX, style.overflowY];\n\n      // Identify a display type, preferring old show/hide data over the CSS cascade\n      restoreDisplay = dataShow && dataShow.display;\n      if (restoreDisplay == null) {\n        restoreDisplay = dataPriv.get(elem, \"display\");\n      }\n      display = jQuery.css(elem, \"display\");\n      if (display === \"none\") {\n        if (restoreDisplay) {\n          display = restoreDisplay;\n        } else {\n          // Get nonempty value(s) by temporarily forcing visibility\n          showHide([elem], true);\n          restoreDisplay = elem.style.display || restoreDisplay;\n          display = jQuery.css(elem, \"display\");\n          showHide([elem]);\n        }\n      }\n\n      // Animate inline elements as inline-block\n      if (display === \"inline\" || display === \"inline-block\" && restoreDisplay != null) {\n        if (jQuery.css(elem, \"float\") === \"none\") {\n          // Restore the original display value at the end of pure show/hide animations\n          if (!propTween) {\n            anim.done(function () {\n              style.display = restoreDisplay;\n            });\n            if (restoreDisplay == null) {\n              display = style.display;\n              restoreDisplay = display === \"none\" ? \"\" : display;\n            }\n          }\n          style.display = \"inline-block\";\n        }\n      }\n    }\n    if (opts.overflow) {\n      style.overflow = \"hidden\";\n      anim.always(function () {\n        style.overflow = opts.overflow[0];\n        style.overflowX = opts.overflow[1];\n        style.overflowY = opts.overflow[2];\n      });\n    }\n\n    // Implement show/hide animations\n    propTween = false;\n    for (prop in orig) {\n      // General show/hide setup for this element animation\n      if (!propTween) {\n        if (dataShow) {\n          if (\"hidden\" in dataShow) {\n            hidden = dataShow.hidden;\n          }\n        } else {\n          dataShow = dataPriv.access(elem, \"fxshow\", {\n            display: restoreDisplay\n          });\n        }\n\n        // Store hidden/visible for toggle so `.stop().toggle()` \"reverses\"\n        if (toggle) {\n          dataShow.hidden = !hidden;\n        }\n\n        // Show elements before animating them\n        if (hidden) {\n          showHide([elem], true);\n        }\n\n        /* eslint-disable no-loop-func */\n\n        anim.done(function () {\n          /* eslint-enable no-loop-func */\n\n          // The final step of a \"hide\" animation is actually hiding the element\n          if (!hidden) {\n            showHide([elem]);\n          }\n          dataPriv.remove(elem, \"fxshow\");\n          for (prop in orig) {\n            jQuery.style(elem, prop, orig[prop]);\n          }\n        });\n      }\n\n      // Per-property setup\n      propTween = createTween(hidden ? dataShow[prop] : 0, prop, anim);\n      if (!(prop in dataShow)) {\n        dataShow[prop] = propTween.start;\n        if (hidden) {\n          propTween.end = propTween.start;\n          propTween.start = 0;\n        }\n      }\n    }\n  }\n  function propFilter(props, specialEasing) {\n    var index, name, easing, value, hooks;\n\n    // camelCase, specialEasing and expand cssHook pass\n    for (index in props) {\n      name = camelCase(index);\n      easing = specialEasing[name];\n      value = props[index];\n      if (Array.isArray(value)) {\n        easing = value[1];\n        value = props[index] = value[0];\n      }\n      if (index !== name) {\n        props[name] = value;\n        delete props[index];\n      }\n      hooks = jQuery.cssHooks[name];\n      if (hooks && \"expand\" in hooks) {\n        value = hooks.expand(value);\n        delete props[name];\n\n        // Not quite $.extend, this won't overwrite existing keys.\n        // Reusing 'index' because we have the correct \"name\"\n        for (index in value) {\n          if (!(index in props)) {\n            props[index] = value[index];\n            specialEasing[index] = easing;\n          }\n        }\n      } else {\n        specialEasing[name] = easing;\n      }\n    }\n  }\n  function Animation(elem, properties, options) {\n    var result,\n      stopped,\n      index = 0,\n      length = Animation.prefilters.length,\n      deferred = jQuery.Deferred().always(function () {\n        // Don't match elem in the :animated selector\n        delete tick.elem;\n      }),\n      tick = function tick() {\n        if (stopped) {\n          return false;\n        }\n        var currentTime = fxNow || createFxNow(),\n          remaining = Math.max(0, animation.startTime + animation.duration - currentTime),\n          // Support: Android 2.3 only\n          // Archaic crash bug won't allow us to use `1 - ( 0.5 || 0 )` (trac-12497)\n          temp = remaining / animation.duration || 0,\n          percent = 1 - temp,\n          index = 0,\n          length = animation.tweens.length;\n        for (; index < length; index++) {\n          animation.tweens[index].run(percent);\n        }\n        deferred.notifyWith(elem, [animation, percent, remaining]);\n\n        // If there's more to do, yield\n        if (percent < 1 && length) {\n          return remaining;\n        }\n\n        // If this was an empty animation, synthesize a final progress notification\n        if (!length) {\n          deferred.notifyWith(elem, [animation, 1, 0]);\n        }\n\n        // Resolve the animation and report its conclusion\n        deferred.resolveWith(elem, [animation]);\n        return false;\n      },\n      animation = deferred.promise({\n        elem: elem,\n        props: jQuery.extend({}, properties),\n        opts: jQuery.extend(true, {\n          specialEasing: {},\n          easing: jQuery.easing._default\n        }, options),\n        originalProperties: properties,\n        originalOptions: options,\n        startTime: fxNow || createFxNow(),\n        duration: options.duration,\n        tweens: [],\n        createTween: function createTween(prop, end) {\n          var tween = jQuery.Tween(elem, animation.opts, prop, end, animation.opts.specialEasing[prop] || animation.opts.easing);\n          animation.tweens.push(tween);\n          return tween;\n        },\n        stop: function stop(gotoEnd) {\n          var index = 0,\n            // If we are going to the end, we want to run all the tweens\n            // otherwise we skip this part\n            length = gotoEnd ? animation.tweens.length : 0;\n          if (stopped) {\n            return this;\n          }\n          stopped = true;\n          for (; index < length; index++) {\n            animation.tweens[index].run(1);\n          }\n\n          // Resolve when we played the last frame; otherwise, reject\n          if (gotoEnd) {\n            deferred.notifyWith(elem, [animation, 1, 0]);\n            deferred.resolveWith(elem, [animation, gotoEnd]);\n          } else {\n            deferred.rejectWith(elem, [animation, gotoEnd]);\n          }\n          return this;\n        }\n      }),\n      props = animation.props;\n    propFilter(props, animation.opts.specialEasing);\n    for (; index < length; index++) {\n      result = Animation.prefilters[index].call(animation, elem, props, animation.opts);\n      if (result) {\n        if (isFunction(result.stop)) {\n          jQuery._queueHooks(animation.elem, animation.opts.queue).stop = result.stop.bind(result);\n        }\n        return result;\n      }\n    }\n    jQuery.map(props, createTween, animation);\n    if (isFunction(animation.opts.start)) {\n      animation.opts.start.call(elem, animation);\n    }\n\n    // Attach callbacks from options\n    animation.progress(animation.opts.progress).done(animation.opts.done, animation.opts.complete).fail(animation.opts.fail).always(animation.opts.always);\n    jQuery.fx.timer(jQuery.extend(tick, {\n      elem: elem,\n      anim: animation,\n      queue: animation.opts.queue\n    }));\n    return animation;\n  }\n  jQuery.Animation = jQuery.extend(Animation, {\n    tweeners: {\n      \"*\": [function (prop, value) {\n        var tween = this.createTween(prop, value);\n        adjustCSS(tween.elem, prop, rcssNum.exec(value), tween);\n        return tween;\n      }]\n    },\n    tweener: function tweener(props, callback) {\n      if (isFunction(props)) {\n        callback = props;\n        props = [\"*\"];\n      } else {\n        props = props.match(rnothtmlwhite);\n      }\n      var prop,\n        index = 0,\n        length = props.length;\n      for (; index < length; index++) {\n        prop = props[index];\n        Animation.tweeners[prop] = Animation.tweeners[prop] || [];\n        Animation.tweeners[prop].unshift(callback);\n      }\n    },\n    prefilters: [defaultPrefilter],\n    prefilter: function prefilter(callback, prepend) {\n      if (prepend) {\n        Animation.prefilters.unshift(callback);\n      } else {\n        Animation.prefilters.push(callback);\n      }\n    }\n  });\n  jQuery.speed = function (speed, easing, fn) {\n    var opt = speed && _typeof(speed) === \"object\" ? jQuery.extend({}, speed) : {\n      complete: fn || !fn && easing || isFunction(speed) && speed,\n      duration: speed,\n      easing: fn && easing || easing && !isFunction(easing) && easing\n    };\n\n    // Go to the end state if fx are off\n    if (jQuery.fx.off) {\n      opt.duration = 0;\n    } else {\n      if (typeof opt.duration !== \"number\") {\n        if (opt.duration in jQuery.fx.speeds) {\n          opt.duration = jQuery.fx.speeds[opt.duration];\n        } else {\n          opt.duration = jQuery.fx.speeds._default;\n        }\n      }\n    }\n\n    // Normalize opt.queue - true/undefined/null -> \"fx\"\n    if (opt.queue == null || opt.queue === true) {\n      opt.queue = \"fx\";\n    }\n\n    // Queueing\n    opt.old = opt.complete;\n    opt.complete = function () {\n      if (isFunction(opt.old)) {\n        opt.old.call(this);\n      }\n      if (opt.queue) {\n        jQuery.dequeue(this, opt.queue);\n      }\n    };\n    return opt;\n  };\n  jQuery.fn.extend({\n    fadeTo: function fadeTo(speed, to, easing, callback) {\n      // Show any hidden elements after setting opacity to 0\n      return this.filter(isHiddenWithinTree).css(\"opacity\", 0).show()\n\n      // Animate to the value specified\n      .end().animate({\n        opacity: to\n      }, speed, easing, callback);\n    },\n    animate: function animate(prop, speed, easing, callback) {\n      var empty = jQuery.isEmptyObject(prop),\n        optall = jQuery.speed(speed, easing, callback),\n        doAnimation = function doAnimation() {\n          // Operate on a copy of prop so per-property easing won't be lost\n          var anim = Animation(this, jQuery.extend({}, prop), optall);\n\n          // Empty animations, or finishing resolves immediately\n          if (empty || dataPriv.get(this, \"finish\")) {\n            anim.stop(true);\n          }\n        };\n      doAnimation.finish = doAnimation;\n      return empty || optall.queue === false ? this.each(doAnimation) : this.queue(optall.queue, doAnimation);\n    },\n    stop: function stop(type, clearQueue, gotoEnd) {\n      var stopQueue = function stopQueue(hooks) {\n        var stop = hooks.stop;\n        delete hooks.stop;\n        stop(gotoEnd);\n      };\n      if (typeof type !== \"string\") {\n        gotoEnd = clearQueue;\n        clearQueue = type;\n        type = undefined;\n      }\n      if (clearQueue) {\n        this.queue(type || \"fx\", []);\n      }\n      return this.each(function () {\n        var dequeue = true,\n          index = type != null && type + \"queueHooks\",\n          timers = jQuery.timers,\n          data = dataPriv.get(this);\n        if (index) {\n          if (data[index] && data[index].stop) {\n            stopQueue(data[index]);\n          }\n        } else {\n          for (index in data) {\n            if (data[index] && data[index].stop && rrun.test(index)) {\n              stopQueue(data[index]);\n            }\n          }\n        }\n        for (index = timers.length; index--;) {\n          if (timers[index].elem === this && (type == null || timers[index].queue === type)) {\n            timers[index].anim.stop(gotoEnd);\n            dequeue = false;\n            timers.splice(index, 1);\n          }\n        }\n\n        // Start the next in the queue if the last step wasn't forced.\n        // Timers currently will call their complete callbacks, which\n        // will dequeue but only if they were gotoEnd.\n        if (dequeue || !gotoEnd) {\n          jQuery.dequeue(this, type);\n        }\n      });\n    },\n    finish: function finish(type) {\n      if (type !== false) {\n        type = type || \"fx\";\n      }\n      return this.each(function () {\n        var index,\n          data = dataPriv.get(this),\n          queue = data[type + \"queue\"],\n          hooks = data[type + \"queueHooks\"],\n          timers = jQuery.timers,\n          length = queue ? queue.length : 0;\n\n        // Enable finishing flag on private data\n        data.finish = true;\n\n        // Empty the queue first\n        jQuery.queue(this, type, []);\n        if (hooks && hooks.stop) {\n          hooks.stop.call(this, true);\n        }\n\n        // Look for any active animations, and finish them\n        for (index = timers.length; index--;) {\n          if (timers[index].elem === this && timers[index].queue === type) {\n            timers[index].anim.stop(true);\n            timers.splice(index, 1);\n          }\n        }\n\n        // Look for any animations in the old queue and finish them\n        for (index = 0; index < length; index++) {\n          if (queue[index] && queue[index].finish) {\n            queue[index].finish.call(this);\n          }\n        }\n\n        // Turn off finishing flag\n        delete data.finish;\n      });\n    }\n  });\n  jQuery.each([\"toggle\", \"show\", \"hide\"], function (_i, name) {\n    var cssFn = jQuery.fn[name];\n    jQuery.fn[name] = function (speed, easing, callback) {\n      return speed == null || typeof speed === \"boolean\" ? cssFn.apply(this, arguments) : this.animate(genFx(name, true), speed, easing, callback);\n    };\n  });\n\n  // Generate shortcuts for custom animations\n  jQuery.each({\n    slideDown: genFx(\"show\"),\n    slideUp: genFx(\"hide\"),\n    slideToggle: genFx(\"toggle\"),\n    fadeIn: {\n      opacity: \"show\"\n    },\n    fadeOut: {\n      opacity: \"hide\"\n    },\n    fadeToggle: {\n      opacity: \"toggle\"\n    }\n  }, function (name, props) {\n    jQuery.fn[name] = function (speed, easing, callback) {\n      return this.animate(props, speed, easing, callback);\n    };\n  });\n  jQuery.timers = [];\n  jQuery.fx.tick = function () {\n    var timer,\n      i = 0,\n      timers = jQuery.timers;\n    fxNow = Date.now();\n    for (; i < timers.length; i++) {\n      timer = timers[i];\n\n      // Run the timer and safely remove it when done (allowing for external removal)\n      if (!timer() && timers[i] === timer) {\n        timers.splice(i--, 1);\n      }\n    }\n    if (!timers.length) {\n      jQuery.fx.stop();\n    }\n    fxNow = undefined;\n  };\n  jQuery.fx.timer = function (timer) {\n    jQuery.timers.push(timer);\n    jQuery.fx.start();\n  };\n  jQuery.fx.interval = 13;\n  jQuery.fx.start = function () {\n    if (inProgress) {\n      return;\n    }\n    inProgress = true;\n    schedule();\n  };\n  jQuery.fx.stop = function () {\n    inProgress = null;\n  };\n  jQuery.fx.speeds = {\n    slow: 600,\n    fast: 200,\n    // Default speed\n    _default: 400\n  };\n\n  // Based off of the plugin by Clint Helfers, with permission.\n  jQuery.fn.delay = function (time, type) {\n    time = jQuery.fx ? jQuery.fx.speeds[time] || time : time;\n    type = type || \"fx\";\n    return this.queue(type, function (next, hooks) {\n      var timeout = window.setTimeout(next, time);\n      hooks.stop = function () {\n        window.clearTimeout(timeout);\n      };\n    });\n  };\n  (function () {\n    var input = document.createElement(\"input\"),\n      select = document.createElement(\"select\"),\n      opt = select.appendChild(document.createElement(\"option\"));\n    input.type = \"checkbox\";\n\n    // Support: Android <=4.3 only\n    // Default value for a checkbox should be \"on\"\n    support.checkOn = input.value !== \"\";\n\n    // Support: IE <=11 only\n    // Must access selectedIndex to make default options select\n    support.optSelected = opt.selected;\n\n    // Support: IE <=11 only\n    // An input loses its value after becoming a radio\n    input = document.createElement(\"input\");\n    input.value = \"t\";\n    input.type = \"radio\";\n    support.radioValue = input.value === \"t\";\n  })();\n  var boolHook,\n    attrHandle = jQuery.expr.attrHandle;\n  jQuery.fn.extend({\n    attr: function attr(name, value) {\n      return access(this, jQuery.attr, name, value, arguments.length > 1);\n    },\n    removeAttr: function removeAttr(name) {\n      return this.each(function () {\n        jQuery.removeAttr(this, name);\n      });\n    }\n  });\n  jQuery.extend({\n    attr: function attr(elem, name, value) {\n      var ret,\n        hooks,\n        nType = elem.nodeType;\n\n      // Don't get/set attributes on text, comment and attribute nodes\n      if (nType === 3 || nType === 8 || nType === 2) {\n        return;\n      }\n\n      // Fallback to prop when attributes are not supported\n      if (typeof elem.getAttribute === \"undefined\") {\n        return jQuery.prop(elem, name, value);\n      }\n\n      // Attribute hooks are determined by the lowercase version\n      // Grab necessary hook if one is defined\n      if (nType !== 1 || !jQuery.isXMLDoc(elem)) {\n        hooks = jQuery.attrHooks[name.toLowerCase()] || (jQuery.expr.match.bool.test(name) ? boolHook : undefined);\n      }\n      if (value !== undefined) {\n        if (value === null) {\n          jQuery.removeAttr(elem, name);\n          return;\n        }\n        if (hooks && \"set\" in hooks && (ret = hooks.set(elem, value, name)) !== undefined) {\n          return ret;\n        }\n        elem.setAttribute(name, value + \"\");\n        return value;\n      }\n      if (hooks && \"get\" in hooks && (ret = hooks.get(elem, name)) !== null) {\n        return ret;\n      }\n      ret = jQuery.find.attr(elem, name);\n\n      // Non-existent attributes return null, we normalize to undefined\n      return ret == null ? undefined : ret;\n    },\n    attrHooks: {\n      type: {\n        set: function set(elem, value) {\n          if (!support.radioValue && value === \"radio\" && nodeName(elem, \"input\")) {\n            var val = elem.value;\n            elem.setAttribute(\"type\", value);\n            if (val) {\n              elem.value = val;\n            }\n            return value;\n          }\n        }\n      }\n    },\n    removeAttr: function removeAttr(elem, value) {\n      var name,\n        i = 0,\n        // Attribute names can contain non-HTML whitespace characters\n        // https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n        attrNames = value && value.match(rnothtmlwhite);\n      if (attrNames && elem.nodeType === 1) {\n        while (name = attrNames[i++]) {\n          elem.removeAttribute(name);\n        }\n      }\n    }\n  });\n\n  // Hooks for boolean attributes\n  boolHook = {\n    set: function set(elem, value, name) {\n      if (value === false) {\n        // Remove boolean attributes when set to false\n        jQuery.removeAttr(elem, name);\n      } else {\n        elem.setAttribute(name, name);\n      }\n      return name;\n    }\n  };\n  jQuery.each(jQuery.expr.match.bool.source.match(/\\w+/g), function (_i, name) {\n    var getter = attrHandle[name] || jQuery.find.attr;\n    attrHandle[name] = function (elem, name, isXML) {\n      var ret,\n        handle,\n        lowercaseName = name.toLowerCase();\n      if (!isXML) {\n        // Avoid an infinite loop by temporarily removing this function from the getter\n        handle = attrHandle[lowercaseName];\n        attrHandle[lowercaseName] = ret;\n        ret = getter(elem, name, isXML) != null ? lowercaseName : null;\n        attrHandle[lowercaseName] = handle;\n      }\n      return ret;\n    };\n  });\n  var rfocusable = /^(?:input|select|textarea|button)$/i,\n    rclickable = /^(?:a|area)$/i;\n  jQuery.fn.extend({\n    prop: function prop(name, value) {\n      return access(this, jQuery.prop, name, value, arguments.length > 1);\n    },\n    removeProp: function removeProp(name) {\n      return this.each(function () {\n        delete this[jQuery.propFix[name] || name];\n      });\n    }\n  });\n  jQuery.extend({\n    prop: function prop(elem, name, value) {\n      var ret,\n        hooks,\n        nType = elem.nodeType;\n\n      // Don't get/set properties on text, comment and attribute nodes\n      if (nType === 3 || nType === 8 || nType === 2) {\n        return;\n      }\n      if (nType !== 1 || !jQuery.isXMLDoc(elem)) {\n        // Fix name and attach hooks\n        name = jQuery.propFix[name] || name;\n        hooks = jQuery.propHooks[name];\n      }\n      if (value !== undefined) {\n        if (hooks && \"set\" in hooks && (ret = hooks.set(elem, value, name)) !== undefined) {\n          return ret;\n        }\n        return elem[name] = value;\n      }\n      if (hooks && \"get\" in hooks && (ret = hooks.get(elem, name)) !== null) {\n        return ret;\n      }\n      return elem[name];\n    },\n    propHooks: {\n      tabIndex: {\n        get: function get(elem) {\n          // Support: IE <=9 - 11 only\n          // elem.tabIndex doesn't always return the\n          // correct value when it hasn't been explicitly set\n          // Use proper attribute retrieval (trac-12072)\n          var tabindex = jQuery.find.attr(elem, \"tabindex\");\n          if (tabindex) {\n            return parseInt(tabindex, 10);\n          }\n          if (rfocusable.test(elem.nodeName) || rclickable.test(elem.nodeName) && elem.href) {\n            return 0;\n          }\n          return -1;\n        }\n      }\n    },\n    propFix: {\n      \"for\": \"htmlFor\",\n      \"class\": \"className\"\n    }\n  });\n\n  // Support: IE <=11 only\n  // Accessing the selectedIndex property\n  // forces the browser to respect setting selected\n  // on the option\n  // The getter ensures a default option is selected\n  // when in an optgroup\n  // eslint rule \"no-unused-expressions\" is disabled for this code\n  // since it considers such accessions noop\n  if (!support.optSelected) {\n    jQuery.propHooks.selected = {\n      get: function get(elem) {\n        /* eslint no-unused-expressions: \"off\" */\n\n        var parent = elem.parentNode;\n        if (parent && parent.parentNode) {\n          parent.parentNode.selectedIndex;\n        }\n        return null;\n      },\n      set: function set(elem) {\n        /* eslint no-unused-expressions: \"off\" */\n\n        var parent = elem.parentNode;\n        if (parent) {\n          parent.selectedIndex;\n          if (parent.parentNode) {\n            parent.parentNode.selectedIndex;\n          }\n        }\n      }\n    };\n  }\n  jQuery.each([\"tabIndex\", \"readOnly\", \"maxLength\", \"cellSpacing\", \"cellPadding\", \"rowSpan\", \"colSpan\", \"useMap\", \"frameBorder\", \"contentEditable\"], function () {\n    jQuery.propFix[this.toLowerCase()] = this;\n  });\n\n  // Strip and collapse whitespace according to HTML spec\n  // https://infra.spec.whatwg.org/#strip-and-collapse-ascii-whitespace\n  function stripAndCollapse(value) {\n    var tokens = value.match(rnothtmlwhite) || [];\n    return tokens.join(\" \");\n  }\n  function getClass(elem) {\n    return elem.getAttribute && elem.getAttribute(\"class\") || \"\";\n  }\n  function classesToArray(value) {\n    if (Array.isArray(value)) {\n      return value;\n    }\n    if (typeof value === \"string\") {\n      return value.match(rnothtmlwhite) || [];\n    }\n    return [];\n  }\n  jQuery.fn.extend({\n    addClass: function addClass(value) {\n      var classNames, cur, curValue, className, i, finalValue;\n      if (isFunction(value)) {\n        return this.each(function (j) {\n          jQuery(this).addClass(value.call(this, j, getClass(this)));\n        });\n      }\n      classNames = classesToArray(value);\n      if (classNames.length) {\n        return this.each(function () {\n          curValue = getClass(this);\n          cur = this.nodeType === 1 && \" \" + stripAndCollapse(curValue) + \" \";\n          if (cur) {\n            for (i = 0; i < classNames.length; i++) {\n              className = classNames[i];\n              if (cur.indexOf(\" \" + className + \" \") < 0) {\n                cur += className + \" \";\n              }\n            }\n\n            // Only assign if different to avoid unneeded rendering.\n            finalValue = stripAndCollapse(cur);\n            if (curValue !== finalValue) {\n              this.setAttribute(\"class\", finalValue);\n            }\n          }\n        });\n      }\n      return this;\n    },\n    removeClass: function removeClass(value) {\n      var classNames, cur, curValue, className, i, finalValue;\n      if (isFunction(value)) {\n        return this.each(function (j) {\n          jQuery(this).removeClass(value.call(this, j, getClass(this)));\n        });\n      }\n      if (!arguments.length) {\n        return this.attr(\"class\", \"\");\n      }\n      classNames = classesToArray(value);\n      if (classNames.length) {\n        return this.each(function () {\n          curValue = getClass(this);\n\n          // This expression is here for better compressibility (see addClass)\n          cur = this.nodeType === 1 && \" \" + stripAndCollapse(curValue) + \" \";\n          if (cur) {\n            for (i = 0; i < classNames.length; i++) {\n              className = classNames[i];\n\n              // Remove *all* instances\n              while (cur.indexOf(\" \" + className + \" \") > -1) {\n                cur = cur.replace(\" \" + className + \" \", \" \");\n              }\n            }\n\n            // Only assign if different to avoid unneeded rendering.\n            finalValue = stripAndCollapse(cur);\n            if (curValue !== finalValue) {\n              this.setAttribute(\"class\", finalValue);\n            }\n          }\n        });\n      }\n      return this;\n    },\n    toggleClass: function toggleClass(value, stateVal) {\n      var classNames,\n        className,\n        i,\n        self,\n        type = _typeof(value),\n        isValidValue = type === \"string\" || Array.isArray(value);\n      if (isFunction(value)) {\n        return this.each(function (i) {\n          jQuery(this).toggleClass(value.call(this, i, getClass(this), stateVal), stateVal);\n        });\n      }\n      if (typeof stateVal === \"boolean\" && isValidValue) {\n        return stateVal ? this.addClass(value) : this.removeClass(value);\n      }\n      classNames = classesToArray(value);\n      return this.each(function () {\n        if (isValidValue) {\n          // Toggle individual class names\n          self = jQuery(this);\n          for (i = 0; i < classNames.length; i++) {\n            className = classNames[i];\n\n            // Check each className given, space separated list\n            if (self.hasClass(className)) {\n              self.removeClass(className);\n            } else {\n              self.addClass(className);\n            }\n          }\n\n          // Toggle whole class name\n        } else if (value === undefined || type === \"boolean\") {\n          className = getClass(this);\n          if (className) {\n            // Store className if set\n            dataPriv.set(this, \"__className__\", className);\n          }\n\n          // If the element has a class name or if we're passed `false`,\n          // then remove the whole classname (if there was one, the above saved it).\n          // Otherwise bring back whatever was previously saved (if anything),\n          // falling back to the empty string if nothing was stored.\n          if (this.setAttribute) {\n            this.setAttribute(\"class\", className || value === false ? \"\" : dataPriv.get(this, \"__className__\") || \"\");\n          }\n        }\n      });\n    },\n    hasClass: function hasClass(selector) {\n      var className,\n        elem,\n        i = 0;\n      className = \" \" + selector + \" \";\n      while (elem = this[i++]) {\n        if (elem.nodeType === 1 && (\" \" + stripAndCollapse(getClass(elem)) + \" \").indexOf(className) > -1) {\n          return true;\n        }\n      }\n      return false;\n    }\n  });\n  var rreturn = /\\r/g;\n  jQuery.fn.extend({\n    val: function val(value) {\n      var hooks,\n        ret,\n        valueIsFunction,\n        elem = this[0];\n      if (!arguments.length) {\n        if (elem) {\n          hooks = jQuery.valHooks[elem.type] || jQuery.valHooks[elem.nodeName.toLowerCase()];\n          if (hooks && \"get\" in hooks && (ret = hooks.get(elem, \"value\")) !== undefined) {\n            return ret;\n          }\n          ret = elem.value;\n\n          // Handle most common string cases\n          if (typeof ret === \"string\") {\n            return ret.replace(rreturn, \"\");\n          }\n\n          // Handle cases where value is null/undef or number\n          return ret == null ? \"\" : ret;\n        }\n        return;\n      }\n      valueIsFunction = isFunction(value);\n      return this.each(function (i) {\n        var val;\n        if (this.nodeType !== 1) {\n          return;\n        }\n        if (valueIsFunction) {\n          val = value.call(this, i, jQuery(this).val());\n        } else {\n          val = value;\n        }\n\n        // Treat null/undefined as \"\"; convert numbers to string\n        if (val == null) {\n          val = \"\";\n        } else if (typeof val === \"number\") {\n          val += \"\";\n        } else if (Array.isArray(val)) {\n          val = jQuery.map(val, function (value) {\n            return value == null ? \"\" : value + \"\";\n          });\n        }\n        hooks = jQuery.valHooks[this.type] || jQuery.valHooks[this.nodeName.toLowerCase()];\n\n        // If set returns undefined, fall back to normal setting\n        if (!hooks || !(\"set\" in hooks) || hooks.set(this, val, \"value\") === undefined) {\n          this.value = val;\n        }\n      });\n    }\n  });\n  jQuery.extend({\n    valHooks: {\n      option: {\n        get: function get(elem) {\n          var val = jQuery.find.attr(elem, \"value\");\n          return val != null ? val :\n          // Support: IE <=10 - 11 only\n          // option.text throws exceptions (trac-14686, trac-14858)\n          // Strip and collapse whitespace\n          // https://html.spec.whatwg.org/#strip-and-collapse-whitespace\n          stripAndCollapse(jQuery.text(elem));\n        }\n      },\n      select: {\n        get: function get(elem) {\n          var value,\n            option,\n            i,\n            options = elem.options,\n            index = elem.selectedIndex,\n            one = elem.type === \"select-one\",\n            values = one ? null : [],\n            max = one ? index + 1 : options.length;\n          if (index < 0) {\n            i = max;\n          } else {\n            i = one ? index : 0;\n          }\n\n          // Loop through all the selected options\n          for (; i < max; i++) {\n            option = options[i];\n\n            // Support: IE <=9 only\n            // IE8-9 doesn't update selected after form reset (trac-2551)\n            if ((option.selected || i === index) &&\n            // Don't return options that are disabled or in a disabled optgroup\n            !option.disabled && (!option.parentNode.disabled || !nodeName(option.parentNode, \"optgroup\"))) {\n              // Get the specific value for the option\n              value = jQuery(option).val();\n\n              // We don't need an array for one selects\n              if (one) {\n                return value;\n              }\n\n              // Multi-Selects return an array\n              values.push(value);\n            }\n          }\n          return values;\n        },\n        set: function set(elem, value) {\n          var optionSet,\n            option,\n            options = elem.options,\n            values = jQuery.makeArray(value),\n            i = options.length;\n          while (i--) {\n            option = options[i];\n\n            /* eslint-disable no-cond-assign */\n\n            if (option.selected = jQuery.inArray(jQuery.valHooks.option.get(option), values) > -1) {\n              optionSet = true;\n            }\n\n            /* eslint-enable no-cond-assign */\n          }\n\n          // Force browsers to behave consistently when non-matching value is set\n          if (!optionSet) {\n            elem.selectedIndex = -1;\n          }\n          return values;\n        }\n      }\n    }\n  });\n\n  // Radios and checkboxes getter/setter\n  jQuery.each([\"radio\", \"checkbox\"], function () {\n    jQuery.valHooks[this] = {\n      set: function set(elem, value) {\n        if (Array.isArray(value)) {\n          return elem.checked = jQuery.inArray(jQuery(elem).val(), value) > -1;\n        }\n      }\n    };\n    if (!support.checkOn) {\n      jQuery.valHooks[this].get = function (elem) {\n        return elem.getAttribute(\"value\") === null ? \"on\" : elem.value;\n      };\n    }\n  });\n\n  // Return jQuery for attributes-only inclusion\n  var location = window.location;\n  var nonce = {\n    guid: Date.now()\n  };\n  var rquery = /\\?/;\n\n  // Cross-browser xml parsing\n  jQuery.parseXML = function (data) {\n    var xml, parserErrorElem;\n    if (!data || typeof data !== \"string\") {\n      return null;\n    }\n\n    // Support: IE 9 - 11 only\n    // IE throws on parseFromString with invalid input.\n    try {\n      xml = new window.DOMParser().parseFromString(data, \"text/xml\");\n    } catch (e) {}\n    parserErrorElem = xml && xml.getElementsByTagName(\"parsererror\")[0];\n    if (!xml || parserErrorElem) {\n      jQuery.error(\"Invalid XML: \" + (parserErrorElem ? jQuery.map(parserErrorElem.childNodes, function (el) {\n        return el.textContent;\n      }).join(\"\\n\") : data));\n    }\n    return xml;\n  };\n  var rfocusMorph = /^(?:focusinfocus|focusoutblur)$/,\n    stopPropagationCallback = function stopPropagationCallback(e) {\n      e.stopPropagation();\n    };\n  jQuery.extend(jQuery.event, {\n    trigger: function trigger(event, data, elem, onlyHandlers) {\n      var i,\n        cur,\n        tmp,\n        bubbleType,\n        ontype,\n        handle,\n        special,\n        lastElement,\n        eventPath = [elem || document],\n        type = hasOwn.call(event, \"type\") ? event.type : event,\n        namespaces = hasOwn.call(event, \"namespace\") ? event.namespace.split(\".\") : [];\n      cur = lastElement = tmp = elem = elem || document;\n\n      // Don't do events on text and comment nodes\n      if (elem.nodeType === 3 || elem.nodeType === 8) {\n        return;\n      }\n\n      // focus/blur morphs to focusin/out; ensure we're not firing them right now\n      if (rfocusMorph.test(type + jQuery.event.triggered)) {\n        return;\n      }\n      if (type.indexOf(\".\") > -1) {\n        // Namespaced trigger; create a regexp to match event type in handle()\n        namespaces = type.split(\".\");\n        type = namespaces.shift();\n        namespaces.sort();\n      }\n      ontype = type.indexOf(\":\") < 0 && \"on\" + type;\n\n      // Caller can pass in a jQuery.Event object, Object, or just an event type string\n      event = event[jQuery.expando] ? event : new jQuery.Event(type, _typeof(event) === \"object\" && event);\n\n      // Trigger bitmask: & 1 for native handlers; & 2 for jQuery (always true)\n      event.isTrigger = onlyHandlers ? 2 : 3;\n      event.namespace = namespaces.join(\".\");\n      event.rnamespace = event.namespace ? new RegExp(\"(^|\\\\.)\" + namespaces.join(\"\\\\.(?:.*\\\\.|)\") + \"(\\\\.|$)\") : null;\n\n      // Clean up the event in case it is being reused\n      event.result = undefined;\n      if (!event.target) {\n        event.target = elem;\n      }\n\n      // Clone any incoming data and prepend the event, creating the handler arg list\n      data = data == null ? [event] : jQuery.makeArray(data, [event]);\n\n      // Allow special events to draw outside the lines\n      special = jQuery.event.special[type] || {};\n      if (!onlyHandlers && special.trigger && special.trigger.apply(elem, data) === false) {\n        return;\n      }\n\n      // Determine event propagation path in advance, per W3C events spec (trac-9951)\n      // Bubble up to document, then to window; watch for a global ownerDocument var (trac-9724)\n      if (!onlyHandlers && !special.noBubble && !isWindow(elem)) {\n        bubbleType = special.delegateType || type;\n        if (!rfocusMorph.test(bubbleType + type)) {\n          cur = cur.parentNode;\n        }\n        for (; cur; cur = cur.parentNode) {\n          eventPath.push(cur);\n          tmp = cur;\n        }\n\n        // Only add window if we got to document (e.g., not plain obj or detached DOM)\n        if (tmp === (elem.ownerDocument || document)) {\n          eventPath.push(tmp.defaultView || tmp.parentWindow || window);\n        }\n      }\n\n      // Fire handlers on the event path\n      i = 0;\n      while ((cur = eventPath[i++]) && !event.isPropagationStopped()) {\n        lastElement = cur;\n        event.type = i > 1 ? bubbleType : special.bindType || type;\n\n        // jQuery handler\n        handle = (dataPriv.get(cur, \"events\") || Object.create(null))[event.type] && dataPriv.get(cur, \"handle\");\n        if (handle) {\n          handle.apply(cur, data);\n        }\n\n        // Native handler\n        handle = ontype && cur[ontype];\n        if (handle && handle.apply && acceptData(cur)) {\n          event.result = handle.apply(cur, data);\n          if (event.result === false) {\n            event.preventDefault();\n          }\n        }\n      }\n      event.type = type;\n\n      // If nobody prevented the default action, do it now\n      if (!onlyHandlers && !event.isDefaultPrevented()) {\n        if ((!special._default || special._default.apply(eventPath.pop(), data) === false) && acceptData(elem)) {\n          // Call a native DOM method on the target with the same name as the event.\n          // Don't do default actions on window, that's where global variables be (trac-6170)\n          if (ontype && isFunction(elem[type]) && !isWindow(elem)) {\n            // Don't re-trigger an onFOO event when we call its FOO() method\n            tmp = elem[ontype];\n            if (tmp) {\n              elem[ontype] = null;\n            }\n\n            // Prevent re-triggering of the same event, since we already bubbled it above\n            jQuery.event.triggered = type;\n            if (event.isPropagationStopped()) {\n              lastElement.addEventListener(type, stopPropagationCallback);\n            }\n            elem[type]();\n            if (event.isPropagationStopped()) {\n              lastElement.removeEventListener(type, stopPropagationCallback);\n            }\n            jQuery.event.triggered = undefined;\n            if (tmp) {\n              elem[ontype] = tmp;\n            }\n          }\n        }\n      }\n      return event.result;\n    },\n    // Piggyback on a donor event to simulate a different one\n    // Used only for `focus(in | out)` events\n    simulate: function simulate(type, elem, event) {\n      var e = jQuery.extend(new jQuery.Event(), event, {\n        type: type,\n        isSimulated: true\n      });\n      jQuery.event.trigger(e, null, elem);\n    }\n  });\n  jQuery.fn.extend({\n    trigger: function trigger(type, data) {\n      return this.each(function () {\n        jQuery.event.trigger(type, data, this);\n      });\n    },\n    triggerHandler: function triggerHandler(type, data) {\n      var elem = this[0];\n      if (elem) {\n        return jQuery.event.trigger(type, data, elem, true);\n      }\n    }\n  });\n  var rbracket = /\\[\\]$/,\n    rCRLF = /\\r?\\n/g,\n    rsubmitterTypes = /^(?:submit|button|image|reset|file)$/i,\n    rsubmittable = /^(?:input|select|textarea|keygen)/i;\n  function buildParams(prefix, obj, traditional, add) {\n    var name;\n    if (Array.isArray(obj)) {\n      // Serialize array item.\n      jQuery.each(obj, function (i, v) {\n        if (traditional || rbracket.test(prefix)) {\n          // Treat each array item as a scalar.\n          add(prefix, v);\n        } else {\n          // Item is non-scalar (array or object), encode its numeric index.\n          buildParams(prefix + \"[\" + (_typeof(v) === \"object\" && v != null ? i : \"\") + \"]\", v, traditional, add);\n        }\n      });\n    } else if (!traditional && toType(obj) === \"object\") {\n      // Serialize object item.\n      for (name in obj) {\n        buildParams(prefix + \"[\" + name + \"]\", obj[name], traditional, add);\n      }\n    } else {\n      // Serialize scalar item.\n      add(prefix, obj);\n    }\n  }\n\n  // Serialize an array of form elements or a set of\n  // key/values into a query string\n  jQuery.param = function (a, traditional) {\n    var prefix,\n      s = [],\n      add = function add(key, valueOrFunction) {\n        // If value is a function, invoke it and use its return value\n        var value = isFunction(valueOrFunction) ? valueOrFunction() : valueOrFunction;\n        s[s.length] = encodeURIComponent(key) + \"=\" + encodeURIComponent(value == null ? \"\" : value);\n      };\n    if (a == null) {\n      return \"\";\n    }\n\n    // If an array was passed in, assume that it is an array of form elements.\n    if (Array.isArray(a) || a.jquery && !jQuery.isPlainObject(a)) {\n      // Serialize the form elements\n      jQuery.each(a, function () {\n        add(this.name, this.value);\n      });\n    } else {\n      // If traditional, encode the \"old\" way (the way 1.3.2 or older\n      // did it), otherwise encode params recursively.\n      for (prefix in a) {\n        buildParams(prefix, a[prefix], traditional, add);\n      }\n    }\n\n    // Return the resulting serialization\n    return s.join(\"&\");\n  };\n  jQuery.fn.extend({\n    serialize: function serialize() {\n      return jQuery.param(this.serializeArray());\n    },\n    serializeArray: function serializeArray() {\n      return this.map(function () {\n        // Can add propHook for \"elements\" to filter or add form elements\n        var elements = jQuery.prop(this, \"elements\");\n        return elements ? jQuery.makeArray(elements) : this;\n      }).filter(function () {\n        var type = this.type;\n\n        // Use .is( \":disabled\" ) so that fieldset[disabled] works\n        return this.name && !jQuery(this).is(\":disabled\") && rsubmittable.test(this.nodeName) && !rsubmitterTypes.test(type) && (this.checked || !rcheckableType.test(type));\n      }).map(function (_i, elem) {\n        var val = jQuery(this).val();\n        if (val == null) {\n          return null;\n        }\n        if (Array.isArray(val)) {\n          return jQuery.map(val, function (val) {\n            return {\n              name: elem.name,\n              value: val.replace(rCRLF, \"\\r\\n\")\n            };\n          });\n        }\n        return {\n          name: elem.name,\n          value: val.replace(rCRLF, \"\\r\\n\")\n        };\n      }).get();\n    }\n  });\n  var r20 = /%20/g,\n    rhash = /#.*$/,\n    rantiCache = /([?&])_=[^&]*/,\n    rheaders = /^(.*?):[ \\t]*([^\\r\\n]*)$/mg,\n    // trac-7653, trac-8125, trac-8152: local protocol detection\n    rlocalProtocol = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/,\n    rnoContent = /^(?:GET|HEAD)$/,\n    rprotocol = /^\\/\\//,\n    /* Prefilters\n     * 1) They are useful to introduce custom dataTypes (see ajax/jsonp.js for an example)\n     * 2) These are called:\n     *    - BEFORE asking for a transport\n     *    - AFTER param serialization (s.data is a string if s.processData is true)\n     * 3) key is the dataType\n     * 4) the catchall symbol \"*\" can be used\n     * 5) execution will start with transport dataType and THEN continue down to \"*\" if needed\n     */\n    prefilters = {},\n    /* Transports bindings\n     * 1) key is the dataType\n     * 2) the catchall symbol \"*\" can be used\n     * 3) selection will start with transport dataType and THEN go to \"*\" if needed\n     */\n    transports = {},\n    // Avoid comment-prolog char sequence (trac-10098); must appease lint and evade compression\n    allTypes = \"*/\".concat(\"*\"),\n    // Anchor tag for parsing the document origin\n    originAnchor = document.createElement(\"a\");\n  originAnchor.href = location.href;\n\n  // Base \"constructor\" for jQuery.ajaxPrefilter and jQuery.ajaxTransport\n  function addToPrefiltersOrTransports(structure) {\n    // dataTypeExpression is optional and defaults to \"*\"\n    return function (dataTypeExpression, func) {\n      if (typeof dataTypeExpression !== \"string\") {\n        func = dataTypeExpression;\n        dataTypeExpression = \"*\";\n      }\n      var dataType,\n        i = 0,\n        dataTypes = dataTypeExpression.toLowerCase().match(rnothtmlwhite) || [];\n      if (isFunction(func)) {\n        // For each dataType in the dataTypeExpression\n        while (dataType = dataTypes[i++]) {\n          // Prepend if requested\n          if (dataType[0] === \"+\") {\n            dataType = dataType.slice(1) || \"*\";\n            (structure[dataType] = structure[dataType] || []).unshift(func);\n\n            // Otherwise append\n          } else {\n            (structure[dataType] = structure[dataType] || []).push(func);\n          }\n        }\n      }\n    };\n  }\n\n  // Base inspection function for prefilters and transports\n  function inspectPrefiltersOrTransports(structure, options, originalOptions, jqXHR) {\n    var inspected = {},\n      seekingTransport = structure === transports;\n    function inspect(dataType) {\n      var selected;\n      inspected[dataType] = true;\n      jQuery.each(structure[dataType] || [], function (_, prefilterOrFactory) {\n        var dataTypeOrTransport = prefilterOrFactory(options, originalOptions, jqXHR);\n        if (typeof dataTypeOrTransport === \"string\" && !seekingTransport && !inspected[dataTypeOrTransport]) {\n          options.dataTypes.unshift(dataTypeOrTransport);\n          inspect(dataTypeOrTransport);\n          return false;\n        } else if (seekingTransport) {\n          return !(selected = dataTypeOrTransport);\n        }\n      });\n      return selected;\n    }\n    return inspect(options.dataTypes[0]) || !inspected[\"*\"] && inspect(\"*\");\n  }\n\n  // A special extend for ajax options\n  // that takes \"flat\" options (not to be deep extended)\n  // Fixes trac-9887\n  function ajaxExtend(target, src) {\n    var key,\n      deep,\n      flatOptions = jQuery.ajaxSettings.flatOptions || {};\n    for (key in src) {\n      if (src[key] !== undefined) {\n        (flatOptions[key] ? target : deep || (deep = {}))[key] = src[key];\n      }\n    }\n    if (deep) {\n      jQuery.extend(true, target, deep);\n    }\n    return target;\n  }\n\n  /* Handles responses to an ajax request:\n   * - finds the right dataType (mediates between content-type and expected dataType)\n   * - returns the corresponding response\n   */\n  function ajaxHandleResponses(s, jqXHR, responses) {\n    var ct,\n      type,\n      finalDataType,\n      firstDataType,\n      contents = s.contents,\n      dataTypes = s.dataTypes;\n\n    // Remove auto dataType and get content-type in the process\n    while (dataTypes[0] === \"*\") {\n      dataTypes.shift();\n      if (ct === undefined) {\n        ct = s.mimeType || jqXHR.getResponseHeader(\"Content-Type\");\n      }\n    }\n\n    // Check if we're dealing with a known content-type\n    if (ct) {\n      for (type in contents) {\n        if (contents[type] && contents[type].test(ct)) {\n          dataTypes.unshift(type);\n          break;\n        }\n      }\n    }\n\n    // Check to see if we have a response for the expected dataType\n    if (dataTypes[0] in responses) {\n      finalDataType = dataTypes[0];\n    } else {\n      // Try convertible dataTypes\n      for (type in responses) {\n        if (!dataTypes[0] || s.converters[type + \" \" + dataTypes[0]]) {\n          finalDataType = type;\n          break;\n        }\n        if (!firstDataType) {\n          firstDataType = type;\n        }\n      }\n\n      // Or just use first one\n      finalDataType = finalDataType || firstDataType;\n    }\n\n    // If we found a dataType\n    // We add the dataType to the list if needed\n    // and return the corresponding response\n    if (finalDataType) {\n      if (finalDataType !== dataTypes[0]) {\n        dataTypes.unshift(finalDataType);\n      }\n      return responses[finalDataType];\n    }\n  }\n\n  /* Chain conversions given the request and the original response\n   * Also sets the responseXXX fields on the jqXHR instance\n   */\n  function ajaxConvert(s, response, jqXHR, isSuccess) {\n    var conv2,\n      current,\n      conv,\n      tmp,\n      prev,\n      converters = {},\n      // Work with a copy of dataTypes in case we need to modify it for conversion\n      dataTypes = s.dataTypes.slice();\n\n    // Create converters map with lowercased keys\n    if (dataTypes[1]) {\n      for (conv in s.converters) {\n        converters[conv.toLowerCase()] = s.converters[conv];\n      }\n    }\n    current = dataTypes.shift();\n\n    // Convert to each sequential dataType\n    while (current) {\n      if (s.responseFields[current]) {\n        jqXHR[s.responseFields[current]] = response;\n      }\n\n      // Apply the dataFilter if provided\n      if (!prev && isSuccess && s.dataFilter) {\n        response = s.dataFilter(response, s.dataType);\n      }\n      prev = current;\n      current = dataTypes.shift();\n      if (current) {\n        // There's only work to do if current dataType is non-auto\n        if (current === \"*\") {\n          current = prev;\n\n          // Convert response if prev dataType is non-auto and differs from current\n        } else if (prev !== \"*\" && prev !== current) {\n          // Seek a direct converter\n          conv = converters[prev + \" \" + current] || converters[\"* \" + current];\n\n          // If none found, seek a pair\n          if (!conv) {\n            for (conv2 in converters) {\n              // If conv2 outputs current\n              tmp = conv2.split(\" \");\n              if (tmp[1] === current) {\n                // If prev can be converted to accepted input\n                conv = converters[prev + \" \" + tmp[0]] || converters[\"* \" + tmp[0]];\n                if (conv) {\n                  // Condense equivalence converters\n                  if (conv === true) {\n                    conv = converters[conv2];\n\n                    // Otherwise, insert the intermediate dataType\n                  } else if (converters[conv2] !== true) {\n                    current = tmp[0];\n                    dataTypes.unshift(tmp[1]);\n                  }\n                  break;\n                }\n              }\n            }\n          }\n\n          // Apply converter (if not an equivalence)\n          if (conv !== true) {\n            // Unless errors are allowed to bubble, catch and return them\n            if (conv && s[\"throws\"]) {\n              response = conv(response);\n            } else {\n              try {\n                response = conv(response);\n              } catch (e) {\n                return {\n                  state: \"parsererror\",\n                  error: conv ? e : \"No conversion from \" + prev + \" to \" + current\n                };\n              }\n            }\n          }\n        }\n      }\n    }\n    return {\n      state: \"success\",\n      data: response\n    };\n  }\n  jQuery.extend({\n    // Counter for holding the number of active queries\n    active: 0,\n    // Last-Modified header cache for next request\n    lastModified: {},\n    etag: {},\n    ajaxSettings: {\n      url: location.href,\n      type: \"GET\",\n      isLocal: rlocalProtocol.test(location.protocol),\n      global: true,\n      processData: true,\n      async: true,\n      contentType: \"application/x-www-form-urlencoded; charset=UTF-8\",\n      /*\n      timeout: 0,\n      data: null,\n      dataType: null,\n      username: null,\n      password: null,\n      cache: null,\n      throws: false,\n      traditional: false,\n      headers: {},\n      */\n\n      accepts: {\n        \"*\": allTypes,\n        text: \"text/plain\",\n        html: \"text/html\",\n        xml: \"application/xml, text/xml\",\n        json: \"application/json, text/javascript\"\n      },\n      contents: {\n        xml: /\\bxml\\b/,\n        html: /\\bhtml/,\n        json: /\\bjson\\b/\n      },\n      responseFields: {\n        xml: \"responseXML\",\n        text: \"responseText\",\n        json: \"responseJSON\"\n      },\n      // Data converters\n      // Keys separate source (or catchall \"*\") and destination types with a single space\n      converters: {\n        // Convert anything to text\n        \"* text\": String,\n        // Text to html (true = no transformation)\n        \"text html\": true,\n        // Evaluate text as a json expression\n        \"text json\": JSON.parse,\n        // Parse text as xml\n        \"text xml\": jQuery.parseXML\n      },\n      // For options that shouldn't be deep extended:\n      // you can add your own custom options here if\n      // and when you create one that shouldn't be\n      // deep extended (see ajaxExtend)\n      flatOptions: {\n        url: true,\n        context: true\n      }\n    },\n    // Creates a full fledged settings object into target\n    // with both ajaxSettings and settings fields.\n    // If target is omitted, writes into ajaxSettings.\n    ajaxSetup: function ajaxSetup(target, settings) {\n      return settings ?\n      // Building a settings object\n      ajaxExtend(ajaxExtend(target, jQuery.ajaxSettings), settings) :\n      // Extending ajaxSettings\n      ajaxExtend(jQuery.ajaxSettings, target);\n    },\n    ajaxPrefilter: addToPrefiltersOrTransports(prefilters),\n    ajaxTransport: addToPrefiltersOrTransports(transports),\n    // Main method\n    ajax: function ajax(url, options) {\n      // If url is an object, simulate pre-1.5 signature\n      if (_typeof(url) === \"object\") {\n        options = url;\n        url = undefined;\n      }\n\n      // Force options to be an object\n      options = options || {};\n      var transport,\n        // URL without anti-cache param\n        cacheURL,\n        // Response headers\n        responseHeadersString,\n        responseHeaders,\n        // timeout handle\n        timeoutTimer,\n        // Url cleanup var\n        urlAnchor,\n        // Request state (becomes false upon send and true upon completion)\n        completed,\n        // To know if global events are to be dispatched\n        fireGlobals,\n        // Loop variable\n        i,\n        // uncached part of the url\n        uncached,\n        // Create the final options object\n        s = jQuery.ajaxSetup({}, options),\n        // Callbacks context\n        callbackContext = s.context || s,\n        // Context for global events is callbackContext if it is a DOM node or jQuery collection\n        globalEventContext = s.context && (callbackContext.nodeType || callbackContext.jquery) ? jQuery(callbackContext) : jQuery.event,\n        // Deferreds\n        deferred = jQuery.Deferred(),\n        completeDeferred = jQuery.Callbacks(\"once memory\"),\n        // Status-dependent callbacks\n        _statusCode = s.statusCode || {},\n        // Headers (they are sent all at once)\n        requestHeaders = {},\n        requestHeadersNames = {},\n        // Default abort message\n        strAbort = \"canceled\",\n        // Fake xhr\n        jqXHR = {\n          readyState: 0,\n          // Builds headers hashtable if needed\n          getResponseHeader: function getResponseHeader(key) {\n            var match;\n            if (completed) {\n              if (!responseHeaders) {\n                responseHeaders = {};\n                while (match = rheaders.exec(responseHeadersString)) {\n                  responseHeaders[match[1].toLowerCase() + \" \"] = (responseHeaders[match[1].toLowerCase() + \" \"] || []).concat(match[2]);\n                }\n              }\n              match = responseHeaders[key.toLowerCase() + \" \"];\n            }\n            return match == null ? null : match.join(\", \");\n          },\n          // Raw string\n          getAllResponseHeaders: function getAllResponseHeaders() {\n            return completed ? responseHeadersString : null;\n          },\n          // Caches the header\n          setRequestHeader: function setRequestHeader(name, value) {\n            if (completed == null) {\n              name = requestHeadersNames[name.toLowerCase()] = requestHeadersNames[name.toLowerCase()] || name;\n              requestHeaders[name] = value;\n            }\n            return this;\n          },\n          // Overrides response content-type header\n          overrideMimeType: function overrideMimeType(type) {\n            if (completed == null) {\n              s.mimeType = type;\n            }\n            return this;\n          },\n          // Status-dependent callbacks\n          statusCode: function statusCode(map) {\n            var code;\n            if (map) {\n              if (completed) {\n                // Execute the appropriate callbacks\n                jqXHR.always(map[jqXHR.status]);\n              } else {\n                // Lazy-add the new callbacks in a way that preserves old ones\n                for (code in map) {\n                  _statusCode[code] = [_statusCode[code], map[code]];\n                }\n              }\n            }\n            return this;\n          },\n          // Cancel the request\n          abort: function abort(statusText) {\n            var finalText = statusText || strAbort;\n            if (transport) {\n              transport.abort(finalText);\n            }\n            done(0, finalText);\n            return this;\n          }\n        };\n\n      // Attach deferreds\n      deferred.promise(jqXHR);\n\n      // Add protocol if not provided (prefilters might expect it)\n      // Handle falsy url in the settings object (trac-10093: consistency with old signature)\n      // We also use the url parameter if available\n      s.url = ((url || s.url || location.href) + \"\").replace(rprotocol, location.protocol + \"//\");\n\n      // Alias method option to type as per ticket trac-12004\n      s.type = options.method || options.type || s.method || s.type;\n\n      // Extract dataTypes list\n      s.dataTypes = (s.dataType || \"*\").toLowerCase().match(rnothtmlwhite) || [\"\"];\n\n      // A cross-domain request is in order when the origin doesn't match the current origin.\n      if (s.crossDomain == null) {\n        urlAnchor = document.createElement(\"a\");\n\n        // Support: IE <=8 - 11, Edge 12 - 15\n        // IE throws exception on accessing the href property if url is malformed,\n        // e.g. http://example.com:80x/\n        try {\n          urlAnchor.href = s.url;\n\n          // Support: IE <=8 - 11 only\n          // Anchor's host property isn't correctly set when s.url is relative\n          urlAnchor.href = urlAnchor.href;\n          s.crossDomain = originAnchor.protocol + \"//\" + originAnchor.host !== urlAnchor.protocol + \"//\" + urlAnchor.host;\n        } catch (e) {\n          // If there is an error parsing the URL, assume it is crossDomain,\n          // it can be rejected by the transport if it is invalid\n          s.crossDomain = true;\n        }\n      }\n\n      // Convert data if not already a string\n      if (s.data && s.processData && typeof s.data !== \"string\") {\n        s.data = jQuery.param(s.data, s.traditional);\n      }\n\n      // Apply prefilters\n      inspectPrefiltersOrTransports(prefilters, s, options, jqXHR);\n\n      // If request was aborted inside a prefilter, stop there\n      if (completed) {\n        return jqXHR;\n      }\n\n      // We can fire global events as of now if asked to\n      // Don't fire events if jQuery.event is undefined in an AMD-usage scenario (trac-15118)\n      fireGlobals = jQuery.event && s.global;\n\n      // Watch for a new set of requests\n      if (fireGlobals && jQuery.active++ === 0) {\n        jQuery.event.trigger(\"ajaxStart\");\n      }\n\n      // Uppercase the type\n      s.type = s.type.toUpperCase();\n\n      // Determine if request has content\n      s.hasContent = !rnoContent.test(s.type);\n\n      // Save the URL in case we're toying with the If-Modified-Since\n      // and/or If-None-Match header later on\n      // Remove hash to simplify url manipulation\n      cacheURL = s.url.replace(rhash, \"\");\n\n      // More options handling for requests with no content\n      if (!s.hasContent) {\n        // Remember the hash so we can put it back\n        uncached = s.url.slice(cacheURL.length);\n\n        // If data is available and should be processed, append data to url\n        if (s.data && (s.processData || typeof s.data === \"string\")) {\n          cacheURL += (rquery.test(cacheURL) ? \"&\" : \"?\") + s.data;\n\n          // trac-9682: remove data so that it's not used in an eventual retry\n          delete s.data;\n        }\n\n        // Add or update anti-cache param if needed\n        if (s.cache === false) {\n          cacheURL = cacheURL.replace(rantiCache, \"$1\");\n          uncached = (rquery.test(cacheURL) ? \"&\" : \"?\") + \"_=\" + nonce.guid++ + uncached;\n        }\n\n        // Put hash and anti-cache on the URL that will be requested (gh-1732)\n        s.url = cacheURL + uncached;\n\n        // Change '%20' to '+' if this is encoded form body content (gh-2658)\n      } else if (s.data && s.processData && (s.contentType || \"\").indexOf(\"application/x-www-form-urlencoded\") === 0) {\n        s.data = s.data.replace(r20, \"+\");\n      }\n\n      // Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.\n      if (s.ifModified) {\n        if (jQuery.lastModified[cacheURL]) {\n          jqXHR.setRequestHeader(\"If-Modified-Since\", jQuery.lastModified[cacheURL]);\n        }\n        if (jQuery.etag[cacheURL]) {\n          jqXHR.setRequestHeader(\"If-None-Match\", jQuery.etag[cacheURL]);\n        }\n      }\n\n      // Set the correct header, if data is being sent\n      if (s.data && s.hasContent && s.contentType !== false || options.contentType) {\n        jqXHR.setRequestHeader(\"Content-Type\", s.contentType);\n      }\n\n      // Set the Accepts header for the server, depending on the dataType\n      jqXHR.setRequestHeader(\"Accept\", s.dataTypes[0] && s.accepts[s.dataTypes[0]] ? s.accepts[s.dataTypes[0]] + (s.dataTypes[0] !== \"*\" ? \", \" + allTypes + \"; q=0.01\" : \"\") : s.accepts[\"*\"]);\n\n      // Check for headers option\n      for (i in s.headers) {\n        jqXHR.setRequestHeader(i, s.headers[i]);\n      }\n\n      // Allow custom headers/mimetypes and early abort\n      if (s.beforeSend && (s.beforeSend.call(callbackContext, jqXHR, s) === false || completed)) {\n        // Abort if not done already and return\n        return jqXHR.abort();\n      }\n\n      // Aborting is no longer a cancellation\n      strAbort = \"abort\";\n\n      // Install callbacks on deferreds\n      completeDeferred.add(s.complete);\n      jqXHR.done(s.success);\n      jqXHR.fail(s.error);\n\n      // Get transport\n      transport = inspectPrefiltersOrTransports(transports, s, options, jqXHR);\n\n      // If no transport, we auto-abort\n      if (!transport) {\n        done(-1, \"No Transport\");\n      } else {\n        jqXHR.readyState = 1;\n\n        // Send global event\n        if (fireGlobals) {\n          globalEventContext.trigger(\"ajaxSend\", [jqXHR, s]);\n        }\n\n        // If request was aborted inside ajaxSend, stop there\n        if (completed) {\n          return jqXHR;\n        }\n\n        // Timeout\n        if (s.async && s.timeout > 0) {\n          timeoutTimer = window.setTimeout(function () {\n            jqXHR.abort(\"timeout\");\n          }, s.timeout);\n        }\n        try {\n          completed = false;\n          transport.send(requestHeaders, done);\n        } catch (e) {\n          // Rethrow post-completion exceptions\n          if (completed) {\n            throw e;\n          }\n\n          // Propagate others as results\n          done(-1, e);\n        }\n      }\n\n      // Callback for when everything is done\n      function done(status, nativeStatusText, responses, headers) {\n        var isSuccess,\n          success,\n          error,\n          response,\n          modified,\n          statusText = nativeStatusText;\n\n        // Ignore repeat invocations\n        if (completed) {\n          return;\n        }\n        completed = true;\n\n        // Clear timeout if it exists\n        if (timeoutTimer) {\n          window.clearTimeout(timeoutTimer);\n        }\n\n        // Dereference transport for early garbage collection\n        // (no matter how long the jqXHR object will be used)\n        transport = undefined;\n\n        // Cache response headers\n        responseHeadersString = headers || \"\";\n\n        // Set readyState\n        jqXHR.readyState = status > 0 ? 4 : 0;\n\n        // Determine if successful\n        isSuccess = status >= 200 && status < 300 || status === 304;\n\n        // Get response data\n        if (responses) {\n          response = ajaxHandleResponses(s, jqXHR, responses);\n        }\n\n        // Use a noop converter for missing script but not if jsonp\n        if (!isSuccess && jQuery.inArray(\"script\", s.dataTypes) > -1 && jQuery.inArray(\"json\", s.dataTypes) < 0) {\n          s.converters[\"text script\"] = function () {};\n        }\n\n        // Convert no matter what (that way responseXXX fields are always set)\n        response = ajaxConvert(s, response, jqXHR, isSuccess);\n\n        // If successful, handle type chaining\n        if (isSuccess) {\n          // Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.\n          if (s.ifModified) {\n            modified = jqXHR.getResponseHeader(\"Last-Modified\");\n            if (modified) {\n              jQuery.lastModified[cacheURL] = modified;\n            }\n            modified = jqXHR.getResponseHeader(\"etag\");\n            if (modified) {\n              jQuery.etag[cacheURL] = modified;\n            }\n          }\n\n          // if no content\n          if (status === 204 || s.type === \"HEAD\") {\n            statusText = \"nocontent\";\n\n            // if not modified\n          } else if (status === 304) {\n            statusText = \"notmodified\";\n\n            // If we have data, let's convert it\n          } else {\n            statusText = response.state;\n            success = response.data;\n            error = response.error;\n            isSuccess = !error;\n          }\n        } else {\n          // Extract error from statusText and normalize for non-aborts\n          error = statusText;\n          if (status || !statusText) {\n            statusText = \"error\";\n            if (status < 0) {\n              status = 0;\n            }\n          }\n        }\n\n        // Set data for the fake xhr object\n        jqXHR.status = status;\n        jqXHR.statusText = (nativeStatusText || statusText) + \"\";\n\n        // Success/Error\n        if (isSuccess) {\n          deferred.resolveWith(callbackContext, [success, statusText, jqXHR]);\n        } else {\n          deferred.rejectWith(callbackContext, [jqXHR, statusText, error]);\n        }\n\n        // Status-dependent callbacks\n        jqXHR.statusCode(_statusCode);\n        _statusCode = undefined;\n        if (fireGlobals) {\n          globalEventContext.trigger(isSuccess ? \"ajaxSuccess\" : \"ajaxError\", [jqXHR, s, isSuccess ? success : error]);\n        }\n\n        // Complete\n        completeDeferred.fireWith(callbackContext, [jqXHR, statusText]);\n        if (fireGlobals) {\n          globalEventContext.trigger(\"ajaxComplete\", [jqXHR, s]);\n\n          // Handle the global AJAX counter\n          if (! --jQuery.active) {\n            jQuery.event.trigger(\"ajaxStop\");\n          }\n        }\n      }\n      return jqXHR;\n    },\n    getJSON: function getJSON(url, data, callback) {\n      return jQuery.get(url, data, callback, \"json\");\n    },\n    getScript: function getScript(url, callback) {\n      return jQuery.get(url, undefined, callback, \"script\");\n    }\n  });\n  jQuery.each([\"get\", \"post\"], function (_i, method) {\n    jQuery[method] = function (url, data, callback, type) {\n      // Shift arguments if data argument was omitted\n      if (isFunction(data)) {\n        type = type || callback;\n        callback = data;\n        data = undefined;\n      }\n\n      // The url can be an options object (which then must have .url)\n      return jQuery.ajax(jQuery.extend({\n        url: url,\n        type: method,\n        dataType: type,\n        data: data,\n        success: callback\n      }, jQuery.isPlainObject(url) && url));\n    };\n  });\n  jQuery.ajaxPrefilter(function (s) {\n    var i;\n    for (i in s.headers) {\n      if (i.toLowerCase() === \"content-type\") {\n        s.contentType = s.headers[i] || \"\";\n      }\n    }\n  });\n  jQuery._evalUrl = function (url, options, doc) {\n    return jQuery.ajax({\n      url: url,\n      // Make this explicit, since user can override this through ajaxSetup (trac-11264)\n      type: \"GET\",\n      dataType: \"script\",\n      cache: true,\n      async: false,\n      global: false,\n      // Only evaluate the response if it is successful (gh-4126)\n      // dataFilter is not invoked for failure responses, so using it instead\n      // of the default converter is kludgy but it works.\n      converters: {\n        \"text script\": function textScript() {}\n      },\n      dataFilter: function dataFilter(response) {\n        jQuery.globalEval(response, options, doc);\n      }\n    });\n  };\n  jQuery.fn.extend({\n    wrapAll: function wrapAll(html) {\n      var wrap;\n      if (this[0]) {\n        if (isFunction(html)) {\n          html = html.call(this[0]);\n        }\n\n        // The elements to wrap the target around\n        wrap = jQuery(html, this[0].ownerDocument).eq(0).clone(true);\n        if (this[0].parentNode) {\n          wrap.insertBefore(this[0]);\n        }\n        wrap.map(function () {\n          var elem = this;\n          while (elem.firstElementChild) {\n            elem = elem.firstElementChild;\n          }\n          return elem;\n        }).append(this);\n      }\n      return this;\n    },\n    wrapInner: function wrapInner(html) {\n      if (isFunction(html)) {\n        return this.each(function (i) {\n          jQuery(this).wrapInner(html.call(this, i));\n        });\n      }\n      return this.each(function () {\n        var self = jQuery(this),\n          contents = self.contents();\n        if (contents.length) {\n          contents.wrapAll(html);\n        } else {\n          self.append(html);\n        }\n      });\n    },\n    wrap: function wrap(html) {\n      var htmlIsFunction = isFunction(html);\n      return this.each(function (i) {\n        jQuery(this).wrapAll(htmlIsFunction ? html.call(this, i) : html);\n      });\n    },\n    unwrap: function unwrap(selector) {\n      this.parent(selector).not(\"body\").each(function () {\n        jQuery(this).replaceWith(this.childNodes);\n      });\n      return this;\n    }\n  });\n  jQuery.expr.pseudos.hidden = function (elem) {\n    return !jQuery.expr.pseudos.visible(elem);\n  };\n  jQuery.expr.pseudos.visible = function (elem) {\n    return !!(elem.offsetWidth || elem.offsetHeight || elem.getClientRects().length);\n  };\n  jQuery.ajaxSettings.xhr = function () {\n    try {\n      return new window.XMLHttpRequest();\n    } catch (e) {}\n  };\n  var xhrSuccessStatus = {\n      // File protocol always yields status code 0, assume 200\n      0: 200,\n      // Support: IE <=9 only\n      // trac-1450: sometimes IE returns 1223 when it should be 204\n      1223: 204\n    },\n    xhrSupported = jQuery.ajaxSettings.xhr();\n  support.cors = !!xhrSupported && \"withCredentials\" in xhrSupported;\n  support.ajax = xhrSupported = !!xhrSupported;\n  jQuery.ajaxTransport(function (options) {\n    var _callback, errorCallback;\n\n    // Cross domain only allowed if supported through XMLHttpRequest\n    if (support.cors || xhrSupported && !options.crossDomain) {\n      return {\n        send: function send(headers, complete) {\n          var i,\n            xhr = options.xhr();\n          xhr.open(options.type, options.url, options.async, options.username, options.password);\n\n          // Apply custom fields if provided\n          if (options.xhrFields) {\n            for (i in options.xhrFields) {\n              xhr[i] = options.xhrFields[i];\n            }\n          }\n\n          // Override mime type if needed\n          if (options.mimeType && xhr.overrideMimeType) {\n            xhr.overrideMimeType(options.mimeType);\n          }\n\n          // X-Requested-With header\n          // For cross-domain requests, seeing as conditions for a preflight are\n          // akin to a jigsaw puzzle, we simply never set it to be sure.\n          // (it can always be set on a per-request basis or even using ajaxSetup)\n          // For same-domain requests, won't change header if already provided.\n          if (!options.crossDomain && !headers[\"X-Requested-With\"]) {\n            headers[\"X-Requested-With\"] = \"XMLHttpRequest\";\n          }\n\n          // Set headers\n          for (i in headers) {\n            xhr.setRequestHeader(i, headers[i]);\n          }\n\n          // Callback\n          _callback = function callback(type) {\n            return function () {\n              if (_callback) {\n                _callback = errorCallback = xhr.onload = xhr.onerror = xhr.onabort = xhr.ontimeout = xhr.onreadystatechange = null;\n                if (type === \"abort\") {\n                  xhr.abort();\n                } else if (type === \"error\") {\n                  // Support: IE <=9 only\n                  // On a manual native abort, IE9 throws\n                  // errors on any property access that is not readyState\n                  if (typeof xhr.status !== \"number\") {\n                    complete(0, \"error\");\n                  } else {\n                    complete(\n                    // File: protocol always yields status 0; see trac-8605, trac-14207\n                    xhr.status, xhr.statusText);\n                  }\n                } else {\n                  complete(xhrSuccessStatus[xhr.status] || xhr.status, xhr.statusText,\n                  // Support: IE <=9 only\n                  // IE9 has no XHR2 but throws on binary (trac-11426)\n                  // For XHR2 non-text, let the caller handle it (gh-2498)\n                  (xhr.responseType || \"text\") !== \"text\" || typeof xhr.responseText !== \"string\" ? {\n                    binary: xhr.response\n                  } : {\n                    text: xhr.responseText\n                  }, xhr.getAllResponseHeaders());\n                }\n              }\n            };\n          };\n\n          // Listen to events\n          xhr.onload = _callback();\n          errorCallback = xhr.onerror = xhr.ontimeout = _callback(\"error\");\n\n          // Support: IE 9 only\n          // Use onreadystatechange to replace onabort\n          // to handle uncaught aborts\n          if (xhr.onabort !== undefined) {\n            xhr.onabort = errorCallback;\n          } else {\n            xhr.onreadystatechange = function () {\n              // Check readyState before timeout as it changes\n              if (xhr.readyState === 4) {\n                // Allow onerror to be called first,\n                // but that will not handle a native abort\n                // Also, save errorCallback to a variable\n                // as xhr.onerror cannot be accessed\n                window.setTimeout(function () {\n                  if (_callback) {\n                    errorCallback();\n                  }\n                });\n              }\n            };\n          }\n\n          // Create the abort callback\n          _callback = _callback(\"abort\");\n          try {\n            // Do send the request (this may raise an exception)\n            xhr.send(options.hasContent && options.data || null);\n          } catch (e) {\n            // trac-14683: Only rethrow if this hasn't been notified as an error yet\n            if (_callback) {\n              throw e;\n            }\n          }\n        },\n        abort: function abort() {\n          if (_callback) {\n            _callback();\n          }\n        }\n      };\n    }\n  });\n\n  // Prevent auto-execution of scripts when no explicit dataType was provided (See gh-2432)\n  jQuery.ajaxPrefilter(function (s) {\n    if (s.crossDomain) {\n      s.contents.script = false;\n    }\n  });\n\n  // Install script dataType\n  jQuery.ajaxSetup({\n    accepts: {\n      script: \"text/javascript, application/javascript, \" + \"application/ecmascript, application/x-ecmascript\"\n    },\n    contents: {\n      script: /\\b(?:java|ecma)script\\b/\n    },\n    converters: {\n      \"text script\": function textScript(text) {\n        jQuery.globalEval(text);\n        return text;\n      }\n    }\n  });\n\n  // Handle cache's special case and crossDomain\n  jQuery.ajaxPrefilter(\"script\", function (s) {\n    if (s.cache === undefined) {\n      s.cache = false;\n    }\n    if (s.crossDomain) {\n      s.type = \"GET\";\n    }\n  });\n\n  // Bind script tag hack transport\n  jQuery.ajaxTransport(\"script\", function (s) {\n    // This transport only deals with cross domain or forced-by-attrs requests\n    if (s.crossDomain || s.scriptAttrs) {\n      var script, _callback2;\n      return {\n        send: function send(_, complete) {\n          script = jQuery(\"<script>\").attr(s.scriptAttrs || {}).prop({\n            charset: s.scriptCharset,\n            src: s.url\n          }).on(\"load error\", _callback2 = function callback(evt) {\n            script.remove();\n            _callback2 = null;\n            if (evt) {\n              complete(evt.type === \"error\" ? 404 : 200, evt.type);\n            }\n          });\n\n          // Use native DOM manipulation to avoid our domManip AJAX trickery\n          document.head.appendChild(script[0]);\n        },\n        abort: function abort() {\n          if (_callback2) {\n            _callback2();\n          }\n        }\n      };\n    }\n  });\n  var oldCallbacks = [],\n    rjsonp = /(=)\\?(?=&|$)|\\?\\?/;\n\n  // Default jsonp settings\n  jQuery.ajaxSetup({\n    jsonp: \"callback\",\n    jsonpCallback: function jsonpCallback() {\n      var callback = oldCallbacks.pop() || jQuery.expando + \"_\" + nonce.guid++;\n      this[callback] = true;\n      return callback;\n    }\n  });\n\n  // Detect, normalize options and install callbacks for jsonp requests\n  jQuery.ajaxPrefilter(\"json jsonp\", function (s, originalSettings, jqXHR) {\n    var callbackName,\n      overwritten,\n      responseContainer,\n      jsonProp = s.jsonp !== false && (rjsonp.test(s.url) ? \"url\" : typeof s.data === \"string\" && (s.contentType || \"\").indexOf(\"application/x-www-form-urlencoded\") === 0 && rjsonp.test(s.data) && \"data\");\n\n    // Handle iff the expected data type is \"jsonp\" or we have a parameter to set\n    if (jsonProp || s.dataTypes[0] === \"jsonp\") {\n      // Get callback name, remembering preexisting value associated with it\n      callbackName = s.jsonpCallback = isFunction(s.jsonpCallback) ? s.jsonpCallback() : s.jsonpCallback;\n\n      // Insert callback into url or form data\n      if (jsonProp) {\n        s[jsonProp] = s[jsonProp].replace(rjsonp, \"$1\" + callbackName);\n      } else if (s.jsonp !== false) {\n        s.url += (rquery.test(s.url) ? \"&\" : \"?\") + s.jsonp + \"=\" + callbackName;\n      }\n\n      // Use data converter to retrieve json after script execution\n      s.converters[\"script json\"] = function () {\n        if (!responseContainer) {\n          jQuery.error(callbackName + \" was not called\");\n        }\n        return responseContainer[0];\n      };\n\n      // Force json dataType\n      s.dataTypes[0] = \"json\";\n\n      // Install callback\n      overwritten = window[callbackName];\n      window[callbackName] = function () {\n        responseContainer = arguments;\n      };\n\n      // Clean-up function (fires after converters)\n      jqXHR.always(function () {\n        // If previous value didn't exist - remove it\n        if (overwritten === undefined) {\n          jQuery(window).removeProp(callbackName);\n\n          // Otherwise restore preexisting value\n        } else {\n          window[callbackName] = overwritten;\n        }\n\n        // Save back as free\n        if (s[callbackName]) {\n          // Make sure that re-using the options doesn't screw things around\n          s.jsonpCallback = originalSettings.jsonpCallback;\n\n          // Save the callback name for future use\n          oldCallbacks.push(callbackName);\n        }\n\n        // Call if it was a function and we have a response\n        if (responseContainer && isFunction(overwritten)) {\n          overwritten(responseContainer[0]);\n        }\n        responseContainer = overwritten = undefined;\n      });\n\n      // Delegate to script\n      return \"script\";\n    }\n  });\n\n  // Support: Safari 8 only\n  // In Safari 8 documents created via document.implementation.createHTMLDocument\n  // collapse sibling forms: the second one becomes a child of the first one.\n  // Because of that, this security measure has to be disabled in Safari 8.\n  // https://bugs.webkit.org/show_bug.cgi?id=137337\n  support.createHTMLDocument = function () {\n    var body = document.implementation.createHTMLDocument(\"\").body;\n    body.innerHTML = \"<form></form><form></form>\";\n    return body.childNodes.length === 2;\n  }();\n\n  // Argument \"data\" should be string of html\n  // context (optional): If specified, the fragment will be created in this context,\n  // defaults to document\n  // keepScripts (optional): If true, will include scripts passed in the html string\n  jQuery.parseHTML = function (data, context, keepScripts) {\n    if (typeof data !== \"string\") {\n      return [];\n    }\n    if (typeof context === \"boolean\") {\n      keepScripts = context;\n      context = false;\n    }\n    var base, parsed, scripts;\n    if (!context) {\n      // Stop scripts or inline event handlers from being executed immediately\n      // by using document.implementation\n      if (support.createHTMLDocument) {\n        context = document.implementation.createHTMLDocument(\"\");\n\n        // Set the base href for the created document\n        // so any parsed elements with URLs\n        // are based on the document's URL (gh-2965)\n        base = context.createElement(\"base\");\n        base.href = document.location.href;\n        context.head.appendChild(base);\n      } else {\n        context = document;\n      }\n    }\n    parsed = rsingleTag.exec(data);\n    scripts = !keepScripts && [];\n\n    // Single tag\n    if (parsed) {\n      return [context.createElement(parsed[1])];\n    }\n    parsed = buildFragment([data], context, scripts);\n    if (scripts && scripts.length) {\n      jQuery(scripts).remove();\n    }\n    return jQuery.merge([], parsed.childNodes);\n  };\n\n  /**\n   * Load a url into a page\n   */\n  jQuery.fn.load = function (url, params, callback) {\n    var selector,\n      type,\n      response,\n      self = this,\n      off = url.indexOf(\" \");\n    if (off > -1) {\n      selector = stripAndCollapse(url.slice(off));\n      url = url.slice(0, off);\n    }\n\n    // If it's a function\n    if (isFunction(params)) {\n      // We assume that it's the callback\n      callback = params;\n      params = undefined;\n\n      // Otherwise, build a param string\n    } else if (params && _typeof(params) === \"object\") {\n      type = \"POST\";\n    }\n\n    // If we have elements to modify, make the request\n    if (self.length > 0) {\n      jQuery.ajax({\n        url: url,\n        // If \"type\" variable is undefined, then \"GET\" method will be used.\n        // Make value of this field explicit since\n        // user can override it through ajaxSetup method\n        type: type || \"GET\",\n        dataType: \"html\",\n        data: params\n      }).done(function (responseText) {\n        // Save response for use in complete callback\n        response = arguments;\n        self.html(selector ?\n        // If a selector was specified, locate the right elements in a dummy div\n        // Exclude scripts to avoid IE 'Permission Denied' errors\n        jQuery(\"<div>\").append(jQuery.parseHTML(responseText)).find(selector) :\n        // Otherwise use the full result\n        responseText);\n\n        // If the request succeeds, this function gets \"data\", \"status\", \"jqXHR\"\n        // but they are ignored because response was set above.\n        // If it fails, this function gets \"jqXHR\", \"status\", \"error\"\n      }).always(callback && function (jqXHR, status) {\n        self.each(function () {\n          callback.apply(this, response || [jqXHR.responseText, status, jqXHR]);\n        });\n      });\n    }\n    return this;\n  };\n  jQuery.expr.pseudos.animated = function (elem) {\n    return jQuery.grep(jQuery.timers, function (fn) {\n      return elem === fn.elem;\n    }).length;\n  };\n  jQuery.offset = {\n    setOffset: function setOffset(elem, options, i) {\n      var curPosition,\n        curLeft,\n        curCSSTop,\n        curTop,\n        curOffset,\n        curCSSLeft,\n        calculatePosition,\n        position = jQuery.css(elem, \"position\"),\n        curElem = jQuery(elem),\n        props = {};\n\n      // Set position first, in-case top/left are set even on static elem\n      if (position === \"static\") {\n        elem.style.position = \"relative\";\n      }\n      curOffset = curElem.offset();\n      curCSSTop = jQuery.css(elem, \"top\");\n      curCSSLeft = jQuery.css(elem, \"left\");\n      calculatePosition = (position === \"absolute\" || position === \"fixed\") && (curCSSTop + curCSSLeft).indexOf(\"auto\") > -1;\n\n      // Need to be able to calculate position if either\n      // top or left is auto and position is either absolute or fixed\n      if (calculatePosition) {\n        curPosition = curElem.position();\n        curTop = curPosition.top;\n        curLeft = curPosition.left;\n      } else {\n        curTop = parseFloat(curCSSTop) || 0;\n        curLeft = parseFloat(curCSSLeft) || 0;\n      }\n      if (isFunction(options)) {\n        // Use jQuery.extend here to allow modification of coordinates argument (gh-1848)\n        options = options.call(elem, i, jQuery.extend({}, curOffset));\n      }\n      if (options.top != null) {\n        props.top = options.top - curOffset.top + curTop;\n      }\n      if (options.left != null) {\n        props.left = options.left - curOffset.left + curLeft;\n      }\n      if (\"using\" in options) {\n        options.using.call(elem, props);\n      } else {\n        curElem.css(props);\n      }\n    }\n  };\n  jQuery.fn.extend({\n    // offset() relates an element's border box to the document origin\n    offset: function offset(options) {\n      // Preserve chaining for setter\n      if (arguments.length) {\n        return options === undefined ? this : this.each(function (i) {\n          jQuery.offset.setOffset(this, options, i);\n        });\n      }\n      var rect,\n        win,\n        elem = this[0];\n      if (!elem) {\n        return;\n      }\n\n      // Return zeros for disconnected and hidden (display: none) elements (gh-2310)\n      // Support: IE <=11 only\n      // Running getBoundingClientRect on a\n      // disconnected node in IE throws an error\n      if (!elem.getClientRects().length) {\n        return {\n          top: 0,\n          left: 0\n        };\n      }\n\n      // Get document-relative position by adding viewport scroll to viewport-relative gBCR\n      rect = elem.getBoundingClientRect();\n      win = elem.ownerDocument.defaultView;\n      return {\n        top: rect.top + win.pageYOffset,\n        left: rect.left + win.pageXOffset\n      };\n    },\n    // position() relates an element's margin box to its offset parent's padding box\n    // This corresponds to the behavior of CSS absolute positioning\n    position: function position() {\n      if (!this[0]) {\n        return;\n      }\n      var offsetParent,\n        offset,\n        doc,\n        elem = this[0],\n        parentOffset = {\n          top: 0,\n          left: 0\n        };\n\n      // position:fixed elements are offset from the viewport, which itself always has zero offset\n      if (jQuery.css(elem, \"position\") === \"fixed\") {\n        // Assume position:fixed implies availability of getBoundingClientRect\n        offset = elem.getBoundingClientRect();\n      } else {\n        offset = this.offset();\n\n        // Account for the *real* offset parent, which can be the document or its root element\n        // when a statically positioned element is identified\n        doc = elem.ownerDocument;\n        offsetParent = elem.offsetParent || doc.documentElement;\n        while (offsetParent && (offsetParent === doc.body || offsetParent === doc.documentElement) && jQuery.css(offsetParent, \"position\") === \"static\") {\n          offsetParent = offsetParent.parentNode;\n        }\n        if (offsetParent && offsetParent !== elem && offsetParent.nodeType === 1) {\n          // Incorporate borders into its offset, since they are outside its content origin\n          parentOffset = jQuery(offsetParent).offset();\n          parentOffset.top += jQuery.css(offsetParent, \"borderTopWidth\", true);\n          parentOffset.left += jQuery.css(offsetParent, \"borderLeftWidth\", true);\n        }\n      }\n\n      // Subtract parent offsets and element margins\n      return {\n        top: offset.top - parentOffset.top - jQuery.css(elem, \"marginTop\", true),\n        left: offset.left - parentOffset.left - jQuery.css(elem, \"marginLeft\", true)\n      };\n    },\n    // This method will return documentElement in the following cases:\n    // 1) For the element inside the iframe without offsetParent, this method will return\n    //    documentElement of the parent window\n    // 2) For the hidden or detached element\n    // 3) For body or html element, i.e. in case of the html node - it will return itself\n    //\n    // but those exceptions were never presented as a real life use-cases\n    // and might be considered as more preferable results.\n    //\n    // This logic, however, is not guaranteed and can change at any point in the future\n    offsetParent: function offsetParent() {\n      return this.map(function () {\n        var offsetParent = this.offsetParent;\n        while (offsetParent && jQuery.css(offsetParent, \"position\") === \"static\") {\n          offsetParent = offsetParent.offsetParent;\n        }\n        return offsetParent || documentElement;\n      });\n    }\n  });\n\n  // Create scrollLeft and scrollTop methods\n  jQuery.each({\n    scrollLeft: \"pageXOffset\",\n    scrollTop: \"pageYOffset\"\n  }, function (method, prop) {\n    var top = \"pageYOffset\" === prop;\n    jQuery.fn[method] = function (val) {\n      return access(this, function (elem, method, val) {\n        // Coalesce documents and windows\n        var win;\n        if (isWindow(elem)) {\n          win = elem;\n        } else if (elem.nodeType === 9) {\n          win = elem.defaultView;\n        }\n        if (val === undefined) {\n          return win ? win[prop] : elem[method];\n        }\n        if (win) {\n          win.scrollTo(!top ? val : win.pageXOffset, top ? val : win.pageYOffset);\n        } else {\n          elem[method] = val;\n        }\n      }, method, val, arguments.length);\n    };\n  });\n\n  // Support: Safari <=7 - 9.1, Chrome <=37 - 49\n  // Add the top/left cssHooks using jQuery.fn.position\n  // Webkit bug: https://bugs.webkit.org/show_bug.cgi?id=29084\n  // Blink bug: https://bugs.chromium.org/p/chromium/issues/detail?id=589347\n  // getComputedStyle returns percent when specified for top/left/bottom/right;\n  // rather than make the css module depend on the offset module, just check for it here\n  jQuery.each([\"top\", \"left\"], function (_i, prop) {\n    jQuery.cssHooks[prop] = addGetHookIf(support.pixelPosition, function (elem, computed) {\n      if (computed) {\n        computed = curCSS(elem, prop);\n\n        // If curCSS returns percentage, fallback to offset\n        return rnumnonpx.test(computed) ? jQuery(elem).position()[prop] + \"px\" : computed;\n      }\n    });\n  });\n\n  // Create innerHeight, innerWidth, height, width, outerHeight and outerWidth methods\n  jQuery.each({\n    Height: \"height\",\n    Width: \"width\"\n  }, function (name, type) {\n    jQuery.each({\n      padding: \"inner\" + name,\n      content: type,\n      \"\": \"outer\" + name\n    }, function (defaultExtra, funcName) {\n      // Margin is only for outerHeight, outerWidth\n      jQuery.fn[funcName] = function (margin, value) {\n        var chainable = arguments.length && (defaultExtra || typeof margin !== \"boolean\"),\n          extra = defaultExtra || (margin === true || value === true ? \"margin\" : \"border\");\n        return access(this, function (elem, type, value) {\n          var doc;\n          if (isWindow(elem)) {\n            // $( window ).outerWidth/Height return w/h including scrollbars (gh-1729)\n            return funcName.indexOf(\"outer\") === 0 ? elem[\"inner\" + name] : elem.document.documentElement[\"client\" + name];\n          }\n\n          // Get document width or height\n          if (elem.nodeType === 9) {\n            doc = elem.documentElement;\n\n            // Either scroll[Width/Height] or offset[Width/Height] or client[Width/Height],\n            // whichever is greatest\n            return Math.max(elem.body[\"scroll\" + name], doc[\"scroll\" + name], elem.body[\"offset\" + name], doc[\"offset\" + name], doc[\"client\" + name]);\n          }\n          return value === undefined ?\n          // Get width or height on the element, requesting but not forcing parseFloat\n          jQuery.css(elem, type, extra) :\n          // Set width or height on the element\n          jQuery.style(elem, type, value, extra);\n        }, type, chainable ? margin : undefined, chainable);\n      };\n    });\n  });\n  jQuery.each([\"ajaxStart\", \"ajaxStop\", \"ajaxComplete\", \"ajaxError\", \"ajaxSuccess\", \"ajaxSend\"], function (_i, type) {\n    jQuery.fn[type] = function (fn) {\n      return this.on(type, fn);\n    };\n  });\n  jQuery.fn.extend({\n    bind: function bind(types, data, fn) {\n      return this.on(types, null, data, fn);\n    },\n    unbind: function unbind(types, fn) {\n      return this.off(types, null, fn);\n    },\n    delegate: function delegate(selector, types, data, fn) {\n      return this.on(types, selector, data, fn);\n    },\n    undelegate: function undelegate(selector, types, fn) {\n      // ( namespace ) or ( selector, types [, fn] )\n      return arguments.length === 1 ? this.off(selector, \"**\") : this.off(types, selector || \"**\", fn);\n    },\n    hover: function hover(fnOver, fnOut) {\n      return this.on(\"mouseenter\", fnOver).on(\"mouseleave\", fnOut || fnOver);\n    }\n  });\n  jQuery.each((\"blur focus focusin focusout resize scroll click dblclick \" + \"mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave \" + \"change select submit keydown keypress keyup contextmenu\").split(\" \"), function (_i, name) {\n    // Handle event binding\n    jQuery.fn[name] = function (data, fn) {\n      return arguments.length > 0 ? this.on(name, null, data, fn) : this.trigger(name);\n    };\n  });\n\n  // Support: Android <=4.0 only\n  // Make sure we trim BOM and NBSP\n  // Require that the \"whitespace run\" starts from a non-whitespace\n  // to avoid O(N^2) behavior when the engine would try matching \"\\s+$\" at each space position.\n  var rtrim = /^[\\s\\uFEFF\\xA0]+|([^\\s\\uFEFF\\xA0])[\\s\\uFEFF\\xA0]+$/g;\n\n  // Bind a function to a context, optionally partially applying any\n  // arguments.\n  // jQuery.proxy is deprecated to promote standards (specifically Function#bind)\n  // However, it is not slated for removal any time soon\n  jQuery.proxy = function (fn, context) {\n    var tmp, args, proxy;\n    if (typeof context === \"string\") {\n      tmp = fn[context];\n      context = fn;\n      fn = tmp;\n    }\n\n    // Quick check to determine if target is callable, in the spec\n    // this throws a TypeError, but we will just return undefined.\n    if (!isFunction(fn)) {\n      return undefined;\n    }\n\n    // Simulated bind\n    args = _slice.call(arguments, 2);\n    proxy = function proxy() {\n      return fn.apply(context || this, args.concat(_slice.call(arguments)));\n    };\n\n    // Set the guid of unique handler to the same of original handler, so it can be removed\n    proxy.guid = fn.guid = fn.guid || jQuery.guid++;\n    return proxy;\n  };\n  jQuery.holdReady = function (hold) {\n    if (hold) {\n      jQuery.readyWait++;\n    } else {\n      jQuery.ready(true);\n    }\n  };\n  jQuery.isArray = Array.isArray;\n  jQuery.parseJSON = JSON.parse;\n  jQuery.nodeName = nodeName;\n  jQuery.isFunction = isFunction;\n  jQuery.isWindow = isWindow;\n  jQuery.camelCase = camelCase;\n  jQuery.type = toType;\n  jQuery.now = Date.now;\n  jQuery.isNumeric = function (obj) {\n    // As of jQuery 3.0, isNumeric is limited to\n    // strings and numbers (primitives or objects)\n    // that can be coerced to finite numbers (gh-2662)\n    var type = jQuery.type(obj);\n    return (type === \"number\" || type === \"string\") &&\n    // parseFloat NaNs numeric-cast false positives (\"\")\n    // ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n    // subtraction forces infinities to NaN\n    !isNaN(obj - parseFloat(obj));\n  };\n  jQuery.trim = function (text) {\n    return text == null ? \"\" : (text + \"\").replace(rtrim, \"$1\");\n  };\n\n  // Register as a named AMD module, since jQuery can be concatenated with other\n  // files that may use define, but not via a proper concatenation script that\n  // understands anonymous AMD modules. A named AMD is safest and most robust\n  // way to register. Lowercase jquery is used because AMD module names are\n  // derived from file names, and jQuery is normally delivered in a lowercase\n  // file name. Do this after creating the global so that if an AMD module wants\n  // to call noConflict to hide this version of jQuery, it will work.\n\n  // Note that for maximum portability, libraries that are not jQuery should\n  // declare themselves as anonymous modules, and avoid setting a global if an\n  // AMD loader is present. jQuery is a special case. For more information, see\n  // https://github.com/jrburke/requirejs/wiki/Updating-existing-libraries#wiki-anon\n\n  if (true) {\n    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = (function () {\n      return jQuery;\n    }).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n  }\n  var\n    // Map over jQuery in case of overwrite\n    _jQuery = window.jQuery,\n    // Map over the $ in case of overwrite\n    _$ = window.$;\n  jQuery.noConflict = function (deep) {\n    if (window.$ === jQuery) {\n      window.$ = _$;\n    }\n    if (deep && window.jQuery === jQuery) {\n      window.jQuery = _jQuery;\n    }\n    return jQuery;\n  };\n\n  // Expose jQuery and $ identifiers, even in AMD\n  // (trac-7102#comment:10, https://github.com/jquery/jquery/pull/557)\n  // and CommonJS for browser emulators (trac-13566)\n  if (typeof noGlobal === \"undefined\") {\n    window.jQuery = window.$ = jQuery;\n  }\n  return jQuery;\n});\n\n//# sourceURL=webpack://jakob1482.github.io/./node_modules/jquery/dist/jquery.js?");

/***/ }),

/***/ "./node_modules/masonry-layout/masonry.js":
/*!************************************************!*\
  !*** ./node_modules/masonry-layout/masonry.js ***!
  \************************************************/
/***/ ((module, exports, __webpack_require__) => {

eval("var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;function _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\n/*!\n * Masonry v4.2.2\n * Cascading grid layout library\n * https://masonry.desandro.com\n * MIT License\n * by David DeSandro\n */\n\n(function (window, factory) {\n  // universal module definition\n  /* jshint strict: false */ /*globals define, module, require */\n  if (true) {\n    // AMD\n    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! outlayer/outlayer */ \"./node_modules/outlayer/outlayer.js\"), __webpack_require__(/*! get-size/get-size */ \"./node_modules/get-size/get-size.js\")], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n  } else {}\n})(window, function factory(Outlayer, getSize) {\n  'use strict';\n\n  // -------------------------- masonryDefinition -------------------------- //\n\n  // create an Outlayer layout class\n  var Masonry = Outlayer.create('masonry');\n  // isFitWidth -> fitWidth\n  Masonry.compatOptions.fitWidth = 'isFitWidth';\n  var proto = Masonry.prototype;\n  proto._resetLayout = function () {\n    this.getSize();\n    this._getMeasurement('columnWidth', 'outerWidth');\n    this._getMeasurement('gutter', 'outerWidth');\n    this.measureColumns();\n\n    // reset column Y\n    this.colYs = [];\n    for (var i = 0; i < this.cols; i++) {\n      this.colYs.push(0);\n    }\n    this.maxY = 0;\n    this.horizontalColIndex = 0;\n  };\n  proto.measureColumns = function () {\n    this.getContainerWidth();\n    // if columnWidth is 0, default to outerWidth of first item\n    if (!this.columnWidth) {\n      var firstItem = this.items[0];\n      var firstItemElem = firstItem && firstItem.element;\n      // columnWidth fall back to item of first element\n      this.columnWidth = firstItemElem && getSize(firstItemElem).outerWidth ||\n      // if first elem has no width, default to size of container\n      this.containerWidth;\n    }\n    var columnWidth = this.columnWidth += this.gutter;\n\n    // calculate columns\n    var containerWidth = this.containerWidth + this.gutter;\n    var cols = containerWidth / columnWidth;\n    // fix rounding errors, typically with gutters\n    var excess = columnWidth - containerWidth % columnWidth;\n    // if overshoot is less than a pixel, round up, otherwise floor it\n    var mathMethod = excess && excess < 1 ? 'round' : 'floor';\n    cols = Math[mathMethod](cols);\n    this.cols = Math.max(cols, 1);\n  };\n  proto.getContainerWidth = function () {\n    // container is parent if fit width\n    var isFitWidth = this._getOption('fitWidth');\n    var container = isFitWidth ? this.element.parentNode : this.element;\n    // check that this.size and size are there\n    // IE8 triggers resize on body size change, so they might not be\n    var size = getSize(container);\n    this.containerWidth = size && size.innerWidth;\n  };\n  proto._getItemLayoutPosition = function (item) {\n    item.getSize();\n    // how many columns does this brick span\n    var remainder = item.size.outerWidth % this.columnWidth;\n    var mathMethod = remainder && remainder < 1 ? 'round' : 'ceil';\n    // round if off by 1 pixel, otherwise use ceil\n    var colSpan = Math[mathMethod](item.size.outerWidth / this.columnWidth);\n    colSpan = Math.min(colSpan, this.cols);\n    // use horizontal or top column position\n    var colPosMethod = this.options.horizontalOrder ? '_getHorizontalColPosition' : '_getTopColPosition';\n    var colPosition = this[colPosMethod](colSpan, item);\n    // position the brick\n    var position = {\n      x: this.columnWidth * colPosition.col,\n      y: colPosition.y\n    };\n    // apply setHeight to necessary columns\n    var setHeight = colPosition.y + item.size.outerHeight;\n    var setMax = colSpan + colPosition.col;\n    for (var i = colPosition.col; i < setMax; i++) {\n      this.colYs[i] = setHeight;\n    }\n    return position;\n  };\n  proto._getTopColPosition = function (colSpan) {\n    var colGroup = this._getTopColGroup(colSpan);\n    // get the minimum Y value from the columns\n    var minimumY = Math.min.apply(Math, colGroup);\n    return {\n      col: colGroup.indexOf(minimumY),\n      y: minimumY\n    };\n  };\n\n  /**\n   * @param {Number} colSpan - number of columns the element spans\n   * @returns {Array} colGroup\n   */\n  proto._getTopColGroup = function (colSpan) {\n    if (colSpan < 2) {\n      // if brick spans only one column, use all the column Ys\n      return this.colYs;\n    }\n    var colGroup = [];\n    // how many different places could this brick fit horizontally\n    var groupCount = this.cols + 1 - colSpan;\n    // for each group potential horizontal position\n    for (var i = 0; i < groupCount; i++) {\n      colGroup[i] = this._getColGroupY(i, colSpan);\n    }\n    return colGroup;\n  };\n  proto._getColGroupY = function (col, colSpan) {\n    if (colSpan < 2) {\n      return this.colYs[col];\n    }\n    // make an array of colY values for that one group\n    var groupColYs = this.colYs.slice(col, col + colSpan);\n    // and get the max value of the array\n    return Math.max.apply(Math, groupColYs);\n  };\n\n  // get column position based on horizontal index. #873\n  proto._getHorizontalColPosition = function (colSpan, item) {\n    var col = this.horizontalColIndex % this.cols;\n    var isOver = colSpan > 1 && col + colSpan > this.cols;\n    // shift to next row if item can't fit on current row\n    col = isOver ? 0 : col;\n    // don't let zero-size items take up space\n    var hasSize = item.size.outerWidth && item.size.outerHeight;\n    this.horizontalColIndex = hasSize ? col + colSpan : this.horizontalColIndex;\n    return {\n      col: col,\n      y: this._getColGroupY(col, colSpan)\n    };\n  };\n  proto._manageStamp = function (stamp) {\n    var stampSize = getSize(stamp);\n    var offset = this._getElementOffset(stamp);\n    // get the columns that this stamp affects\n    var isOriginLeft = this._getOption('originLeft');\n    var firstX = isOriginLeft ? offset.left : offset.right;\n    var lastX = firstX + stampSize.outerWidth;\n    var firstCol = Math.floor(firstX / this.columnWidth);\n    firstCol = Math.max(0, firstCol);\n    var lastCol = Math.floor(lastX / this.columnWidth);\n    // lastCol should not go over if multiple of columnWidth #425\n    lastCol -= lastX % this.columnWidth ? 0 : 1;\n    lastCol = Math.min(this.cols - 1, lastCol);\n    // set colYs to bottom of the stamp\n\n    var isOriginTop = this._getOption('originTop');\n    var stampMaxY = (isOriginTop ? offset.top : offset.bottom) + stampSize.outerHeight;\n    for (var i = firstCol; i <= lastCol; i++) {\n      this.colYs[i] = Math.max(stampMaxY, this.colYs[i]);\n    }\n  };\n  proto._getContainerSize = function () {\n    this.maxY = Math.max.apply(Math, this.colYs);\n    var size = {\n      height: this.maxY\n    };\n    if (this._getOption('fitWidth')) {\n      size.width = this._getContainerFitWidth();\n    }\n    return size;\n  };\n  proto._getContainerFitWidth = function () {\n    var unusedCols = 0;\n    // count unused columns\n    var i = this.cols;\n    while (--i) {\n      if (this.colYs[i] !== 0) {\n        break;\n      }\n      unusedCols++;\n    }\n    // fit container to columns that have been used\n    return (this.cols - unusedCols) * this.columnWidth - this.gutter;\n  };\n  proto.needsResizeLayout = function () {\n    var previousWidth = this.containerWidth;\n    this.getContainerWidth();\n    return previousWidth != this.containerWidth;\n  };\n  return Masonry;\n});\n\n//# sourceURL=webpack://jakob1482.github.io/./node_modules/masonry-layout/masonry.js?");

/***/ }),

/***/ "./node_modules/outlayer/item.js":
/*!***************************************!*\
  !*** ./node_modules/outlayer/item.js ***!
  \***************************************/
/***/ ((module, exports, __webpack_require__) => {

eval("var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;function _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\n/**\n * Outlayer Item\n */\n\n(function (window, factory) {\n  // universal module definition\n  /* jshint strict: false */ /* globals define, module, require */\n  if (true) {\n    // AMD - RequireJS\n    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! ev-emitter/ev-emitter */ \"./node_modules/ev-emitter/ev-emitter.js\"), __webpack_require__(/*! get-size/get-size */ \"./node_modules/get-size/get-size.js\")], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n  } else {}\n})(window, function factory(EvEmitter, getSize) {\n  'use strict';\n\n  // ----- helpers ----- //\n  function isEmptyObj(obj) {\n    for (var prop in obj) {\n      return false;\n    }\n    prop = null;\n    return true;\n  }\n\n  // -------------------------- CSS3 support -------------------------- //\n\n  var docElemStyle = document.documentElement.style;\n  var transitionProperty = typeof docElemStyle.transition == 'string' ? 'transition' : 'WebkitTransition';\n  var transformProperty = typeof docElemStyle.transform == 'string' ? 'transform' : 'WebkitTransform';\n  var transitionEndEvent = {\n    WebkitTransition: 'webkitTransitionEnd',\n    transition: 'transitionend'\n  }[transitionProperty];\n\n  // cache all vendor properties that could have vendor prefix\n  var vendorProperties = {\n    transform: transformProperty,\n    transition: transitionProperty,\n    transitionDuration: transitionProperty + 'Duration',\n    transitionProperty: transitionProperty + 'Property',\n    transitionDelay: transitionProperty + 'Delay'\n  };\n\n  // -------------------------- Item -------------------------- //\n\n  function Item(element, layout) {\n    if (!element) {\n      return;\n    }\n    this.element = element;\n    // parent layout class, i.e. Masonry, Isotope, or Packery\n    this.layout = layout;\n    this.position = {\n      x: 0,\n      y: 0\n    };\n    this._create();\n  }\n\n  // inherit EvEmitter\n  var proto = Item.prototype = Object.create(EvEmitter.prototype);\n  proto.constructor = Item;\n  proto._create = function () {\n    // transition objects\n    this._transn = {\n      ingProperties: {},\n      clean: {},\n      onEnd: {}\n    };\n    this.css({\n      position: 'absolute'\n    });\n  };\n\n  // trigger specified handler for event type\n  proto.handleEvent = function (event) {\n    var method = 'on' + event.type;\n    if (this[method]) {\n      this[method](event);\n    }\n  };\n  proto.getSize = function () {\n    this.size = getSize(this.element);\n  };\n\n  /**\n   * apply CSS styles to element\n   * @param {Object} style\n   */\n  proto.css = function (style) {\n    var elemStyle = this.element.style;\n    for (var prop in style) {\n      // use vendor property if available\n      var supportedProp = vendorProperties[prop] || prop;\n      elemStyle[supportedProp] = style[prop];\n    }\n  };\n\n  // measure position, and sets it\n  proto.getPosition = function () {\n    var style = getComputedStyle(this.element);\n    var isOriginLeft = this.layout._getOption('originLeft');\n    var isOriginTop = this.layout._getOption('originTop');\n    var xValue = style[isOriginLeft ? 'left' : 'right'];\n    var yValue = style[isOriginTop ? 'top' : 'bottom'];\n    var x = parseFloat(xValue);\n    var y = parseFloat(yValue);\n    // convert percent to pixels\n    var layoutSize = this.layout.size;\n    if (xValue.indexOf('%') != -1) {\n      x = x / 100 * layoutSize.width;\n    }\n    if (yValue.indexOf('%') != -1) {\n      y = y / 100 * layoutSize.height;\n    }\n    // clean up 'auto' or other non-integer values\n    x = isNaN(x) ? 0 : x;\n    y = isNaN(y) ? 0 : y;\n    // remove padding from measurement\n    x -= isOriginLeft ? layoutSize.paddingLeft : layoutSize.paddingRight;\n    y -= isOriginTop ? layoutSize.paddingTop : layoutSize.paddingBottom;\n    this.position.x = x;\n    this.position.y = y;\n  };\n\n  // set settled position, apply padding\n  proto.layoutPosition = function () {\n    var layoutSize = this.layout.size;\n    var style = {};\n    var isOriginLeft = this.layout._getOption('originLeft');\n    var isOriginTop = this.layout._getOption('originTop');\n\n    // x\n    var xPadding = isOriginLeft ? 'paddingLeft' : 'paddingRight';\n    var xProperty = isOriginLeft ? 'left' : 'right';\n    var xResetProperty = isOriginLeft ? 'right' : 'left';\n    var x = this.position.x + layoutSize[xPadding];\n    // set in percentage or pixels\n    style[xProperty] = this.getXValue(x);\n    // reset other property\n    style[xResetProperty] = '';\n\n    // y\n    var yPadding = isOriginTop ? 'paddingTop' : 'paddingBottom';\n    var yProperty = isOriginTop ? 'top' : 'bottom';\n    var yResetProperty = isOriginTop ? 'bottom' : 'top';\n    var y = this.position.y + layoutSize[yPadding];\n    // set in percentage or pixels\n    style[yProperty] = this.getYValue(y);\n    // reset other property\n    style[yResetProperty] = '';\n    this.css(style);\n    this.emitEvent('layout', [this]);\n  };\n  proto.getXValue = function (x) {\n    var isHorizontal = this.layout._getOption('horizontal');\n    return this.layout.options.percentPosition && !isHorizontal ? x / this.layout.size.width * 100 + '%' : x + 'px';\n  };\n  proto.getYValue = function (y) {\n    var isHorizontal = this.layout._getOption('horizontal');\n    return this.layout.options.percentPosition && isHorizontal ? y / this.layout.size.height * 100 + '%' : y + 'px';\n  };\n  proto._transitionTo = function (x, y) {\n    this.getPosition();\n    // get current x & y from top/left\n    var curX = this.position.x;\n    var curY = this.position.y;\n    var didNotMove = x == this.position.x && y == this.position.y;\n\n    // save end position\n    this.setPosition(x, y);\n\n    // if did not move and not transitioning, just go to layout\n    if (didNotMove && !this.isTransitioning) {\n      this.layoutPosition();\n      return;\n    }\n    var transX = x - curX;\n    var transY = y - curY;\n    var transitionStyle = {};\n    transitionStyle.transform = this.getTranslate(transX, transY);\n    this.transition({\n      to: transitionStyle,\n      onTransitionEnd: {\n        transform: this.layoutPosition\n      },\n      isCleaning: true\n    });\n  };\n  proto.getTranslate = function (x, y) {\n    // flip cooridinates if origin on right or bottom\n    var isOriginLeft = this.layout._getOption('originLeft');\n    var isOriginTop = this.layout._getOption('originTop');\n    x = isOriginLeft ? x : -x;\n    y = isOriginTop ? y : -y;\n    return 'translate3d(' + x + 'px, ' + y + 'px, 0)';\n  };\n\n  // non transition + transform support\n  proto.goTo = function (x, y) {\n    this.setPosition(x, y);\n    this.layoutPosition();\n  };\n  proto.moveTo = proto._transitionTo;\n  proto.setPosition = function (x, y) {\n    this.position.x = parseFloat(x);\n    this.position.y = parseFloat(y);\n  };\n\n  // ----- transition ----- //\n\n  /**\n   * @param {Object} style - CSS\n   * @param {Function} onTransitionEnd\n   */\n\n  // non transition, just trigger callback\n  proto._nonTransition = function (args) {\n    this.css(args.to);\n    if (args.isCleaning) {\n      this._removeStyles(args.to);\n    }\n    for (var prop in args.onTransitionEnd) {\n      args.onTransitionEnd[prop].call(this);\n    }\n  };\n\n  /**\n   * proper transition\n   * @param {Object} args - arguments\n   *   @param {Object} to - style to transition to\n   *   @param {Object} from - style to start transition from\n   *   @param {Boolean} isCleaning - removes transition styles after transition\n   *   @param {Function} onTransitionEnd - callback\n   */\n  proto.transition = function (args) {\n    // redirect to nonTransition if no transition duration\n    if (!parseFloat(this.layout.options.transitionDuration)) {\n      this._nonTransition(args);\n      return;\n    }\n    var _transition = this._transn;\n    // keep track of onTransitionEnd callback by css property\n    for (var prop in args.onTransitionEnd) {\n      _transition.onEnd[prop] = args.onTransitionEnd[prop];\n    }\n    // keep track of properties that are transitioning\n    for (prop in args.to) {\n      _transition.ingProperties[prop] = true;\n      // keep track of properties to clean up when transition is done\n      if (args.isCleaning) {\n        _transition.clean[prop] = true;\n      }\n    }\n\n    // set from styles\n    if (args.from) {\n      this.css(args.from);\n      // force redraw. http://blog.alexmaccaw.com/css-transitions\n      var h = this.element.offsetHeight;\n      // hack for JSHint to hush about unused var\n      h = null;\n    }\n    // enable transition\n    this.enableTransition(args.to);\n    // set styles that are transitioning\n    this.css(args.to);\n    this.isTransitioning = true;\n  };\n\n  // dash before all cap letters, including first for\n  // WebkitTransform => -webkit-transform\n  function toDashedAll(str) {\n    return str.replace(/([A-Z])/g, function ($1) {\n      return '-' + $1.toLowerCase();\n    });\n  }\n  var transitionProps = 'opacity,' + toDashedAll(transformProperty);\n  proto.enableTransition = function /* style */\n  () {\n    // HACK changing transitionProperty during a transition\n    // will cause transition to jump\n    if (this.isTransitioning) {\n      return;\n    }\n\n    // make `transition: foo, bar, baz` from style object\n    // HACK un-comment this when enableTransition can work\n    // while a transition is happening\n    // var transitionValues = [];\n    // for ( var prop in style ) {\n    //   // dash-ify camelCased properties like WebkitTransition\n    //   prop = vendorProperties[ prop ] || prop;\n    //   transitionValues.push( toDashedAll( prop ) );\n    // }\n    // munge number to millisecond, to match stagger\n    var duration = this.layout.options.transitionDuration;\n    duration = typeof duration == 'number' ? duration + 'ms' : duration;\n    // enable transition styles\n    this.css({\n      transitionProperty: transitionProps,\n      transitionDuration: duration,\n      transitionDelay: this.staggerDelay || 0\n    });\n    // listen for transition end event\n    this.element.addEventListener(transitionEndEvent, this, false);\n  };\n\n  // ----- events ----- //\n\n  proto.onwebkitTransitionEnd = function (event) {\n    this.ontransitionend(event);\n  };\n  proto.onotransitionend = function (event) {\n    this.ontransitionend(event);\n  };\n\n  // properties that I munge to make my life easier\n  var dashedVendorProperties = {\n    '-webkit-transform': 'transform'\n  };\n  proto.ontransitionend = function (event) {\n    // disregard bubbled events from children\n    if (event.target !== this.element) {\n      return;\n    }\n    var _transition = this._transn;\n    // get property name of transitioned property, convert to prefix-free\n    var propertyName = dashedVendorProperties[event.propertyName] || event.propertyName;\n\n    // remove property that has completed transitioning\n    delete _transition.ingProperties[propertyName];\n    // check if any properties are still transitioning\n    if (isEmptyObj(_transition.ingProperties)) {\n      // all properties have completed transitioning\n      this.disableTransition();\n    }\n    // clean style\n    if (propertyName in _transition.clean) {\n      // clean up style\n      this.element.style[event.propertyName] = '';\n      delete _transition.clean[propertyName];\n    }\n    // trigger onTransitionEnd callback\n    if (propertyName in _transition.onEnd) {\n      var onTransitionEnd = _transition.onEnd[propertyName];\n      onTransitionEnd.call(this);\n      delete _transition.onEnd[propertyName];\n    }\n    this.emitEvent('transitionEnd', [this]);\n  };\n  proto.disableTransition = function () {\n    this.removeTransitionStyles();\n    this.element.removeEventListener(transitionEndEvent, this, false);\n    this.isTransitioning = false;\n  };\n\n  /**\n   * removes style property from element\n   * @param {Object} style\n  **/\n  proto._removeStyles = function (style) {\n    // clean up transition styles\n    var cleanStyle = {};\n    for (var prop in style) {\n      cleanStyle[prop] = '';\n    }\n    this.css(cleanStyle);\n  };\n  var cleanTransitionStyle = {\n    transitionProperty: '',\n    transitionDuration: '',\n    transitionDelay: ''\n  };\n  proto.removeTransitionStyles = function () {\n    // remove transition\n    this.css(cleanTransitionStyle);\n  };\n\n  // ----- stagger ----- //\n\n  proto.stagger = function (delay) {\n    delay = isNaN(delay) ? 0 : delay;\n    this.staggerDelay = delay + 'ms';\n  };\n\n  // ----- show/hide/remove ----- //\n\n  // remove element from DOM\n  proto.removeElem = function () {\n    this.element.parentNode.removeChild(this.element);\n    // remove display: none\n    this.css({\n      display: ''\n    });\n    this.emitEvent('remove', [this]);\n  };\n  proto.remove = function () {\n    // just remove element if no transition support or no transition\n    if (!transitionProperty || !parseFloat(this.layout.options.transitionDuration)) {\n      this.removeElem();\n      return;\n    }\n\n    // start transition\n    this.once('transitionEnd', function () {\n      this.removeElem();\n    });\n    this.hide();\n  };\n  proto.reveal = function () {\n    delete this.isHidden;\n    // remove display: none\n    this.css({\n      display: ''\n    });\n    var options = this.layout.options;\n    var onTransitionEnd = {};\n    var transitionEndProperty = this.getHideRevealTransitionEndProperty('visibleStyle');\n    onTransitionEnd[transitionEndProperty] = this.onRevealTransitionEnd;\n    this.transition({\n      from: options.hiddenStyle,\n      to: options.visibleStyle,\n      isCleaning: true,\n      onTransitionEnd: onTransitionEnd\n    });\n  };\n  proto.onRevealTransitionEnd = function () {\n    // check if still visible\n    // during transition, item may have been hidden\n    if (!this.isHidden) {\n      this.emitEvent('reveal');\n    }\n  };\n\n  /**\n   * get style property use for hide/reveal transition end\n   * @param {String} styleProperty - hiddenStyle/visibleStyle\n   * @returns {String}\n   */\n  proto.getHideRevealTransitionEndProperty = function (styleProperty) {\n    var optionStyle = this.layout.options[styleProperty];\n    // use opacity\n    if (optionStyle.opacity) {\n      return 'opacity';\n    }\n    // get first property\n    for (var prop in optionStyle) {\n      return prop;\n    }\n  };\n  proto.hide = function () {\n    // set flag\n    this.isHidden = true;\n    // remove display: none\n    this.css({\n      display: ''\n    });\n    var options = this.layout.options;\n    var onTransitionEnd = {};\n    var transitionEndProperty = this.getHideRevealTransitionEndProperty('hiddenStyle');\n    onTransitionEnd[transitionEndProperty] = this.onHideTransitionEnd;\n    this.transition({\n      from: options.visibleStyle,\n      to: options.hiddenStyle,\n      // keep hidden stuff hidden\n      isCleaning: true,\n      onTransitionEnd: onTransitionEnd\n    });\n  };\n  proto.onHideTransitionEnd = function () {\n    // check if still hidden\n    // during transition, item may have been un-hidden\n    if (this.isHidden) {\n      this.css({\n        display: 'none'\n      });\n      this.emitEvent('hide');\n    }\n  };\n  proto.destroy = function () {\n    this.css({\n      position: '',\n      left: '',\n      right: '',\n      top: '',\n      bottom: '',\n      transition: '',\n      transform: ''\n    });\n  };\n  return Item;\n});\n\n//# sourceURL=webpack://jakob1482.github.io/./node_modules/outlayer/item.js?");

/***/ }),

/***/ "./node_modules/outlayer/outlayer.js":
/*!*******************************************!*\
  !*** ./node_modules/outlayer/outlayer.js ***!
  \*******************************************/
/***/ ((module, exports, __webpack_require__) => {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;function _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\n/*!\n * Outlayer v2.1.1\n * the brains and guts of a layout library\n * MIT license\n */\n\n(function (window, factory) {\n  'use strict';\n\n  // universal module definition\n  /* jshint strict: false */ /* globals define, module, require */\n  if (true) {\n    // AMD - RequireJS\n    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! ev-emitter/ev-emitter */ \"./node_modules/ev-emitter/ev-emitter.js\"), __webpack_require__(/*! get-size/get-size */ \"./node_modules/get-size/get-size.js\"), __webpack_require__(/*! fizzy-ui-utils/utils */ \"./node_modules/fizzy-ui-utils/utils.js\"), __webpack_require__(/*! ./item */ \"./node_modules/outlayer/item.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function (EvEmitter, getSize, utils, Item) {\n      return factory(window, EvEmitter, getSize, utils, Item);\n    }).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n  } else {}\n})(window, function factory(window, EvEmitter, getSize, utils, Item) {\n  'use strict';\n\n  // ----- vars ----- //\n  var console = window.console;\n  var jQuery = window.jQuery;\n  var noop = function noop() {};\n\n  // -------------------------- Outlayer -------------------------- //\n\n  // globally unique identifiers\n  var GUID = 0;\n  // internal store of all Outlayer intances\n  var instances = {};\n\n  /**\n   * @param {Element, String} element\n   * @param {Object} options\n   * @constructor\n   */\n  function Outlayer(element, options) {\n    var queryElement = utils.getQueryElement(element);\n    if (!queryElement) {\n      if (console) {\n        console.error('Bad element for ' + this.constructor.namespace + ': ' + (queryElement || element));\n      }\n      return;\n    }\n    this.element = queryElement;\n    // add jQuery\n    if (jQuery) {\n      this.$element = jQuery(this.element);\n    }\n\n    // options\n    this.options = utils.extend({}, this.constructor.defaults);\n    this.option(options);\n\n    // add id for Outlayer.getFromElement\n    var id = ++GUID;\n    this.element.outlayerGUID = id; // expando\n    instances[id] = this; // associate via id\n\n    // kick it off\n    this._create();\n    var isInitLayout = this._getOption('initLayout');\n    if (isInitLayout) {\n      this.layout();\n    }\n  }\n\n  // settings are for internal use only\n  Outlayer.namespace = 'outlayer';\n  Outlayer.Item = Item;\n\n  // default options\n  Outlayer.defaults = {\n    containerStyle: {\n      position: 'relative'\n    },\n    initLayout: true,\n    originLeft: true,\n    originTop: true,\n    resize: true,\n    resizeContainer: true,\n    // item options\n    transitionDuration: '0.4s',\n    hiddenStyle: {\n      opacity: 0,\n      transform: 'scale(0.001)'\n    },\n    visibleStyle: {\n      opacity: 1,\n      transform: 'scale(1)'\n    }\n  };\n  var proto = Outlayer.prototype;\n  // inherit EvEmitter\n  utils.extend(proto, EvEmitter.prototype);\n\n  /**\n   * set options\n   * @param {Object} opts\n   */\n  proto.option = function (opts) {\n    utils.extend(this.options, opts);\n  };\n\n  /**\n   * get backwards compatible option value, check old name\n   */\n  proto._getOption = function (option) {\n    var oldOption = this.constructor.compatOptions[option];\n    return oldOption && this.options[oldOption] !== undefined ? this.options[oldOption] : this.options[option];\n  };\n  Outlayer.compatOptions = {\n    // currentName: oldName\n    initLayout: 'isInitLayout',\n    horizontal: 'isHorizontal',\n    layoutInstant: 'isLayoutInstant',\n    originLeft: 'isOriginLeft',\n    originTop: 'isOriginTop',\n    resize: 'isResizeBound',\n    resizeContainer: 'isResizingContainer'\n  };\n  proto._create = function () {\n    // get items from children\n    this.reloadItems();\n    // elements that affect layout, but are not laid out\n    this.stamps = [];\n    this.stamp(this.options.stamp);\n    // set container style\n    utils.extend(this.element.style, this.options.containerStyle);\n\n    // bind resize method\n    var canBindResize = this._getOption('resize');\n    if (canBindResize) {\n      this.bindResize();\n    }\n  };\n\n  // goes through all children again and gets bricks in proper order\n  proto.reloadItems = function () {\n    // collection of item elements\n    this.items = this._itemize(this.element.children);\n  };\n\n  /**\n   * turn elements into Outlayer.Items to be used in layout\n   * @param {Array or NodeList or HTMLElement} elems\n   * @returns {Array} items - collection of new Outlayer Items\n   */\n  proto._itemize = function (elems) {\n    var itemElems = this._filterFindItemElements(elems);\n    var Item = this.constructor.Item;\n\n    // create new Outlayer Items for collection\n    var items = [];\n    for (var i = 0; i < itemElems.length; i++) {\n      var elem = itemElems[i];\n      var item = new Item(elem, this);\n      items.push(item);\n    }\n    return items;\n  };\n\n  /**\n   * get item elements to be used in layout\n   * @param {Array or NodeList or HTMLElement} elems\n   * @returns {Array} items - item elements\n   */\n  proto._filterFindItemElements = function (elems) {\n    return utils.filterFindElements(elems, this.options.itemSelector);\n  };\n\n  /**\n   * getter method for getting item elements\n   * @returns {Array} elems - collection of item elements\n   */\n  proto.getItemElements = function () {\n    return this.items.map(function (item) {\n      return item.element;\n    });\n  };\n\n  // ----- init & layout ----- //\n\n  /**\n   * lays out all items\n   */\n  proto.layout = function () {\n    this._resetLayout();\n    this._manageStamps();\n\n    // don't animate first layout\n    var layoutInstant = this._getOption('layoutInstant');\n    var isInstant = layoutInstant !== undefined ? layoutInstant : !this._isLayoutInited;\n    this.layoutItems(this.items, isInstant);\n\n    // flag for initalized\n    this._isLayoutInited = true;\n  };\n\n  // _init is alias for layout\n  proto._init = proto.layout;\n\n  /**\n   * logic before any new layout\n   */\n  proto._resetLayout = function () {\n    this.getSize();\n  };\n  proto.getSize = function () {\n    this.size = getSize(this.element);\n  };\n\n  /**\n   * get measurement from option, for columnWidth, rowHeight, gutter\n   * if option is String -> get element from selector string, & get size of element\n   * if option is Element -> get size of element\n   * else use option as a number\n   *\n   * @param {String} measurement\n   * @param {String} size - width or height\n   * @private\n   */\n  proto._getMeasurement = function (measurement, size) {\n    var option = this.options[measurement];\n    var elem;\n    if (!option) {\n      // default to 0\n      this[measurement] = 0;\n    } else {\n      // use option as an element\n      if (typeof option == 'string') {\n        elem = this.element.querySelector(option);\n      } else if (option instanceof HTMLElement) {\n        elem = option;\n      }\n      // use size of element, if element\n      this[measurement] = elem ? getSize(elem)[size] : option;\n    }\n  };\n\n  /**\n   * layout a collection of item elements\n   * @api public\n   */\n  proto.layoutItems = function (items, isInstant) {\n    items = this._getItemsForLayout(items);\n    this._layoutItems(items, isInstant);\n    this._postLayout();\n  };\n\n  /**\n   * get the items to be laid out\n   * you may want to skip over some items\n   * @param {Array} items\n   * @returns {Array} items\n   */\n  proto._getItemsForLayout = function (items) {\n    return items.filter(function (item) {\n      return !item.isIgnored;\n    });\n  };\n\n  /**\n   * layout items\n   * @param {Array} items\n   * @param {Boolean} isInstant\n   */\n  proto._layoutItems = function (items, isInstant) {\n    this._emitCompleteOnItems('layout', items);\n    if (!items || !items.length) {\n      // no items, emit event with empty array\n      return;\n    }\n    var queue = [];\n    items.forEach(function (item) {\n      // get x/y object from method\n      var position = this._getItemLayoutPosition(item);\n      // enqueue\n      position.item = item;\n      position.isInstant = isInstant || item.isLayoutInstant;\n      queue.push(position);\n    }, this);\n    this._processLayoutQueue(queue);\n  };\n\n  /**\n   * get item layout position\n   * @param {Outlayer.Item} item\n   * @returns {Object} x and y position\n   */\n  proto._getItemLayoutPosition = function /* item */\n  () {\n    return {\n      x: 0,\n      y: 0\n    };\n  };\n\n  /**\n   * iterate over array and position each item\n   * Reason being - separating this logic prevents 'layout invalidation'\n   * thx @paul_irish\n   * @param {Array} queue\n   */\n  proto._processLayoutQueue = function (queue) {\n    this.updateStagger();\n    queue.forEach(function (obj, i) {\n      this._positionItem(obj.item, obj.x, obj.y, obj.isInstant, i);\n    }, this);\n  };\n\n  // set stagger from option in milliseconds number\n  proto.updateStagger = function () {\n    var stagger = this.options.stagger;\n    if (stagger === null || stagger === undefined) {\n      this.stagger = 0;\n      return;\n    }\n    this.stagger = getMilliseconds(stagger);\n    return this.stagger;\n  };\n\n  /**\n   * Sets position of item in DOM\n   * @param {Outlayer.Item} item\n   * @param {Number} x - horizontal position\n   * @param {Number} y - vertical position\n   * @param {Boolean} isInstant - disables transitions\n   */\n  proto._positionItem = function (item, x, y, isInstant, i) {\n    if (isInstant) {\n      // if not transition, just set CSS\n      item.goTo(x, y);\n    } else {\n      item.stagger(i * this.stagger);\n      item.moveTo(x, y);\n    }\n  };\n\n  /**\n   * Any logic you want to do after each layout,\n   * i.e. size the container\n   */\n  proto._postLayout = function () {\n    this.resizeContainer();\n  };\n  proto.resizeContainer = function () {\n    var isResizingContainer = this._getOption('resizeContainer');\n    if (!isResizingContainer) {\n      return;\n    }\n    var size = this._getContainerSize();\n    if (size) {\n      this._setContainerMeasure(size.width, true);\n      this._setContainerMeasure(size.height, false);\n    }\n  };\n\n  /**\n   * Sets width or height of container if returned\n   * @returns {Object} size\n   *   @param {Number} width\n   *   @param {Number} height\n   */\n  proto._getContainerSize = noop;\n\n  /**\n   * @param {Number} measure - size of width or height\n   * @param {Boolean} isWidth\n   */\n  proto._setContainerMeasure = function (measure, isWidth) {\n    if (measure === undefined) {\n      return;\n    }\n    var elemSize = this.size;\n    // add padding and border width if border box\n    if (elemSize.isBorderBox) {\n      measure += isWidth ? elemSize.paddingLeft + elemSize.paddingRight + elemSize.borderLeftWidth + elemSize.borderRightWidth : elemSize.paddingBottom + elemSize.paddingTop + elemSize.borderTopWidth + elemSize.borderBottomWidth;\n    }\n    measure = Math.max(measure, 0);\n    this.element.style[isWidth ? 'width' : 'height'] = measure + 'px';\n  };\n\n  /**\n   * emit eventComplete on a collection of items events\n   * @param {String} eventName\n   * @param {Array} items - Outlayer.Items\n   */\n  proto._emitCompleteOnItems = function (eventName, items) {\n    var _this = this;\n    function onComplete() {\n      _this.dispatchEvent(eventName + 'Complete', null, [items]);\n    }\n    var count = items.length;\n    if (!items || !count) {\n      onComplete();\n      return;\n    }\n    var doneCount = 0;\n    function tick() {\n      doneCount++;\n      if (doneCount == count) {\n        onComplete();\n      }\n    }\n\n    // bind callback\n    items.forEach(function (item) {\n      item.once(eventName, tick);\n    });\n  };\n\n  /**\n   * emits events via EvEmitter and jQuery events\n   * @param {String} type - name of event\n   * @param {Event} event - original event\n   * @param {Array} args - extra arguments\n   */\n  proto.dispatchEvent = function (type, event, args) {\n    // add original event to arguments\n    var emitArgs = event ? [event].concat(args) : args;\n    this.emitEvent(type, emitArgs);\n    if (jQuery) {\n      // set this.$element\n      this.$element = this.$element || jQuery(this.element);\n      if (event) {\n        // create jQuery event\n        var $event = jQuery.Event(event);\n        $event.type = type;\n        this.$element.trigger($event, args);\n      } else {\n        // just trigger with type if no event available\n        this.$element.trigger(type, args);\n      }\n    }\n  };\n\n  // -------------------------- ignore & stamps -------------------------- //\n\n  /**\n   * keep item in collection, but do not lay it out\n   * ignored items do not get skipped in layout\n   * @param {Element} elem\n   */\n  proto.ignore = function (elem) {\n    var item = this.getItem(elem);\n    if (item) {\n      item.isIgnored = true;\n    }\n  };\n\n  /**\n   * return item to layout collection\n   * @param {Element} elem\n   */\n  proto.unignore = function (elem) {\n    var item = this.getItem(elem);\n    if (item) {\n      delete item.isIgnored;\n    }\n  };\n\n  /**\n   * adds elements to stamps\n   * @param {NodeList, Array, Element, or String} elems\n   */\n  proto.stamp = function (elems) {\n    elems = this._find(elems);\n    if (!elems) {\n      return;\n    }\n    this.stamps = this.stamps.concat(elems);\n    // ignore\n    elems.forEach(this.ignore, this);\n  };\n\n  /**\n   * removes elements to stamps\n   * @param {NodeList, Array, or Element} elems\n   */\n  proto.unstamp = function (elems) {\n    elems = this._find(elems);\n    if (!elems) {\n      return;\n    }\n    elems.forEach(function (elem) {\n      // filter out removed stamp elements\n      utils.removeFrom(this.stamps, elem);\n      this.unignore(elem);\n    }, this);\n  };\n\n  /**\n   * finds child elements\n   * @param {NodeList, Array, Element, or String} elems\n   * @returns {Array} elems\n   */\n  proto._find = function (elems) {\n    if (!elems) {\n      return;\n    }\n    // if string, use argument as selector string\n    if (typeof elems == 'string') {\n      elems = this.element.querySelectorAll(elems);\n    }\n    elems = utils.makeArray(elems);\n    return elems;\n  };\n  proto._manageStamps = function () {\n    if (!this.stamps || !this.stamps.length) {\n      return;\n    }\n    this._getBoundingRect();\n    this.stamps.forEach(this._manageStamp, this);\n  };\n\n  // update boundingLeft / Top\n  proto._getBoundingRect = function () {\n    // get bounding rect for container element\n    var boundingRect = this.element.getBoundingClientRect();\n    var size = this.size;\n    this._boundingRect = {\n      left: boundingRect.left + size.paddingLeft + size.borderLeftWidth,\n      top: boundingRect.top + size.paddingTop + size.borderTopWidth,\n      right: boundingRect.right - (size.paddingRight + size.borderRightWidth),\n      bottom: boundingRect.bottom - (size.paddingBottom + size.borderBottomWidth)\n    };\n  };\n\n  /**\n   * @param {Element} stamp\n  **/\n  proto._manageStamp = noop;\n\n  /**\n   * get x/y position of element relative to container element\n   * @param {Element} elem\n   * @returns {Object} offset - has left, top, right, bottom\n   */\n  proto._getElementOffset = function (elem) {\n    var boundingRect = elem.getBoundingClientRect();\n    var thisRect = this._boundingRect;\n    var size = getSize(elem);\n    var offset = {\n      left: boundingRect.left - thisRect.left - size.marginLeft,\n      top: boundingRect.top - thisRect.top - size.marginTop,\n      right: thisRect.right - boundingRect.right - size.marginRight,\n      bottom: thisRect.bottom - boundingRect.bottom - size.marginBottom\n    };\n    return offset;\n  };\n\n  // -------------------------- resize -------------------------- //\n\n  // enable event handlers for listeners\n  // i.e. resize -> onresize\n  proto.handleEvent = utils.handleEvent;\n\n  /**\n   * Bind layout to window resizing\n   */\n  proto.bindResize = function () {\n    window.addEventListener('resize', this);\n    this.isResizeBound = true;\n  };\n\n  /**\n   * Unbind layout to window resizing\n   */\n  proto.unbindResize = function () {\n    window.removeEventListener('resize', this);\n    this.isResizeBound = false;\n  };\n  proto.onresize = function () {\n    this.resize();\n  };\n  utils.debounceMethod(Outlayer, 'onresize', 100);\n  proto.resize = function () {\n    // don't trigger if size did not change\n    // or if resize was unbound. See #9\n    if (!this.isResizeBound || !this.needsResizeLayout()) {\n      return;\n    }\n    this.layout();\n  };\n\n  /**\n   * check if layout is needed post layout\n   * @returns Boolean\n   */\n  proto.needsResizeLayout = function () {\n    var size = getSize(this.element);\n    // check that this.size and size are there\n    // IE8 triggers resize on body size change, so they might not be\n    var hasSizes = this.size && size;\n    return hasSizes && size.innerWidth !== this.size.innerWidth;\n  };\n\n  // -------------------------- methods -------------------------- //\n\n  /**\n   * add items to Outlayer instance\n   * @param {Array or NodeList or Element} elems\n   * @returns {Array} items - Outlayer.Items\n  **/\n  proto.addItems = function (elems) {\n    var items = this._itemize(elems);\n    // add items to collection\n    if (items.length) {\n      this.items = this.items.concat(items);\n    }\n    return items;\n  };\n\n  /**\n   * Layout newly-appended item elements\n   * @param {Array or NodeList or Element} elems\n   */\n  proto.appended = function (elems) {\n    var items = this.addItems(elems);\n    if (!items.length) {\n      return;\n    }\n    // layout and reveal just the new items\n    this.layoutItems(items, true);\n    this.reveal(items);\n  };\n\n  /**\n   * Layout prepended elements\n   * @param {Array or NodeList or Element} elems\n   */\n  proto.prepended = function (elems) {\n    var items = this._itemize(elems);\n    if (!items.length) {\n      return;\n    }\n    // add items to beginning of collection\n    var previousItems = this.items.slice(0);\n    this.items = items.concat(previousItems);\n    // start new layout\n    this._resetLayout();\n    this._manageStamps();\n    // layout new stuff without transition\n    this.layoutItems(items, true);\n    this.reveal(items);\n    // layout previous items\n    this.layoutItems(previousItems);\n  };\n\n  /**\n   * reveal a collection of items\n   * @param {Array of Outlayer.Items} items\n   */\n  proto.reveal = function (items) {\n    this._emitCompleteOnItems('reveal', items);\n    if (!items || !items.length) {\n      return;\n    }\n    var stagger = this.updateStagger();\n    items.forEach(function (item, i) {\n      item.stagger(i * stagger);\n      item.reveal();\n    });\n  };\n\n  /**\n   * hide a collection of items\n   * @param {Array of Outlayer.Items} items\n   */\n  proto.hide = function (items) {\n    this._emitCompleteOnItems('hide', items);\n    if (!items || !items.length) {\n      return;\n    }\n    var stagger = this.updateStagger();\n    items.forEach(function (item, i) {\n      item.stagger(i * stagger);\n      item.hide();\n    });\n  };\n\n  /**\n   * reveal item elements\n   * @param {Array}, {Element}, {NodeList} items\n   */\n  proto.revealItemElements = function (elems) {\n    var items = this.getItems(elems);\n    this.reveal(items);\n  };\n\n  /**\n   * hide item elements\n   * @param {Array}, {Element}, {NodeList} items\n   */\n  proto.hideItemElements = function (elems) {\n    var items = this.getItems(elems);\n    this.hide(items);\n  };\n\n  /**\n   * get Outlayer.Item, given an Element\n   * @param {Element} elem\n   * @param {Function} callback\n   * @returns {Outlayer.Item} item\n   */\n  proto.getItem = function (elem) {\n    // loop through items to get the one that matches\n    for (var i = 0; i < this.items.length; i++) {\n      var item = this.items[i];\n      if (item.element == elem) {\n        // return item\n        return item;\n      }\n    }\n  };\n\n  /**\n   * get collection of Outlayer.Items, given Elements\n   * @param {Array} elems\n   * @returns {Array} items - Outlayer.Items\n   */\n  proto.getItems = function (elems) {\n    elems = utils.makeArray(elems);\n    var items = [];\n    elems.forEach(function (elem) {\n      var item = this.getItem(elem);\n      if (item) {\n        items.push(item);\n      }\n    }, this);\n    return items;\n  };\n\n  /**\n   * remove element(s) from instance and DOM\n   * @param {Array or NodeList or Element} elems\n   */\n  proto.remove = function (elems) {\n    var removeItems = this.getItems(elems);\n    this._emitCompleteOnItems('remove', removeItems);\n\n    // bail if no items to remove\n    if (!removeItems || !removeItems.length) {\n      return;\n    }\n    removeItems.forEach(function (item) {\n      item.remove();\n      // remove item from collection\n      utils.removeFrom(this.items, item);\n    }, this);\n  };\n\n  // ----- destroy ----- //\n\n  // remove and disable Outlayer instance\n  proto.destroy = function () {\n    // clean up dynamic styles\n    var style = this.element.style;\n    style.height = '';\n    style.position = '';\n    style.width = '';\n    // destroy items\n    this.items.forEach(function (item) {\n      item.destroy();\n    });\n    this.unbindResize();\n    var id = this.element.outlayerGUID;\n    delete instances[id]; // remove reference to instance by id\n    delete this.element.outlayerGUID;\n    // remove data for jQuery\n    if (jQuery) {\n      jQuery.removeData(this.element, this.constructor.namespace);\n    }\n  };\n\n  // -------------------------- data -------------------------- //\n\n  /**\n   * get Outlayer instance from element\n   * @param {Element} elem\n   * @returns {Outlayer}\n   */\n  Outlayer.data = function (elem) {\n    elem = utils.getQueryElement(elem);\n    var id = elem && elem.outlayerGUID;\n    return id && instances[id];\n  };\n\n  // -------------------------- create Outlayer class -------------------------- //\n\n  /**\n   * create a layout class\n   * @param {String} namespace\n   */\n  Outlayer.create = function (namespace, options) {\n    // sub-class Outlayer\n    var Layout = subclass(Outlayer);\n    // apply new options and compatOptions\n    Layout.defaults = utils.extend({}, Outlayer.defaults);\n    utils.extend(Layout.defaults, options);\n    Layout.compatOptions = utils.extend({}, Outlayer.compatOptions);\n    Layout.namespace = namespace;\n    Layout.data = Outlayer.data;\n\n    // sub-class Item\n    Layout.Item = subclass(Item);\n\n    // -------------------------- declarative -------------------------- //\n\n    utils.htmlInit(Layout, namespace);\n\n    // -------------------------- jQuery bridge -------------------------- //\n\n    // make into jQuery plugin\n    if (jQuery && jQuery.bridget) {\n      jQuery.bridget(namespace, Layout);\n    }\n    return Layout;\n  };\n  function subclass(Parent) {\n    function SubClass() {\n      Parent.apply(this, arguments);\n    }\n    SubClass.prototype = Object.create(Parent.prototype);\n    SubClass.prototype.constructor = SubClass;\n    return SubClass;\n  }\n\n  // ----- helpers ----- //\n\n  // how many milliseconds are in each unit\n  var msUnits = {\n    ms: 1,\n    s: 1000\n  };\n\n  // munge time-like parameter into millisecond number\n  // '0.4s' -> 40\n  function getMilliseconds(time) {\n    if (typeof time == 'number') {\n      return time;\n    }\n    var matches = time.match(/(^\\d*\\.?\\d*)(\\w*)/);\n    var num = matches && matches[1];\n    var unit = matches && matches[2];\n    if (!num.length) {\n      return 0;\n    }\n    num = parseFloat(num);\n    var mult = msUnits[unit] || 1;\n    return num * mult;\n  }\n\n  // ----- fin ----- //\n\n  // back in global\n  Outlayer.Item = Item;\n  return Outlayer;\n});\n\n//# sourceURL=webpack://jakob1482.github.io/./node_modules/outlayer/outlayer.js?");

/***/ }),

/***/ "./_webpack/main.scss":
/*!****************************!*\
  !*** ./_webpack/main.scss ***!
  \****************************/
/***/ ((module) => {

"use strict";
eval("module.exports = \"// extracted by mini-css-extract-plugin\\nexport {};\";\n\n//# sourceURL=webpack://jakob1482.github.io/./_webpack/main.scss?");

/***/ }),

/***/ "./node_modules/overlayscrollbars/overlayscrollbars.mjs":
/*!**************************************************************!*\
  !*** ./node_modules/overlayscrollbars/overlayscrollbars.mjs ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   OverlayScrollbars: () => (/* binding */ OverlayScrollbars)\n/* harmony export */ });\n/* unused harmony exports ClickScrollPlugin, ScrollbarsHidingPlugin, SizeObserverPlugin */\n/*!\n * OverlayScrollbars\n * Version: 2.4.6\n *\n * Copyright (c) Rene Haas | KingSora.\n * https://github.com/KingSora\n *\n * Released under the MIT license.\n */\nconst createCache = (t, n) => {\n  const {o: o, u: s, _: e} = t;\n  let c = o;\n  let r;\n  const cacheUpdateContextual = (t, n) => {\n    const o = c;\n    const l = t;\n    const i = n || (s ? !s(o, l) : o !== l);\n    if (i || e) {\n      c = l;\n      r = o;\n    }\n    return [ c, i, r ];\n  };\n  const cacheUpdateIsolated = t => cacheUpdateContextual(n(c, r), t);\n  const getCurrentCache = t => [ c, !!t, r ];\n  return [ n ? cacheUpdateIsolated : cacheUpdateContextual, getCurrentCache ];\n};\n\nconst t = typeof window !== \"undefined\";\n\nconst n = t && Node.ELEMENT_NODE;\n\nconst {toString: o, hasOwnProperty: s} = Object.prototype;\n\nconst e = /^\\[object (.+)\\]$/;\n\nconst isUndefined = t => t === void 0;\n\nconst isNull = t => t === null;\n\nconst type = t => isUndefined(t) || isNull(t) ? `${t}` : o.call(t).replace(e, \"$1\").toLowerCase();\n\nconst isNumber = t => typeof t === \"number\";\n\nconst isString = t => typeof t === \"string\";\n\nconst isBoolean = t => typeof t === \"boolean\";\n\nconst isFunction = t => typeof t === \"function\";\n\nconst isArray = t => Array.isArray(t);\n\nconst isObject = t => typeof t === \"object\" && !isArray(t) && !isNull(t);\n\nconst isArrayLike = t => {\n  const n = !!t && t.length;\n  const o = isNumber(n) && n > -1 && n % 1 == 0;\n  return isArray(t) || !isFunction(t) && o ? n > 0 && isObject(t) ? n - 1 in t : true : false;\n};\n\nconst isPlainObject = t => {\n  if (!t || !isObject(t) || type(t) !== \"object\") {\n    return false;\n  }\n  let n;\n  const o = \"constructor\";\n  const e = t[o];\n  const c = e && e.prototype;\n  const r = s.call(t, o);\n  const l = c && s.call(c, \"isPrototypeOf\");\n  if (e && !r && !l) {\n    return false;\n  }\n  for (n in t) {}\n  return isUndefined(n) || s.call(t, n);\n};\n\nconst isHTMLElement = t => {\n  const o = HTMLElement;\n  return t ? o ? t instanceof o : t.nodeType === n : false;\n};\n\nconst isElement = t => {\n  const o = Element;\n  return t ? o ? t instanceof o : t.nodeType === n : false;\n};\n\nfunction each(t, n) {\n  if (isArrayLike(t)) {\n    for (let o = 0; o < t.length; o++) {\n      if (n(t[o], o, t) === false) {\n        break;\n      }\n    }\n  } else if (t) {\n    each(Object.keys(t), (o => n(t[o], o, t)));\n  }\n  return t;\n}\n\nconst inArray = (t, n) => t.indexOf(n) >= 0;\n\nconst concat = (t, n) => t.concat(n);\n\nconst push = (t, n, o) => {\n  !o && !isString(n) && isArrayLike(n) ? Array.prototype.push.apply(t, n) : t.push(n);\n  return t;\n};\n\nconst from = t => {\n  const n = Array.from;\n  const o = [];\n  if (n && t) {\n    return n(t);\n  }\n  if (t instanceof Set) {\n    t.forEach((t => {\n      push(o, t);\n    }));\n  } else {\n    each(t, (t => {\n      push(o, t);\n    }));\n  }\n  return o;\n};\n\nconst createOrKeepArray = t => isArray(t) ? t : [ t ];\n\nconst isEmptyArray = t => !!t && !t.length;\n\nconst deduplicateArray = t => from(new Set(t));\n\nconst runEachAndClear = (t, n, o) => {\n  const runFn = t => t && t.apply(void 0, n || []);\n  each(t, runFn);\n  !o && (t.length = 0);\n};\n\nconst hasOwnProperty = (t, n) => Object.prototype.hasOwnProperty.call(t, n);\n\nconst keys = t => t ? Object.keys(t) : [];\n\nconst assignDeep = (t, n, o, s, e, c, r) => {\n  const l = [ n, o, s, e, c, r ];\n  if ((typeof t !== \"object\" || isNull(t)) && !isFunction(t)) {\n    t = {};\n  }\n  each(l, (n => {\n    each(n, ((o, s) => {\n      const e = n[s];\n      if (t === e) {\n        return true;\n      }\n      const c = isArray(e);\n      if (e && isPlainObject(e)) {\n        const n = t[s];\n        let o = n;\n        if (c && !isArray(n)) {\n          o = [];\n        } else if (!c && !isPlainObject(n)) {\n          o = {};\n        }\n        t[s] = assignDeep(o, e);\n      } else {\n        t[s] = c ? e.slice() : e;\n      }\n    }));\n  }));\n  return t;\n};\n\nconst removeUndefinedProperties = (t, n) => each(assignDeep({}, t), ((t, o, s) => {\n  if (t === void 0) {\n    delete s[o];\n  } else if (n && t && isPlainObject(t)) {\n    s[o] = removeUndefinedProperties(t, n);\n  }\n}));\n\nconst isEmptyObject = t => {\n  for (const n in t) {\n    return false;\n  }\n  return true;\n};\n\nconst attr = (t, n, o) => {\n  if (isUndefined(o)) {\n    return t ? t.getAttribute(n) : null;\n  }\n  t && t.setAttribute(n, o);\n};\n\nconst getValueSet = (t, n) => new Set((attr(t, n) || \"\").split(\" \"));\n\nconst removeAttr = (t, n) => {\n  t && t.removeAttribute(n);\n};\n\nconst attrClass = (t, n, o, s) => {\n  if (o) {\n    const e = getValueSet(t, n);\n    e[s ? \"add\" : \"delete\"](o);\n    const c = from(e).join(\" \").trim();\n    attr(t, n, c);\n  }\n};\n\nconst hasAttrClass = (t, n, o) => getValueSet(t, n).has(o);\n\nconst c = t && Element.prototype;\n\nconst find = (t, n) => {\n  const o = [];\n  const s = n ? isElement(n) && n : document;\n  return s ? push(o, s.querySelectorAll(t)) : o;\n};\n\nconst findFirst = (t, n) => {\n  const o = n ? isElement(n) && n : document;\n  return o ? o.querySelector(t) : null;\n};\n\nconst is = (t, n) => {\n  if (isElement(t)) {\n    const o = c.matches || c.msMatchesSelector;\n    return o.call(t, n);\n  }\n  return false;\n};\n\nconst contents = t => t ? from(t.childNodes) : [];\n\nconst parent = t => t && t.parentElement;\n\nconst closest = (t, n) => {\n  if (isElement(t)) {\n    const o = c.closest;\n    if (o) {\n      return o.call(t, n);\n    }\n    do {\n      if (is(t, n)) {\n        return t;\n      }\n      t = parent(t);\n    } while (t);\n  }\n};\n\nconst liesBetween = (t, n, o) => {\n  const s = closest(t, n);\n  const e = t && findFirst(o, s);\n  const c = closest(e, n) === s;\n  return s && e ? s === t || e === t || c && closest(closest(t, o), n) !== s : false;\n};\n\nconst noop = () => {};\n\nconst removeElements = t => {\n  if (isArrayLike(t)) {\n    each(from(t), (t => removeElements(t)));\n  } else if (t) {\n    const n = parent(t);\n    n && n.removeChild(t);\n  }\n};\n\nconst before = (t, n, o) => {\n  if (o && t) {\n    let s = n;\n    let e;\n    if (isArrayLike(o)) {\n      e = document.createDocumentFragment();\n      each(o, (t => {\n        if (t === s) {\n          s = t.previousSibling;\n        }\n        e.appendChild(t);\n      }));\n    } else {\n      e = o;\n    }\n    if (n) {\n      if (!s) {\n        s = t.firstChild;\n      } else if (s !== n) {\n        s = s.nextSibling;\n      }\n    }\n    t.insertBefore(e, s || null);\n    return () => removeElements(o);\n  }\n  return noop;\n};\n\nconst appendChildren = (t, n) => before(t, null, n);\n\nconst insertBefore = (t, n) => before(parent(t), t, n);\n\nconst insertAfter = (t, n) => before(parent(t), t && t.nextSibling, n);\n\nconst createDiv = t => {\n  const n = document.createElement(\"div\");\n  attr(n, \"class\", t);\n  return n;\n};\n\nconst createDOM = t => {\n  const n = createDiv();\n  n.innerHTML = t.trim();\n  return each(contents(n), (t => removeElements(t)));\n};\n\nconst r = t ? window : {};\n\nconst l = Math.max;\n\nconst i = Math.min;\n\nconst a = Math.round;\n\nconst u = Math.abs;\n\nconst f = r.cancelAnimationFrame;\n\nconst _ = r.requestAnimationFrame;\n\nconst d = r.setTimeout;\n\nconst v = r.clearTimeout;\n\nconst firstLetterToUpper = t => t.charAt(0).toUpperCase() + t.slice(1);\n\nconst getDummyStyle = () => createDiv().style;\n\nconst h = [ \"-webkit-\", \"-moz-\", \"-o-\", \"-ms-\" ];\n\nconst p = [ \"WebKit\", \"Moz\", \"O\", \"MS\", \"webkit\", \"moz\", \"o\", \"ms\" ];\n\nconst g = {};\n\nconst b = {};\n\nconst cssProperty = t => {\n  let n = b[t];\n  if (hasOwnProperty(b, t)) {\n    return n;\n  }\n  const o = firstLetterToUpper(t);\n  const s = getDummyStyle();\n  each(h, (e => {\n    const c = e.replace(/-/g, \"\");\n    const r = [ t, e + t, c + o, firstLetterToUpper(c) + o ];\n    return !(n = r.find((t => s[t] !== void 0)));\n  }));\n  return b[t] = n || \"\";\n};\n\nconst jsAPI = t => {\n  let n = g[t] || r[t];\n  if (hasOwnProperty(g, t)) {\n    return n;\n  }\n  each(p, (o => {\n    n = n || r[o + firstLetterToUpper(t)];\n    return !n;\n  }));\n  g[t] = n;\n  return n;\n};\n\nconst w = jsAPI(\"MutationObserver\");\n\nconst y = jsAPI(\"IntersectionObserver\");\n\nconst S = jsAPI(\"ResizeObserver\");\n\nconst m = jsAPI(\"ScrollTimeline\");\n\nconst bind = (t, ...n) => t.bind(0, ...n);\n\nconst selfClearTimeout = t => {\n  let n;\n  const o = t ? d : _;\n  const s = t ? v : f;\n  return [ e => {\n    s(n);\n    n = o(e, isFunction(t) ? t() : t);\n  }, () => s(n) ];\n};\n\nconst debounce = (t, n) => {\n  let o;\n  let s;\n  let e;\n  let c = noop;\n  const {v: r, p: l, S: i} = n || {};\n  const a = function invokeFunctionToDebounce(n) {\n    c();\n    v(o);\n    o = s = void 0;\n    c = noop;\n    t.apply(this, n);\n  };\n  const mergeParms = t => i && s ? i(s, t) : t;\n  const flush = () => {\n    if (c !== noop) {\n      a(mergeParms(e) || e);\n    }\n  };\n  const u = function debouncedFn() {\n    const t = from(arguments);\n    const n = isFunction(r) ? r() : r;\n    const i = isNumber(n) && n >= 0;\n    if (i) {\n      const r = isFunction(l) ? l() : l;\n      const i = isNumber(r) && r >= 0;\n      const u = n > 0 ? d : _;\n      const h = n > 0 ? v : f;\n      const p = mergeParms(t);\n      const g = p || t;\n      const b = a.bind(0, g);\n      c();\n      const w = u(b, n);\n      c = () => h(w);\n      if (i && !o) {\n        o = d(flush, r);\n      }\n      s = e = g;\n    } else {\n      a(t);\n    }\n  };\n  u.m = flush;\n  return u;\n};\n\nconst $ = /[^\\x20\\t\\r\\n\\f]+/g;\n\nconst classListAction = (t, n, o) => {\n  const s = t && t.classList;\n  let e;\n  let c = 0;\n  let r = false;\n  if (s && n && isString(n)) {\n    const t = n.match($) || [];\n    r = t.length > 0;\n    while (e = t[c++]) {\n      r = !!o(s, e) && r;\n    }\n  }\n  return r;\n};\n\nconst removeClass = (t, n) => {\n  classListAction(t, n, ((t, n) => t.remove(n)));\n};\n\nconst addClass = (t, n) => {\n  classListAction(t, n, ((t, n) => t.add(n)));\n  return bind(removeClass, t, n);\n};\n\nconst x = /^--/;\n\nconst getCSSVal = (t, n) => t.getPropertyValue(n) || t[n] || \"\";\n\nconst validFiniteNumber = t => {\n  const n = t || 0;\n  return isFinite(n) ? n : 0;\n};\n\nconst parseToZeroOrNumber = t => validFiniteNumber(parseFloat(t || \"\"));\n\nconst ratioToCssPercent = t => `${(validFiniteNumber(t) * 100).toFixed(3)}%`;\n\nconst numberToCssPx = t => `${validFiniteNumber(t)}px`;\n\nfunction setStyles(t, n) {\n  t && each(n, ((n, o) => {\n    try {\n      const s = t.style;\n      const e = isNumber(n) ? numberToCssPx(n) : n + \"\";\n      if (x.test(o)) {\n        s.setProperty(o, e);\n      } else {\n        s[o] = e;\n      }\n    } catch (s) {}\n  }));\n}\n\nfunction getStyles(t, n, o) {\n  const s = isString(n);\n  let e = s ? \"\" : {};\n  if (t) {\n    const c = r.getComputedStyle(t, o) || t.style;\n    e = s ? getCSSVal(c, n) : n.reduce(((t, n) => {\n      t[n] = getCSSVal(c, n);\n      return t;\n    }), e);\n  }\n  return e;\n}\n\nconst getDirectionIsRTL = t => getStyles(t, \"direction\") === \"rtl\";\n\nconst topRightBottomLeft = (t, n, o) => {\n  const s = n ? `${n}-` : \"\";\n  const e = o ? `-${o}` : \"\";\n  const c = `${s}top${e}`;\n  const r = `${s}right${e}`;\n  const l = `${s}bottom${e}`;\n  const i = `${s}left${e}`;\n  const a = getStyles(t, [ c, r, l, i ]);\n  return {\n    t: parseToZeroOrNumber(a[c]),\n    r: parseToZeroOrNumber(a[r]),\n    b: parseToZeroOrNumber(a[l]),\n    l: parseToZeroOrNumber(a[i])\n  };\n};\n\nconst getTrasformTranslateValue = (t, n) => `translate${isObject(t) ? `(${t.x},${t.y})` : `${n ? \"X\" : \"Y\"}(${t})`}`;\n\nconst O = \"paddingTop\";\n\nconst C = \"paddingRight\";\n\nconst H = \"paddingLeft\";\n\nconst z = \"paddingBottom\";\n\nconst I = \"marginLeft\";\n\nconst A = \"marginRight\";\n\nconst E = \"marginBottom\";\n\nconst T = \"overflowX\";\n\nconst D = \"overflowY\";\n\nconst k = \"width\";\n\nconst M = \"height\";\n\nconst R = \"hidden\";\n\nconst P = {\n  w: 0,\n  h: 0\n};\n\nconst getElmWidthHeightProperty = (t, n) => n ? {\n  w: n[`${t}Width`],\n  h: n[`${t}Height`]\n} : P;\n\nconst windowSize = t => getElmWidthHeightProperty(\"inner\", t || r);\n\nconst L = bind(getElmWidthHeightProperty, \"offset\");\n\nconst V = bind(getElmWidthHeightProperty, \"client\");\n\nconst U = bind(getElmWidthHeightProperty, \"scroll\");\n\nconst fractionalSize = t => {\n  const n = parseFloat(getStyles(t, k)) || 0;\n  const o = parseFloat(getStyles(t, M)) || 0;\n  return {\n    w: n - a(n),\n    h: o - a(o)\n  };\n};\n\nconst getBoundingClientRect = t => t.getBoundingClientRect();\n\nconst domRectHasDimensions = t => !!(t && (t[M] || t[k]));\n\nconst domRectAppeared = (t, n) => {\n  const o = domRectHasDimensions(t);\n  const s = domRectHasDimensions(n);\n  return !s && o;\n};\n\nconst animationCurrentTime = () => performance.now();\n\nconst animateNumber = (t, n, o, s, e) => {\n  let c = 0;\n  const r = animationCurrentTime();\n  const i = l(0, o);\n  const frame = o => {\n    const a = animationCurrentTime();\n    const u = a - r;\n    const f = u >= i;\n    const d = o ? 1 : 1 - (l(0, r + i - a) / i || 0);\n    const v = (n - t) * (isFunction(e) ? e(d, d * i, 0, 1, i) : d) + t;\n    const h = f || d === 1;\n    s && s(v, d, h);\n    c = h ? 0 : _((() => frame()));\n  };\n  frame();\n  return t => {\n    f(c);\n    t && frame(t);\n  };\n};\n\nconst equal = (t, n, o, s) => {\n  if (t && n) {\n    let e = true;\n    each(o, (o => {\n      const c = s ? s(t[o]) : t[o];\n      const r = s ? s(n[o]) : n[o];\n      if (c !== r) {\n        e = false;\n      }\n    }));\n    return e;\n  }\n  return false;\n};\n\nconst equalWH = (t, n) => equal(t, n, [ \"w\", \"h\" ]);\n\nconst equalXY = (t, n) => equal(t, n, [ \"x\", \"y\" ]);\n\nconst equalTRBL = (t, n) => equal(t, n, [ \"t\", \"r\", \"b\", \"l\" ]);\n\nconst equalBCRWH = (t, n, o) => equal(t, n, [ k, M ], o && (t => a(t)));\n\nlet B;\n\nconst j = \"passive\";\n\nconst supportPassiveEvents = () => {\n  if (isUndefined(B)) {\n    B = false;\n    try {\n      r.addEventListener(j, noop, Object.defineProperty({}, j, {\n        get() {\n          B = true;\n        }\n      }));\n    } catch (t) {}\n  }\n  return B;\n};\n\nconst splitEventNames = t => t.split(\" \");\n\nconst removeEventListener = (t, n, o, s) => {\n  each(splitEventNames(n), (n => {\n    t.removeEventListener(n, o, s);\n  }));\n};\n\nconst addEventListener = (t, n, o, s) => {\n  var e;\n  const c = supportPassiveEvents();\n  const r = (e = c && s && s.$) != null ? e : c;\n  const l = s && s.O || false;\n  const i = s && s.C || false;\n  const a = c ? {\n    passive: r,\n    capture: l\n  } : l;\n  return bind(runEachAndClear, splitEventNames(n).map((n => {\n    const s = i ? e => {\n      removeEventListener(t, n, s, l);\n      o(e);\n    } : o;\n    t.addEventListener(n, s, a);\n    return bind(removeEventListener, t, n, s, l);\n  })));\n};\n\nconst stopPropagation = t => t.stopPropagation();\n\nconst preventDefault = t => t.preventDefault();\n\nconst N = {\n  x: 0,\n  y: 0\n};\n\nconst absoluteCoordinates = t => {\n  const n = t && getBoundingClientRect(t);\n  return n ? {\n    x: n.left + r.pageYOffset,\n    y: n.top + r.pageXOffset\n  } : N;\n};\n\nconst getRTLCompatibleScrollPosition = (t, n, o) => o ? o.n ? -t : o.i ? n - t : t : t;\n\nconst getRTLCompatibleScrollBounds = (t, n) => [ n ? n.i ? t : 0 : 0, getRTLCompatibleScrollPosition(t, t, n) ];\n\nconst scrollElementTo = (t, n) => {\n  const {x: o, y: s} = isNumber(n) ? {\n    x: n,\n    y: n\n  } : n || {};\n  isNumber(o) && (t.scrollLeft = o);\n  isNumber(s) && (t.scrollTop = s);\n};\n\nconst getElmentScroll = t => ({\n  x: t.scrollLeft,\n  y: t.scrollTop\n});\n\nconst manageListener = (t, n) => {\n  each(createOrKeepArray(n), t);\n};\n\nconst createEventListenerHub = t => {\n  const n = new Map;\n  const removeEvent = (t, o) => {\n    if (t) {\n      const s = n.get(t);\n      manageListener((t => {\n        if (s) {\n          s[t ? \"delete\" : \"clear\"](t);\n        }\n      }), o);\n    } else {\n      n.forEach((t => {\n        t.clear();\n      }));\n      n.clear();\n    }\n  };\n  const addEvent = (t, o) => {\n    if (isString(t)) {\n      const s = n.get(t) || new Set;\n      n.set(t, s);\n      manageListener((t => {\n        isFunction(t) && s.add(t);\n      }), o);\n      return bind(removeEvent, t, o);\n    }\n    if (isBoolean(o) && o) {\n      removeEvent();\n    }\n    const s = keys(t);\n    const e = [];\n    each(s, (n => {\n      const o = t[n];\n      o && push(e, addEvent(n, o));\n    }));\n    return bind(runEachAndClear, e);\n  };\n  const triggerEvent = (t, o) => {\n    each(from(n.get(t)), (t => {\n      if (o && !isEmptyArray(o)) {\n        t.apply(0, o);\n      } else {\n        t();\n      }\n    }));\n  };\n  addEvent(t || {});\n  return [ addEvent, removeEvent, triggerEvent ];\n};\n\nconst opsStringify = t => JSON.stringify(t, ((t, n) => {\n  if (isFunction(n)) {\n    throw 0;\n  }\n  return n;\n}));\n\nconst getPropByPath = (t, n) => t ? `${n}`.split(\".\").reduce(((t, n) => t && hasOwnProperty(t, n) ? t[n] : void 0), t) : void 0;\n\nconst G = {\n  paddingAbsolute: false,\n  showNativeOverlaidScrollbars: false,\n  update: {\n    elementEvents: [ [ \"img\", \"load\" ] ],\n    debounce: [ 0, 33 ],\n    attributes: null,\n    ignoreMutation: null\n  },\n  overflow: {\n    x: \"scroll\",\n    y: \"scroll\"\n  },\n  scrollbars: {\n    theme: \"os-theme-dark\",\n    visibility: \"auto\",\n    autoHide: \"never\",\n    autoHideDelay: 1300,\n    autoHideSuspend: false,\n    dragScroll: true,\n    clickScroll: false,\n    pointers: [ \"mouse\", \"touch\", \"pen\" ]\n  }\n};\n\nconst getOptionsDiff = (t, n) => {\n  const o = {};\n  const s = concat(keys(n), keys(t));\n  each(s, (s => {\n    const e = t[s];\n    const c = n[s];\n    if (isObject(e) && isObject(c)) {\n      assignDeep(o[s] = {}, getOptionsDiff(e, c));\n      if (isEmptyObject(o[s])) {\n        delete o[s];\n      }\n    } else if (hasOwnProperty(n, s) && c !== e) {\n      let t = true;\n      if (isArray(e) || isArray(c)) {\n        try {\n          if (opsStringify(e) === opsStringify(c)) {\n            t = false;\n          }\n        } catch (r) {}\n      }\n      if (t) {\n        o[s] = c;\n      }\n    }\n  }));\n  return o;\n};\n\nconst createOptionCheck = (t, n, o) => s => [ getPropByPath(t, s), o || getPropByPath(n, s) !== void 0 ];\n\nconst q = `data-overlayscrollbars`;\n\nconst F = \"os-environment\";\n\nconst W = `${F}-flexbox-glue`;\n\nconst X = `${W}-max`;\n\nconst Y = `os-scrollbar-hidden`;\n\nconst K = `${q}-initialize`;\n\nconst J = q;\n\nconst Z = `${J}-overflow-x`;\n\nconst Q = `${J}-overflow-y`;\n\nconst tt = \"overflowVisible\";\n\nconst nt = \"scrollbarHidden\";\n\nconst ot = \"scrollbarPressed\";\n\nconst st = \"updating\";\n\nconst et = `${q}-viewport`;\n\nconst ct = \"arrange\";\n\nconst rt = \"scrollbarHidden\";\n\nconst lt = tt;\n\nconst it = `${q}-padding`;\n\nconst at = lt;\n\nconst ut = `${q}-content`;\n\nconst ft = \"os-size-observer\";\n\nconst _t = `${ft}-appear`;\n\nconst dt = `${ft}-listener`;\n\nconst vt = `${dt}-scroll`;\n\nconst ht = `${dt}-item`;\n\nconst pt = `${ht}-final`;\n\nconst gt = \"os-trinsic-observer\";\n\nconst bt = \"os-no-css-vars\";\n\nconst wt = \"os-theme-none\";\n\nconst yt = \"os-scrollbar\";\n\nconst St = `${yt}-rtl`;\n\nconst mt = `${yt}-horizontal`;\n\nconst $t = `${yt}-vertical`;\n\nconst xt = `${yt}-track`;\n\nconst Ot = `${yt}-handle`;\n\nconst Ct = `${yt}-visible`;\n\nconst Ht = `${yt}-cornerless`;\n\nconst zt = `${yt}-transitionless`;\n\nconst It = `${yt}-interaction`;\n\nconst At = `${yt}-unusable`;\n\nconst Et = `${yt}-auto-hide`;\n\nconst Tt = `${Et}-hidden`;\n\nconst Dt = `${yt}-wheel`;\n\nconst kt = `${xt}-interactive`;\n\nconst Mt = `${Ot}-interactive`;\n\nconst Rt = {};\n\nconst Pt = {};\n\nconst addPlugins = t => {\n  each(t, (t => each(t, ((n, o) => {\n    Rt[o] = t[o];\n  }))));\n};\n\nconst registerPluginModuleInstances = (t, n, o) => keys(t).map((s => {\n  const {static: e, instance: c} = t[s];\n  const [r, l, i] = o || [];\n  const a = o ? c : e;\n  if (a) {\n    const t = o ? a(r, l, n) : a(n);\n    return (i || Pt)[s] = t;\n  }\n}));\n\nconst getStaticPluginModuleInstance = t => Pt[t];\n\nconst Lt = \"__osOptionsValidationPlugin\";\n\nconst Vt = \"__osSizeObserverPlugin\";\n\nconst Ut = /* @__PURE__ */ (() => ({\n  [Vt]: {\n    static: () => (t, n, o) => {\n      const s = 3333333;\n      const e = \"scroll\";\n      const c = createDOM(`<div class=\"${ht}\" dir=\"ltr\"><div class=\"${ht}\"><div class=\"${pt}\"></div></div><div class=\"${ht}\"><div class=\"${pt}\" style=\"width: 200%; height: 200%\"></div></div></div>`);\n      const r = c[0];\n      const l = r.lastChild;\n      const i = r.firstChild;\n      const a = i == null ? void 0 : i.firstChild;\n      let u = L(r);\n      let d = u;\n      let v = false;\n      let h;\n      const reset = () => {\n        scrollElementTo(i, s);\n        scrollElementTo(l, s);\n      };\n      const onResized = t => {\n        h = 0;\n        if (v) {\n          u = d;\n          n(t === true);\n        }\n      };\n      const onScroll = t => {\n        d = L(r);\n        v = !t || !equalWH(d, u);\n        if (t) {\n          stopPropagation(t);\n          if (v && !h) {\n            f(h);\n            h = _(onResized);\n          }\n        } else {\n          onResized(t === false);\n        }\n        reset();\n      };\n      const p = [ appendChildren(t, c), addEventListener(i, e, onScroll), addEventListener(l, e, onScroll) ];\n      addClass(t, vt);\n      setStyles(a, {\n        [k]: s,\n        [M]: s\n      });\n      _(reset);\n      return [ o ? bind(onScroll, false) : reset, p ];\n    }\n  }\n}))();\n\nlet Bt = 0;\n\nconst jt = \"__osScrollbarsHidingPlugin\";\n\nconst Nt = /* @__PURE__ */ (() => ({\n  [jt]: {\n    static: () => ({\n      H: t => {\n        const {I: n, A: o, T: s} = t;\n        const e = !s && !n && (o.x || o.y);\n        const c = e ? document.createElement(\"style\") : false;\n        if (c) {\n          attr(c, \"id\", `${et}-${ct}-${Bt}`);\n          Bt++;\n        }\n        return c;\n      },\n      D: (t, n, o, s, e, c, r) => {\n        const arrangeViewport = (n, c, r, l) => {\n          if (t) {\n            const {k: t} = e;\n            const {M: i, R: a} = n;\n            const {x: u, y: f} = a;\n            const {x: _, y: d} = i;\n            const v = l ? C : H;\n            const h = t[v];\n            const p = t.paddingTop;\n            const g = c.w + r.w;\n            const b = c.h + r.h;\n            const w = {\n              w: d && f ? `${d + g - h}px` : \"\",\n              h: _ && u ? `${_ + b - p}px` : \"\"\n            };\n            if (s) {\n              const {sheet: t} = s;\n              if (t) {\n                const {cssRules: n} = t;\n                if (n) {\n                  if (!n.length) {\n                    t.insertRule(`#${attr(s, \"id\")} + [${et}~='${ct}']::before {}`, 0);\n                  }\n                  const o = n[0].style;\n                  o[k] = w.w;\n                  o[M] = w.h;\n                }\n              }\n            } else {\n              setStyles(o, {\n                \"--os-vaw\": w.w,\n                \"--os-vah\": w.h\n              });\n            }\n          }\n          return t;\n        };\n        const undoViewportArrange = (s, l, i) => {\n          if (t) {\n            const a = i || c(s);\n            const {k: u} = e;\n            const {R: f} = a;\n            const {x: _, y: d} = f;\n            const v = {};\n            const assignProps = t => each(t, (t => {\n              v[t] = u[t];\n            }));\n            if (_) {\n              assignProps([ E, O, z ]);\n            }\n            if (d) {\n              assignProps([ I, A, H, C ]);\n            }\n            const h = getStyles(o, keys(v));\n            attrClass(o, et, ct);\n            if (!n) {\n              v[M] = \"\";\n            }\n            setStyles(o, v);\n            return [ () => {\n              r(a, l, t, h);\n              setStyles(o, h);\n              attrClass(o, et, ct, true);\n            }, a ];\n          }\n          return [ noop ];\n        };\n        return [ arrangeViewport, undoViewportArrange ];\n      },\n      P: () => {\n        let t = {\n          w: 0,\n          h: 0\n        };\n        let n = 0;\n        const getWindowDPR = () => {\n          const t = r.screen;\n          const n = t.deviceXDPI || 0;\n          const o = t.logicalXDPI || 1;\n          return r.devicePixelRatio || n / o;\n        };\n        const diffBiggerThanOne = (t, n) => {\n          const o = u(t);\n          const s = u(n);\n          return !(o === s || o + 1 === s || o - 1 === s);\n        };\n        return (o, s) => {\n          const e = windowSize();\n          const c = {\n            w: e.w - t.w,\n            h: e.h - t.h\n          };\n          if (c.w === 0 && c.h === 0) {\n            return;\n          }\n          const r = {\n            w: u(c.w),\n            h: u(c.h)\n          };\n          const l = {\n            w: u(a(e.w / (t.w / 100))),\n            h: u(a(e.h / (t.h / 100)))\n          };\n          const i = getWindowDPR();\n          const f = r.w > 2 && r.h > 2;\n          const _ = !diffBiggerThanOne(l.w, l.h);\n          const d = i !== n && i > 0;\n          const v = f && _ && d;\n          let h;\n          let p;\n          if (v) {\n            [p, h] = s();\n            assignDeep(o.L, p);\n          }\n          t = e;\n          n = i;\n          return h;\n        };\n      }\n    })\n  }\n}))();\n\nconst Gt = \"__osClickScrollPlugin\";\n\nconst qt = /* @__PURE__ */ (() => ({\n  [Gt]: {\n    static: () => (t, n, o, s, e) => {\n      let c = 0;\n      let r = noop;\n      const animateClickScroll = l => {\n        r = animateNumber(l, l + s * Math.sign(o), 133, ((o, l, i) => {\n          t(o);\n          const a = n();\n          const u = a + s;\n          const f = e >= a && e <= u;\n          if (i && !f) {\n            if (c) {\n              animateClickScroll(o);\n            } else {\n              const t = d((() => {\n                animateClickScroll(o);\n              }), 222);\n              r = () => {\n                clearTimeout(t);\n              };\n            }\n            c++;\n          }\n        }));\n      };\n      animateClickScroll(0);\n      return () => r();\n    }\n  }\n}))();\n\nlet Ft;\n\nconst getNativeScrollbarSize = (t, n, o, s) => {\n  appendChildren(t, n);\n  const e = V(n);\n  const c = L(n);\n  const r = fractionalSize(o);\n  s && removeElements(n);\n  return {\n    x: c.h - e.h + r.h,\n    y: c.w - e.w + r.w\n  };\n};\n\nconst getNativeScrollbarsHiding = t => {\n  let n = false;\n  const o = addClass(t, Y);\n  try {\n    n = getStyles(t, cssProperty(\"scrollbar-width\")) === \"none\" || getStyles(t, \"display\", \"::-webkit-scrollbar\") === \"none\";\n  } catch (s) {}\n  o();\n  return n;\n};\n\nconst getRtlScrollBehavior = (t, n) => {\n  setStyles(t, {\n    [T]: R,\n    [D]: R,\n    direction: \"rtl\"\n  });\n  scrollElementTo(t, {\n    x: 0\n  });\n  const o = absoluteCoordinates(t);\n  const s = absoluteCoordinates(n);\n  scrollElementTo(t, {\n    x: -999\n  });\n  const e = absoluteCoordinates(n);\n  return {\n    i: o.x === s.x,\n    n: s.x !== e.x\n  };\n};\n\nconst getFlexboxGlue = (t, n) => {\n  const o = addClass(t, W);\n  const s = getBoundingClientRect(t);\n  const e = getBoundingClientRect(n);\n  const c = equalBCRWH(e, s, true);\n  const r = addClass(t, X);\n  const l = getBoundingClientRect(t);\n  const i = getBoundingClientRect(n);\n  const a = equalBCRWH(i, l, true);\n  o();\n  r();\n  return c && a;\n};\n\nconst createEnvironment = () => {\n  const {body: t} = document;\n  const n = createDOM(`<div class=\"${F}\"><div></div></div>`);\n  const o = n[0];\n  const s = o.firstChild;\n  const [e, , c] = createEventListenerHub();\n  const [l, i] = createCache({\n    o: getNativeScrollbarSize(t, o, s),\n    u: equalXY\n  }, bind(getNativeScrollbarSize, t, o, s, true));\n  const [a] = i();\n  const u = getNativeScrollbarsHiding(o);\n  const f = {\n    x: a.x === 0,\n    y: a.y === 0\n  };\n  const _ = {\n    elements: {\n      host: null,\n      padding: !u,\n      viewport: t => u && t === t.ownerDocument.body && t,\n      content: false\n    },\n    scrollbars: {\n      slot: true\n    },\n    cancel: {\n      nativeScrollbarsOverlaid: false,\n      body: null\n    }\n  };\n  const d = assignDeep({}, G);\n  const v = bind(assignDeep, {}, d);\n  const h = bind(assignDeep, {}, _);\n  const p = {\n    L: a,\n    A: f,\n    I: u,\n    T: getStyles(o, \"zIndex\") === \"-1\",\n    V: !!m,\n    U: getRtlScrollBehavior(o, s),\n    B: getFlexboxGlue(o, s),\n    j: bind(e, \"r\"),\n    N: h,\n    G: t => assignDeep(_, t) && h(),\n    q: v,\n    F: t => assignDeep(d, t) && v(),\n    W: assignDeep({}, _),\n    X: assignDeep({}, d)\n  };\n  removeAttr(o, \"style\");\n  removeElements(o);\n  r.addEventListener(\"resize\", (() => {\n    let t;\n    if (!u && (!f.x || !f.y)) {\n      const n = getStaticPluginModuleInstance(jt);\n      const o = n ? n.P() : noop;\n      t = !!o(p, l);\n    }\n    c(\"r\", [ t ]);\n  }));\n  return p;\n};\n\nconst getEnvironment = () => {\n  if (!Ft) {\n    Ft = createEnvironment();\n  }\n  return Ft;\n};\n\nconst resolveInitialization = (t, n) => isFunction(n) ? n.apply(0, t) : n;\n\nconst staticInitializationElement = (t, n, o, s) => {\n  const e = isUndefined(s) ? o : s;\n  const c = resolveInitialization(t, e);\n  return c || n.apply(0, t);\n};\n\nconst dynamicInitializationElement = (t, n, o, s) => {\n  const e = isUndefined(s) ? o : s;\n  const c = resolveInitialization(t, e);\n  return !!c && (isHTMLElement(c) ? c : n.apply(0, t));\n};\n\nconst cancelInitialization = (t, n) => {\n  const {nativeScrollbarsOverlaid: o, body: s} = n || {};\n  const {A: e, I: c, N: r} = getEnvironment();\n  const {nativeScrollbarsOverlaid: l, body: i} = r().cancel;\n  const a = o != null ? o : l;\n  const u = isUndefined(s) ? i : s;\n  const f = (e.x || e.y) && a;\n  const _ = t && (isNull(u) ? !c : u);\n  return !!f || !!_;\n};\n\nconst Wt = new WeakMap;\n\nconst addInstance = (t, n) => {\n  Wt.set(t, n);\n};\n\nconst removeInstance = t => {\n  Wt.delete(t);\n};\n\nconst getInstance = t => Wt.get(t);\n\nconst createEventContentChange = (t, n, o) => {\n  let s = false;\n  const e = o ? new WeakMap : false;\n  const destroy = () => {\n    s = true;\n  };\n  const updateElements = c => {\n    if (e && o) {\n      const r = o.map((n => {\n        const [o, s] = n || [];\n        const e = s && o ? (c || find)(o, t) : [];\n        return [ e, s ];\n      }));\n      each(r, (o => each(o[0], (c => {\n        const r = o[1];\n        const l = e.get(c) || [];\n        const i = t.contains(c);\n        if (i && r) {\n          const t = addEventListener(c, r.trim(), (o => {\n            if (s) {\n              t();\n              e.delete(c);\n            } else {\n              n(o);\n            }\n          }));\n          e.set(c, push(l, t));\n        } else {\n          runEachAndClear(l);\n          e.delete(c);\n        }\n      }))));\n    }\n  };\n  updateElements();\n  return [ destroy, updateElements ];\n};\n\nconst createDOMObserver = (t, n, o, s) => {\n  let e = false;\n  const {Y: c, K: r, J: l, Z: i, tt: a, nt: u} = s || {};\n  const f = debounce((() => e && o(true)), {\n    v: 33,\n    p: 99\n  });\n  const [_, d] = createEventContentChange(t, f, l);\n  const v = c || [];\n  const h = r || [];\n  const p = concat(v, h);\n  const observerCallback = (e, c) => {\n    if (!isEmptyArray(c)) {\n      const r = a || noop;\n      const l = u || noop;\n      const f = [];\n      const _ = [];\n      let v = false;\n      let p = false;\n      each(c, (o => {\n        const {attributeName: e, target: c, type: a, oldValue: u, addedNodes: d, removedNodes: g} = o;\n        const b = a === \"attributes\";\n        const w = a === \"childList\";\n        const y = t === c;\n        const S = b && e;\n        const m = S ? attr(c, e || \"\") : null;\n        const $ = S && u !== m;\n        const x = inArray(h, e) && $;\n        if (n && (w || !y)) {\n          const n = b && $;\n          const a = n && i && is(c, i);\n          const _ = a ? !r(c, e, u, m) : !b || n;\n          const v = _ && !l(o, !!a, t, s);\n          each(d, (t => push(f, t)));\n          each(g, (t => push(f, t)));\n          p = p || v;\n        }\n        if (!n && y && $ && !r(c, e, u, m)) {\n          push(_, e);\n          v = v || x;\n        }\n      }));\n      d((t => deduplicateArray(f).reduce(((n, o) => {\n        push(n, find(t, o));\n        return is(o, t) ? push(n, o) : n;\n      }), [])));\n      if (n) {\n        !e && p && o(false);\n        return [ false ];\n      }\n      if (!isEmptyArray(_) || v) {\n        const t = [ deduplicateArray(_), v ];\n        !e && o.apply(0, t);\n        return t;\n      }\n    }\n  };\n  const g = new w(bind(observerCallback, false));\n  return [ () => {\n    g.observe(t, {\n      attributes: true,\n      attributeOldValue: true,\n      attributeFilter: p,\n      subtree: n,\n      childList: n,\n      characterData: n\n    });\n    e = true;\n    return () => {\n      if (e) {\n        _();\n        g.disconnect();\n        e = false;\n      }\n    };\n  }, () => {\n    if (e) {\n      f.m();\n      return observerCallback(true, g.takeRecords());\n    }\n  } ];\n};\n\nconst createSizeObserver = (t, n, o) => {\n  const s = 3333333;\n  const {ot: e, st: c} = o || {};\n  const r = getStaticPluginModuleInstance(Vt);\n  const {U: l} = getEnvironment();\n  const i = bind(getDirectionIsRTL, t);\n  const [a] = createCache({\n    o: false,\n    _: true\n  });\n  return () => {\n    const o = [];\n    const u = createDOM(`<div class=\"${ft}\"><div class=\"${dt}\"></div></div>`);\n    const f = u[0];\n    const _ = f.firstChild;\n    const onSizeChangedCallbackProxy = t => {\n      const o = t instanceof ResizeObserverEntry;\n      const c = !o && isArray(t);\n      let r = false;\n      let i = false;\n      let u = true;\n      if (o) {\n        const [n, , o] = a(t.contentRect);\n        const s = domRectHasDimensions(n);\n        const e = domRectAppeared(n, o);\n        const c = !o;\n        i = c || e;\n        r = !i && !s;\n        u = !r;\n      } else if (c) {\n        [, u] = t;\n      } else {\n        i = t === true;\n      }\n      if (e && u) {\n        const n = c ? t[0] : getDirectionIsRTL(f);\n        scrollElementTo(f, {\n          x: getRTLCompatibleScrollPosition(s, s, n && l),\n          y: s\n        });\n      }\n      if (!r) {\n        n({\n          et: c ? t : void 0,\n          ct: !c,\n          st: i\n        });\n      }\n    };\n    if (S) {\n      const t = new S((t => onSizeChangedCallbackProxy(t.pop())));\n      t.observe(_);\n      push(o, (() => {\n        t.disconnect();\n      }));\n    } else if (r) {\n      const [t, n] = r(_, onSizeChangedCallbackProxy, c);\n      push(o, concat([ addClass(f, _t), addEventListener(f, \"animationstart\", t) ], n));\n    } else {\n      return noop;\n    }\n    if (e) {\n      const [t] = createCache({\n        o: void 0\n      }, i);\n      push(o, addEventListener(f, \"scroll\", (n => {\n        const o = t();\n        const [s, e, c] = o;\n        if (e) {\n          removeClass(_, \"ltr rtl\");\n          addClass(_, s ? \"rtl\" : \"ltr\");\n          onSizeChangedCallbackProxy([ !!s, e, c ]);\n        }\n        stopPropagation(n);\n      })));\n    }\n    return bind(runEachAndClear, push(o, appendChildren(t, f)));\n  };\n};\n\nconst createTrinsicObserver = (t, n) => {\n  let o;\n  const isHeightIntrinsic = t => t.h === 0 || t.isIntersecting || t.intersectionRatio > 0;\n  const s = createDiv(gt);\n  const [e] = createCache({\n    o: false\n  });\n  const triggerOnTrinsicChangedCallback = (t, o) => {\n    if (t) {\n      const s = e(isHeightIntrinsic(t));\n      const [, c] = s;\n      return c && !o && n(s) && [ s ];\n    }\n  };\n  const intersectionObserverCallback = (t, n) => triggerOnTrinsicChangedCallback(n.pop(), t);\n  return [ () => {\n    const n = [];\n    if (y) {\n      o = new y(bind(intersectionObserverCallback, false), {\n        root: t\n      });\n      o.observe(s);\n      push(n, (() => {\n        o.disconnect();\n      }));\n    } else {\n      const onSizeChanged = () => {\n        const t = L(s);\n        triggerOnTrinsicChangedCallback(t);\n      };\n      push(n, createSizeObserver(s, onSizeChanged)());\n      onSizeChanged();\n    }\n    return bind(runEachAndClear, push(n, appendChildren(t, s)));\n  }, () => o && intersectionObserverCallback(true, o.takeRecords()) ];\n};\n\nconst createObserversSetup = (t, n) => {\n  let o;\n  let s;\n  let e;\n  let c;\n  let r;\n  const {I: l} = getEnvironment();\n  const i = `[${J}]`;\n  const a = `[${et}]`;\n  const u = [ \"tabindex\" ];\n  const f = [ \"wrap\", \"cols\", \"rows\" ];\n  const _ = [ \"id\", \"class\", \"style\", \"open\" ];\n  const d = {\n    rt: false,\n    lt: getDirectionIsRTL(t.it)\n  };\n  const {it: v, ut: h, ft: p, _t: g, dt: b, vt: w, ht: y} = t;\n  const {B: m, j: $} = getEnvironment();\n  const [x] = createCache({\n    u: equalWH,\n    o: {\n      w: 0,\n      h: 0\n    }\n  }, (() => {\n    const t = w(lt, tt);\n    const n = w(ct, \"\");\n    const o = n && getElmentScroll(h);\n    y(lt, tt);\n    y(ct, \"\");\n    y(\"\", st, true);\n    const s = U(p);\n    const e = U(h);\n    const c = fractionalSize(h);\n    y(lt, tt, t);\n    y(ct, \"\", n);\n    y(\"\", st);\n    scrollElementTo(h, o);\n    return {\n      w: e.w + s.w + c.w,\n      h: e.h + s.h + c.h\n    };\n  }));\n  const O = g ? f : concat(_, f);\n  const C = debounce(n, {\n    v: () => o,\n    p: () => s,\n    S(t, n) {\n      const [o] = t;\n      const [s] = n;\n      return [ concat(keys(o), keys(s)).reduce(((t, n) => {\n        t[n] = o[n] || s[n];\n        return t;\n      }), {}) ];\n    }\n  });\n  const updateViewportAttrsFromHost = t => {\n    each(t || u, (t => {\n      if (inArray(u, t)) {\n        const n = attr(v, t);\n        if (isString(n)) {\n          attr(h, t, n);\n        } else {\n          removeAttr(h, t);\n        }\n      }\n    }));\n  };\n  const onTrinsicChanged = (t, o) => {\n    const [s, e] = t;\n    const c = {\n      gt: e\n    };\n    assignDeep(d, {\n      rt: s\n    });\n    !o && n(c);\n    return c;\n  };\n  const onSizeChanged = ({ct: t, et: o, st: s}) => {\n    const e = t && !s && !o;\n    const c = !e && l ? C : n;\n    const [r, i] = o || [];\n    o && assignDeep(d, {\n      lt: r\n    });\n    c({\n      ct: t || s,\n      st: s,\n      bt: i\n    });\n  };\n  const onContentMutation = (t, o) => {\n    const [, s] = x();\n    const e = {\n      wt: s\n    };\n    const c = t ? n : C;\n    s && !o && c(e);\n    return e;\n  };\n  const onHostMutation = (t, n, o) => {\n    const s = {\n      yt: n\n    };\n    if (n && !o) {\n      C(s);\n    } else if (!b) {\n      updateViewportAttrsFromHost(t);\n    }\n    return s;\n  };\n  const [H, z] = p || !m ? createTrinsicObserver(v, onTrinsicChanged) : [];\n  const I = !b && createSizeObserver(v, onSizeChanged, {\n    st: true,\n    ot: true\n  });\n  const [A, E] = createDOMObserver(v, false, onHostMutation, {\n    K: _,\n    Y: concat(_, u)\n  });\n  const T = b && S && new S((t => {\n    const n = t[t.length - 1].contentRect;\n    onSizeChanged({\n      ct: true,\n      st: domRectAppeared(n, r)\n    });\n    r = n;\n  }));\n  return [ () => {\n    updateViewportAttrsFromHost();\n    T && T.observe(v);\n    const t = I && I();\n    const n = H && H();\n    const o = A();\n    const s = $((t => {\n      const [, n] = x();\n      C({\n        St: t,\n        wt: n\n      });\n    }));\n    return () => {\n      T && T.disconnect();\n      t && t();\n      n && n();\n      c && c();\n      o();\n      s();\n    };\n  }, ({$t: t, xt: n, Ot: r}) => {\n    const l = {};\n    const [u] = t(\"update.ignoreMutation\");\n    const [f, _] = t(\"update.attributes\");\n    const [d, v] = t(\"update.elementEvents\");\n    const [g, w] = t(\"update.debounce\");\n    const y = v || _;\n    const S = n || r;\n    const ignoreMutationFromOptions = t => isFunction(u) && u(t);\n    if (y) {\n      e && e();\n      c && c();\n      const [t, n] = createDOMObserver(p || h, true, onContentMutation, {\n        Y: concat(O, f || []),\n        J: d,\n        Z: i,\n        nt: (t, n) => {\n          const {target: o, attributeName: s} = t;\n          const e = !n && s && !b ? liesBetween(o, i, a) : false;\n          return e || !!closest(o, `.${yt}`) || !!ignoreMutationFromOptions(t);\n        }\n      });\n      c = t();\n      e = n;\n    }\n    if (w) {\n      C.m();\n      if (isArray(g)) {\n        const t = g[0];\n        const n = g[1];\n        o = isNumber(t) && t;\n        s = isNumber(n) && n;\n      } else if (isNumber(g)) {\n        o = g;\n        s = false;\n      } else {\n        o = false;\n        s = false;\n      }\n    }\n    if (S) {\n      const t = E();\n      const n = z && z();\n      const o = e && e();\n      t && assignDeep(l, onHostMutation(t[0], t[1], S));\n      n && assignDeep(l, onTrinsicChanged(n[0], S));\n      o && assignDeep(l, onContentMutation(o[0], S));\n    }\n    return l;\n  }, d ];\n};\n\nconst capNumber = (t, n, o) => l(t, i(n, o));\n\nconst getScrollbarHandleOffsetPercent = (t, n, o) => {\n  const s = a(n);\n  const [e, c] = getRTLCompatibleScrollBounds(s, o);\n  const r = (c - t) / c;\n  const l = t / e;\n  const i = t / c;\n  const u = o ? o.n ? r : o.i ? l : i : i;\n  return capNumber(0, 1, u);\n};\n\nconst getScrollbarHandleLengthRatio = (t, n, o) => {\n  if (o) {\n    const t = n ? k : M;\n    const {Ct: s, Ht: e} = o;\n    const c = getBoundingClientRect(e)[t];\n    const r = getBoundingClientRect(s)[t];\n    return capNumber(0, 1, c / r);\n  }\n  const s = n ? \"x\" : \"y\";\n  const {zt: e, It: c} = t;\n  const r = c[s];\n  const l = e[s];\n  return capNumber(0, 1, r / (r + l));\n};\n\nconst getScrollbarHandleOffsetRatio = (t, n, o, s) => {\n  const e = getScrollbarHandleLengthRatio(t, s, n);\n  return 1 / e * (1 - e) * o;\n};\n\nconst createScrollbarsSetupElements = (t, n, o, s) => {\n  const {N: e, T: c} = getEnvironment();\n  const {scrollbars: r} = e();\n  const {slot: l} = r;\n  const {At: i, it: a, ut: u, Et: f, Tt: _, Dt: v, dt: h} = n;\n  const {scrollbars: p} = f ? {} : t;\n  const {slot: g} = p || {};\n  const b = new Map;\n  const initScrollTimeline = t => m && new m({\n    source: _,\n    axis: t\n  });\n  const w = initScrollTimeline(\"x\");\n  const y = initScrollTimeline(\"y\");\n  const S = dynamicInitializationElement([ i, a, u ], (() => h && v ? i : a), l, g);\n  const doRefreshScrollbarOffset = t => h && !v && parent(t) === u;\n  const getScrollbarOffsetKeyframes = (t, n, o) => {\n    const s = .5 * (o ? 1 : -1);\n    const e = n && o ? -1 : 1;\n    return {\n      transform: [ getTrasformTranslateValue(numberToCssPx(0 + s), n), getTrasformTranslateValue(numberToCssPx(t * e + s), n) ]\n    };\n  };\n  const addDirectionRTLKeyframes = (t, n) => assignDeep(t, n ? {\n    clear: [ \"left\" ]\n  } : {});\n  const cancelElementAnimations = t => {\n    b.forEach(((n, o) => {\n      const s = t ? inArray(createOrKeepArray(t), o) : true;\n      if (s) {\n        each(n || [], (t => {\n          t && t.cancel();\n        }));\n        b.delete(o);\n      }\n    }));\n  };\n  const setElementAnimation = (t, n, o, s) => {\n    const e = b.get(t) || [];\n    const c = e.find((t => t && t.timeline === n));\n    if (c) {\n      c.effect = new KeyframeEffect(t, o, {\n        composite: s\n      });\n    } else {\n      b.set(t, concat(e, [ t.animate(o, {\n        timeline: n,\n        composite: s\n      }) ]));\n    }\n  };\n  const scrollbarStructureAddRemoveClass = (t, n, o) => {\n    const s = o ? addClass : removeClass;\n    each(t, (t => {\n      s(t.kt, n);\n    }));\n  };\n  const scrollbarStyle = (t, n) => {\n    each(t, (t => {\n      const [o, s] = n(t);\n      setStyles(o, s);\n    }));\n  };\n  const scrollbarStructureRefreshHandleLength = (t, n) => {\n    scrollbarStyle(t, (t => {\n      const {Ht: s} = t;\n      return [ s, {\n        [n ? k : M]: ratioToCssPercent(getScrollbarHandleLengthRatio(o, n))\n      } ];\n    }));\n  };\n  const scrollbarStructureRefreshHandleOffset = (t, n) => {\n    if (w && y) {\n      each(t, (t => {\n        const {kt: s, Ht: e} = t;\n        const c = bind(getScrollbarHandleOffsetRatio, o, t);\n        const r = n && getDirectionIsRTL(s);\n        const l = c(r ? 1 : 0, n);\n        const i = c(r ? 0 : 1, n);\n        setElementAnimation(e, n ? w : y, addDirectionRTLKeyframes({\n          transform: [ getTrasformTranslateValue(ratioToCssPercent(l), n), getTrasformTranslateValue(ratioToCssPercent(i), n) ]\n        }, r));\n      }));\n    } else {\n      scrollbarStyle(t, (t => {\n        const {Ht: s, kt: e} = t;\n        const {U: c} = getEnvironment();\n        const r = n ? \"x\" : \"y\";\n        const {zt: l} = o;\n        const i = getDirectionIsRTL(e);\n        const a = getScrollbarHandleOffsetRatio(o, t, getScrollbarHandleOffsetPercent(getElmentScroll(_)[r], l[r], n && i && c), n);\n        return [ s, {\n          transform: getTrasformTranslateValue(ratioToCssPercent(a), n)\n        } ];\n      }));\n    }\n  };\n  const styleScrollbarPosition = t => {\n    const {kt: n} = t;\n    const o = doRefreshScrollbarOffset(n) && n;\n    const {x: s, y: e} = getElmentScroll(_);\n    return [ o, {\n      transform: o ? getTrasformTranslateValue({\n        x: numberToCssPx(s),\n        y: numberToCssPx(e)\n      }) : \"\"\n    } ];\n  };\n  const $ = [];\n  const x = [];\n  const O = [];\n  const scrollbarsAddRemoveClass = (t, n, o) => {\n    const s = isBoolean(o);\n    const e = s ? o : true;\n    const c = s ? !o : true;\n    e && scrollbarStructureAddRemoveClass(x, t, n);\n    c && scrollbarStructureAddRemoveClass(O, t, n);\n  };\n  const refreshScrollbarsHandleLength = () => {\n    scrollbarStructureRefreshHandleLength(x, true);\n    scrollbarStructureRefreshHandleLength(O);\n  };\n  const refreshScrollbarsHandleOffset = () => {\n    scrollbarStructureRefreshHandleOffset(x, true);\n    scrollbarStructureRefreshHandleOffset(O);\n  };\n  const refreshScrollbarsScrollbarOffset = () => {\n    if (h) {\n      if (w && y) {\n        const {zt: t} = o;\n        const n = !!x.find((({kt: t}) => getDirectionIsRTL(t)));\n        const setScrollbarElementAnimation = (t, o, s, e, c) => setElementAnimation(t, o, addDirectionRTLKeyframes(getScrollbarOffsetKeyframes(s, e, c), n), \"add\");\n        each(concat(O, x), (({kt: o}) => {\n          if (doRefreshScrollbarOffset(o)) {\n            setScrollbarElementAnimation(o, w, t.x, true, n);\n            setScrollbarElementAnimation(o, y, t.y);\n          } else {\n            cancelElementAnimations(o);\n          }\n        }));\n      } else {\n        scrollbarStyle(x, styleScrollbarPosition);\n        scrollbarStyle(O, styleScrollbarPosition);\n      }\n    }\n  };\n  const generateScrollbarDOM = t => {\n    const n = t ? mt : $t;\n    const o = t ? x : O;\n    const e = isEmptyArray(o) ? zt : \"\";\n    const r = createDiv(`${yt} ${n} ${e}`);\n    const l = createDiv(xt);\n    const i = createDiv(Ot);\n    const a = {\n      kt: r,\n      Ct: l,\n      Ht: i\n    };\n    if (!c) {\n      addClass(r, bt);\n    }\n    push(o, a);\n    push($, [ appendChildren(r, l), appendChildren(l, i), bind(removeElements, r), cancelElementAnimations, s(a, scrollbarsAddRemoveClass, scrollbarStructureRefreshHandleOffset, t) ]);\n    return a;\n  };\n  const C = bind(generateScrollbarDOM, true);\n  const H = bind(generateScrollbarDOM, false);\n  const appendElements = () => {\n    appendChildren(S, x[0].kt);\n    appendChildren(S, O[0].kt);\n    d((() => {\n      scrollbarsAddRemoveClass(zt);\n    }), 300);\n    return bind(runEachAndClear, $);\n  };\n  C();\n  H();\n  return [ {\n    Mt: refreshScrollbarsHandleLength,\n    Rt: refreshScrollbarsHandleOffset,\n    Pt: refreshScrollbarsScrollbarOffset,\n    Lt: scrollbarsAddRemoveClass,\n    Vt: {\n      V: w,\n      Ut: x,\n      Bt: C,\n      jt: bind(scrollbarStyle, x)\n    },\n    Nt: {\n      V: y,\n      Ut: O,\n      Bt: H,\n      jt: bind(scrollbarStyle, O)\n    }\n  }, appendElements ];\n};\n\nconst createScrollbarsSetupEvents = (t, n, o) => {\n  const {it: s, Tt: e, Gt: c} = n;\n  return (n, r, l, i) => {\n    const {kt: u, Ct: f, Ht: _} = n;\n    const [d, v] = selfClearTimeout(333);\n    const [h, p] = selfClearTimeout();\n    const g = bind(l, [ n ], i);\n    const b = !!e.scrollBy;\n    const w = `client${i ? \"X\" : \"Y\"}`;\n    const y = i ? k : M;\n    const S = i ? \"left\" : \"top\";\n    const m = i ? \"w\" : \"h\";\n    const $ = i ? \"x\" : \"y\";\n    const isAffectingTransition = t => t.propertyName.indexOf(y) > -1;\n    const createInteractiveScrollEvents = () => {\n      const n = \"pointerup pointerleave pointercancel lostpointercapture\";\n      const createRelativeHandleMove = (t, n) => s => {\n        const {zt: c} = o;\n        const r = L(f)[m] - L(_)[m];\n        const l = n * s / r;\n        const i = l * c[$];\n        scrollElementTo(e, {\n          [$]: t + i\n        });\n      };\n      return addEventListener(f, \"pointerdown\", (o => {\n        const r = closest(o.target, `.${Ot}`) === _;\n        const l = r ? _ : f;\n        const i = t.scrollbars;\n        const {button: u, isPrimary: d, pointerType: v} = o;\n        const {pointers: h} = i;\n        const p = u === 0 && d && i[r ? \"dragScroll\" : \"clickScroll\"] && (h || []).includes(v);\n        if (p) {\n          const t = !r && o.shiftKey;\n          const i = bind(getBoundingClientRect, _);\n          const u = bind(getBoundingClientRect, f);\n          const getHandleOffset = (t, n) => (t || i())[S] - (n || u())[S];\n          const d = a(getBoundingClientRect(e)[y]) / L(e)[m] || 1;\n          const v = createRelativeHandleMove(getElmentScroll(e)[$] || 0, 1 / d);\n          const h = o[w];\n          const p = i();\n          const g = u();\n          const b = p[y];\n          const x = getHandleOffset(p, g) + b / 2;\n          const O = h - g[S];\n          const C = r ? 0 : O - x;\n          const releasePointerCapture = t => {\n            runEachAndClear(H);\n            l.releasePointerCapture(t.pointerId);\n          };\n          const H = [ bind(attrClass, s, J, ot), addEventListener(c, n, releasePointerCapture), addEventListener(c, \"selectstart\", (t => preventDefault(t)), {\n            $: false\n          }), addEventListener(f, n, releasePointerCapture), addEventListener(f, \"pointermove\", (n => {\n            const o = n[w] - h;\n            if (r || t) {\n              v(C + o);\n            }\n          })) ];\n          attrClass(s, J, ot, true);\n          l.setPointerCapture(o.pointerId);\n          if (t) {\n            v(C);\n          } else if (!r) {\n            const t = getStaticPluginModuleInstance(Gt);\n            t && push(H, t(v, getHandleOffset, C, b, O));\n          }\n        }\n      }));\n    };\n    let x = true;\n    return bind(runEachAndClear, [ addEventListener(u, \"pointerenter\", (() => {\n      r(It, true);\n    })), addEventListener(u, \"pointerleave pointercancel\", (() => {\n      r(It, false);\n    })), addEventListener(u, \"wheel\", (t => {\n      const {deltaX: n, deltaY: o, deltaMode: c} = t;\n      if (b && x && c === 0 && parent(u) === s) {\n        e.scrollBy({\n          left: n,\n          top: o,\n          behavior: \"smooth\"\n        });\n      }\n      x = false;\n      r(Dt, true);\n      d((() => {\n        x = true;\n        r(Dt);\n      }));\n      preventDefault(t);\n    }), {\n      $: false,\n      O: true\n    }), addEventListener(_, \"transitionstart\", (t => {\n      if (isAffectingTransition(t)) {\n        const animateHandleOffset = () => {\n          g();\n          h(animateHandleOffset);\n        };\n        animateHandleOffset();\n      }\n    })), addEventListener(_, \"transitionend transitioncancel\", (t => {\n      if (isAffectingTransition(t)) {\n        p();\n        g();\n      }\n    })), addEventListener(u, \"mousedown\", bind(addEventListener, c, \"click\", stopPropagation, {\n      C: true,\n      O: true\n    }), {\n      O: true\n    }), createInteractiveScrollEvents(), v, p ]);\n  };\n};\n\nconst createScrollbarsSetup = (t, n, o, s, e, c) => {\n  let r;\n  let l;\n  let i;\n  let a;\n  let u;\n  let f = noop;\n  let _ = 0;\n  const [d, v] = selfClearTimeout();\n  const [h, p] = selfClearTimeout();\n  const [g, b] = selfClearTimeout(100);\n  const [w, y] = selfClearTimeout(100);\n  const [S, m] = selfClearTimeout(100);\n  const [$, x] = selfClearTimeout((() => _));\n  const [O, C] = createScrollbarsSetupElements(t, e, s, createScrollbarsSetupEvents(n, e, s));\n  const {it: H, qt: z, Dt: I} = e;\n  const {Lt: A, Mt: E, Rt: T, Pt: D} = O;\n  const manageAutoHideSuspension = t => {\n    A(Et, t, true);\n    A(Et, t, false);\n  };\n  const manageScrollbarsAutoHide = (t, n) => {\n    x();\n    if (t) {\n      A(Tt);\n    } else {\n      const t = bind(A, Tt, true);\n      if (_ > 0 && !n) {\n        $(t);\n      } else {\n        t();\n      }\n    }\n  };\n  const isHoverablePointerType = t => t.pointerType === \"mouse\";\n  const onHostMouseEnter = t => {\n    if (isHoverablePointerType(t)) {\n      a = l;\n      a && manageScrollbarsAutoHide(true);\n    }\n  };\n  const k = [ b, x, y, m, p, v, () => f(), addEventListener(H, \"pointerover\", onHostMouseEnter, {\n    C: true\n  }), addEventListener(H, \"pointerenter\", onHostMouseEnter), addEventListener(H, \"pointerleave\", (t => {\n    if (isHoverablePointerType(t)) {\n      a = false;\n      l && manageScrollbarsAutoHide(false);\n    }\n  })), addEventListener(H, \"pointermove\", (t => {\n    isHoverablePointerType(t) && r && d((() => {\n      b();\n      manageScrollbarsAutoHide(true);\n      w((() => {\n        r && manageScrollbarsAutoHide(false);\n      }));\n    }));\n  })), addEventListener(z, \"scroll\", (t => {\n    h((() => {\n      T();\n      i && manageScrollbarsAutoHide(true);\n      g((() => {\n        i && !a && manageScrollbarsAutoHide(false);\n      }));\n    }));\n    c(t);\n    D();\n  })) ];\n  return [ () => bind(runEachAndClear, push(k, C())), ({$t: t, Ot: n, Ft: e, Wt: c}) => {\n    const {Xt: a, Yt: d, Kt: v} = c || {};\n    const {bt: h, st: p} = e || {};\n    const {lt: g} = o;\n    const {A: b} = getEnvironment();\n    const {zt: w, Jt: y, Zt: m} = s;\n    const [$, x] = t(\"showNativeOverlaidScrollbars\");\n    const [O, C] = t(\"scrollbars.theme\");\n    const [H, k] = t(\"scrollbars.visibility\");\n    const [M, R] = t(\"scrollbars.autoHide\");\n    const [P, L] = t(\"scrollbars.autoHideSuspend\");\n    const [V] = t(\"scrollbars.autoHideDelay\");\n    const [U, B] = t(\"scrollbars.dragScroll\");\n    const [j, N] = t(\"scrollbars.clickScroll\");\n    const G = p && !n;\n    const q = m.x || m.y;\n    const F = a || d || h || n;\n    const W = v || k;\n    const X = $ && b.x && b.y;\n    const setScrollbarVisibility = (t, n) => {\n      const o = H === \"visible\" || H === \"auto\" && t === \"scroll\";\n      A(Ct, o, n);\n      return o;\n    };\n    _ = V;\n    if (G) {\n      if (P && q) {\n        manageAutoHideSuspension(false);\n        f();\n        S((() => {\n          f = addEventListener(z, \"scroll\", bind(manageAutoHideSuspension, true), {\n            C: true\n          });\n        }));\n      } else {\n        manageAutoHideSuspension(true);\n      }\n    }\n    if (x) {\n      A(wt, X);\n    }\n    if (C) {\n      A(u);\n      A(O, true);\n      u = O;\n    }\n    if (L && !P) {\n      manageAutoHideSuspension(true);\n    }\n    if (R) {\n      r = M === \"move\";\n      l = M === \"leave\";\n      i = M !== \"never\";\n      manageScrollbarsAutoHide(!i, true);\n    }\n    if (B) {\n      A(Mt, U);\n    }\n    if (N) {\n      A(kt, j);\n    }\n    if (W) {\n      const t = setScrollbarVisibility(y.x, true);\n      const n = setScrollbarVisibility(y.y, false);\n      const o = t && n;\n      A(Ht, !o);\n    }\n    if (F) {\n      E();\n      T();\n      D();\n      A(At, !w.x, true);\n      A(At, !w.y, false);\n      A(St, g && !I);\n    }\n  }, {}, O ];\n};\n\nconst createStructureSetupElements = t => {\n  const n = getEnvironment();\n  const {N: o, I: s} = n;\n  const e = getStaticPluginModuleInstance(jt);\n  const c = e && e.H;\n  const {elements: r} = o();\n  const {host: l, padding: i, viewport: a, content: u} = r;\n  const f = isHTMLElement(t);\n  const _ = f ? {} : t;\n  const {elements: d} = _;\n  const {host: v, padding: h, viewport: p, content: g} = d || {};\n  const b = f ? t : _.target;\n  const w = is(b, \"textarea\");\n  const y = b.ownerDocument;\n  const S = y.documentElement;\n  const m = b === y.body;\n  const $ = y.defaultView;\n  const x = bind(staticInitializationElement, [ b ]);\n  const O = bind(dynamicInitializationElement, [ b ]);\n  const C = bind(resolveInitialization, [ b ]);\n  const H = bind(createDiv, \"\");\n  const z = bind(x, H, a);\n  const I = bind(O, H, u);\n  const A = z(p);\n  const E = A === b;\n  const T = E && m;\n  const D = !E && I(g);\n  const k = !E && isHTMLElement(A) && A === D;\n  const M = k && !!C(u);\n  const R = M ? z() : A;\n  const P = M ? D : I();\n  const L = k ? R : A;\n  const V = T ? S : L;\n  const U = w ? x(H, l, v) : b;\n  const B = T ? V : U;\n  const j = k ? P : D;\n  const N = y.activeElement;\n  const G = !E && $.top === $ && N === b;\n  const q = {\n    At: b,\n    it: B,\n    ut: V,\n    Qt: !E && O(H, i, h),\n    ft: j,\n    tn: !E && !s && c && c(n),\n    Tt: T ? S : V,\n    qt: T ? y : V,\n    nn: $,\n    Gt: y,\n    _t: w,\n    Dt: m,\n    Et: f,\n    dt: E,\n    sn: k,\n    vt: (t, n) => hasAttrClass(V, E ? J : et, E ? n : t),\n    ht: (t, n, o) => attrClass(V, E ? J : et, E ? n : t, o)\n  };\n  const F = keys(q).reduce(((t, n) => {\n    const o = q[n];\n    return push(t, o && isHTMLElement(o) && !parent(o) ? o : false);\n  }), []);\n  const elementIsGenerated = t => t ? inArray(F, t) : null;\n  const {At: W, it: X, Qt: tt, ut: nt, ft: ot, tn: st} = q;\n  const ct = [ () => {\n    removeAttr(X, J);\n    removeAttr(X, K);\n    removeAttr(W, K);\n    if (m) {\n      removeAttr(S, J);\n      removeAttr(S, K);\n    }\n  } ];\n  const lt = w && elementIsGenerated(X);\n  let at = w ? W : contents([ ot, nt, tt, X, W ].find((t => elementIsGenerated(t) === false)));\n  const ft = T ? W : ot || nt;\n  const _t = bind(runEachAndClear, ct);\n  const appendElements = () => {\n    attr(X, J, E ? \"viewport\" : \"host\");\n    attr(tt, it, \"\");\n    attr(ot, ut, \"\");\n    if (!E) {\n      attr(nt, et, \"\");\n    }\n    const t = m && !E ? addClass(parent(b), Y) : noop;\n    const unwrap = t => {\n      appendChildren(parent(t), contents(t));\n      removeElements(t);\n    };\n    if (lt) {\n      insertAfter(W, X);\n      push(ct, (() => {\n        insertAfter(X, W);\n        removeElements(X);\n      }));\n    }\n    appendChildren(ft, at);\n    appendChildren(X, tt);\n    appendChildren(tt || X, !E && nt);\n    appendChildren(nt, ot);\n    push(ct, (() => {\n      t();\n      removeAttr(tt, it);\n      removeAttr(ot, ut);\n      removeAttr(nt, Z);\n      removeAttr(nt, Q);\n      removeAttr(nt, et);\n      elementIsGenerated(ot) && unwrap(ot);\n      elementIsGenerated(nt) && unwrap(nt);\n      elementIsGenerated(tt) && unwrap(tt);\n    }));\n    if (s && !E) {\n      attrClass(nt, et, rt, true);\n      push(ct, bind(removeAttr, nt, et));\n    }\n    if (st) {\n      insertBefore(nt, st);\n      push(ct, bind(removeElements, st));\n    }\n    if (G) {\n      const t = \"tabindex\";\n      const n = attr(nt, t);\n      attr(nt, t, \"-1\");\n      nt.focus();\n      const revertViewportTabIndex = () => n ? attr(nt, t, n) : removeAttr(nt, t);\n      const o = addEventListener(y, \"pointerdown keydown\", (() => {\n        revertViewportTabIndex();\n        o();\n      }));\n      push(ct, [ revertViewportTabIndex, o ]);\n    } else if (N && N.focus) {\n      N.focus();\n    }\n    at = 0;\n    return _t;\n  };\n  return [ q, appendElements, _t ];\n};\n\nconst createTrinsicUpdateSegment = ({ft: t}) => ({Ft: n, en: o, Ot: s}) => {\n  const {B: e} = getEnvironment();\n  const {gt: c} = n || {};\n  const {rt: r} = o;\n  const l = (t || !e) && (c || s);\n  if (l) {\n    setStyles(t, {\n      [M]: r ? \"\" : \"100%\"\n    });\n  }\n};\n\nconst createPaddingUpdateSegment = ({it: t, Qt: n, ut: o, dt: s}, e) => {\n  const [c, r] = createCache({\n    u: equalTRBL,\n    o: topRightBottomLeft()\n  }, bind(topRightBottomLeft, t, \"padding\", \"\"));\n  return ({$t: t, Ft: l, en: i, Ot: a}) => {\n    let [u, f] = r(a);\n    const {I: _, B: d} = getEnvironment();\n    const {ct: v, wt: h, bt: p} = l || {};\n    const {lt: g} = i;\n    const [b, w] = t(\"paddingAbsolute\");\n    const y = a || !d && h;\n    if (v || f || y) {\n      [u, f] = c(a);\n    }\n    const S = !s && (w || p || f);\n    if (S) {\n      const t = !b || !n && !_;\n      const s = u.r + u.l;\n      const c = u.t + u.b;\n      const r = {\n        [A]: t && !g ? -s : 0,\n        [E]: t ? -c : 0,\n        [I]: t && g ? -s : 0,\n        top: t ? -u.t : 0,\n        right: t ? g ? -u.r : \"auto\" : 0,\n        left: t ? g ? \"auto\" : -u.l : 0,\n        [k]: t ? `calc(100% + ${s}px)` : \"\"\n      };\n      const l = {\n        [O]: t ? u.t : 0,\n        [C]: t ? u.r : 0,\n        [z]: t ? u.b : 0,\n        [H]: t ? u.l : 0\n      };\n      setStyles(n || o, r);\n      setStyles(o, l);\n      assignDeep(e, {\n        Qt: u,\n        cn: !t,\n        k: n ? l : assignDeep({}, r, l)\n      });\n    }\n    return {\n      rn: S\n    };\n  };\n};\n\nconst createOverflowUpdateSegment = ({it: t, Qt: n, ut: o, tn: s, dt: e, ht: c, Dt: i, nn: a}, u) => {\n  const f = bind(l, 0);\n  const _ = \"visible\";\n  const d = 42;\n  const v = {\n    u: equalWH,\n    o: {\n      w: 0,\n      h: 0\n    }\n  };\n  const h = {\n    u: equalXY,\n    o: {\n      x: R,\n      y: R\n    }\n  };\n  const getOverflowAmount = (t, n) => {\n    const o = r.devicePixelRatio % 1 !== 0 ? 1 : 0;\n    const s = {\n      w: f(t.w - n.w),\n      h: f(t.h - n.h)\n    };\n    return {\n      w: s.w > o ? s.w : 0,\n      h: s.h > o ? s.h : 0\n    };\n  };\n  const overflowIsVisible = t => t.indexOf(_) === 0;\n  const {L: p, B: g, I: b, A: w} = getEnvironment();\n  const y = getStaticPluginModuleInstance(jt);\n  const S = !e && !b && (w.x || w.y);\n  const m = i && e;\n  const [$, x] = createCache(v, bind(fractionalSize, o));\n  const [O, P] = createCache(v, bind(U, o));\n  const [L, B] = createCache(v);\n  const [j, N] = createCache(v);\n  const [G] = createCache(h);\n  const fixFlexboxGlue = (n, s) => {\n    setStyles(o, {\n      [M]: \"\"\n    });\n    if (s) {\n      const {cn: s, Qt: e} = u;\n      const {ln: c, M: r} = n;\n      const l = fractionalSize(t);\n      const i = V(t);\n      const a = getStyles(o, \"boxSizing\") === \"content-box\";\n      const f = s || a ? e.b + e.t : 0;\n      const _ = !(w.x && a);\n      setStyles(o, {\n        [M]: i.h + l.h + (c.x && _ ? r.x : 0) - f\n      });\n    }\n  };\n  const getViewportOverflowState = (t, n) => {\n    const s = !b && !t ? d : 0;\n    const getStatePerAxis = (t, e, c) => {\n      const r = getStyles(o, t);\n      const l = n ? n[t] : r;\n      const i = l === \"scroll\";\n      const a = e ? s : c;\n      const u = i && !b ? a : 0;\n      const f = e && !!s;\n      return [ r, i, u, f ];\n    };\n    const [e, c, r, l] = getStatePerAxis(T, w.x, p.x);\n    const [i, a, u, f] = getStatePerAxis(D, w.y, p.y);\n    return {\n      Jt: {\n        x: e,\n        y: i\n      },\n      ln: {\n        x: c,\n        y: a\n      },\n      M: {\n        x: r,\n        y: u\n      },\n      R: {\n        x: l,\n        y: f\n      }\n    };\n  };\n  const setViewportOverflowState = (t, n, o, s) => {\n    const setAxisOverflowStyle = (t, n) => {\n      const o = overflowIsVisible(t);\n      const s = n && o && t.replace(`${_}-`, \"\") || \"\";\n      return [ n && !o ? t : \"\", overflowIsVisible(s) ? \"hidden\" : s ];\n    };\n    const [e, c] = setAxisOverflowStyle(o.x, n.x);\n    const [r, l] = setAxisOverflowStyle(o.y, n.y);\n    s[T] = c && r ? c : e;\n    s[D] = l && e ? l : r;\n    return getViewportOverflowState(t, s);\n  };\n  const hideNativeScrollbars = (t, n, o, s) => {\n    const {M: e, R: c} = t;\n    const {x: r, y: l} = c;\n    const {x: i, y: a} = e;\n    const {k: f} = u;\n    const _ = n ? I : A;\n    const d = n ? H : C;\n    const v = f[_];\n    const h = f[E];\n    const p = f[d];\n    const g = f[z];\n    s[k] = `calc(100% + ${a + v * -1}px)`;\n    s[_] = -a + v;\n    s[E] = -i + h;\n    if (o) {\n      s[d] = p + (l ? a : 0);\n      s[z] = g + (r ? i : 0);\n    }\n  };\n  const [q, F] = y ? y.D(S, g, o, s, u, getViewportOverflowState, hideNativeScrollbars) : [ () => S, () => [ noop ] ];\n  return ({$t: s, Ft: r, en: i, Ot: _}, {rn: d}) => {\n    const {ct: v, yt: h, wt: p, gt: y, bt: S, St: C} = r || {};\n    const {rt: H, lt: z} = i;\n    const [M, R] = s(\"showNativeOverlaidScrollbars\");\n    const [W, X] = s(\"overflow\");\n    const Y = M && w.x && w.y;\n    const K = !e && !g && (v || p || h || R || y);\n    const ot = v || d || p || S || C || R;\n    const st = overflowIsVisible(W.x);\n    const ct = overflowIsVisible(W.y);\n    const ut = st || ct;\n    let ft = x(_);\n    let _t = P(_);\n    let dt = B(_);\n    let vt = N(_);\n    let ht;\n    if (R && b) {\n      c(rt, nt, !Y);\n    }\n    if (K) {\n      ht = getViewportOverflowState(Y);\n      fixFlexboxGlue(ht, H);\n    }\n    if (ot) {\n      if (ut) {\n        c(lt, tt, false);\n      }\n      const [t, n] = F(Y, z, ht);\n      const [s, e] = ft = $(_);\n      const [r, i] = _t = O(_);\n      const u = V(o);\n      let d = r;\n      let v = u;\n      t();\n      if ((i || e || R) && n && !Y && q(n, r, s, z)) {\n        v = V(o);\n        d = U(o);\n      }\n      const h = windowSize(a);\n      const p = {\n        w: f(l(r.w, d.w) + s.w),\n        h: f(l(r.h, d.h) + s.h)\n      };\n      const g = {\n        w: f((m ? h.w : v.w + f(u.w - r.w)) + s.w),\n        h: f((m ? h.h : v.h + f(u.h - r.h)) + s.h)\n      };\n      vt = j(g);\n      dt = L(getOverflowAmount(p, g), _);\n    }\n    const [pt, gt] = vt;\n    const [bt, wt] = dt;\n    const [yt, St] = _t;\n    const [mt, $t] = ft;\n    const xt = {\n      x: bt.w > 0,\n      y: bt.h > 0\n    };\n    const Ot = st && ct && (xt.x || xt.y) || st && xt.x && !xt.y || ct && xt.y && !xt.x;\n    const Ct = d || S || C || $t || St || gt || wt || X || R || K || ot;\n    if (Ct) {\n      const n = {\n        [A]: 0,\n        [E]: 0,\n        [I]: 0,\n        [k]: \"\",\n        [T]: \"\",\n        [D]: \"\"\n      };\n      const s = setViewportOverflowState(Y, xt, W, n);\n      const c = q(s, yt, mt, z);\n      if (!e) {\n        hideNativeScrollbars(s, z, c, n);\n      }\n      if (K) {\n        fixFlexboxGlue(s, H);\n      }\n      if (e) {\n        attr(t, Z, n[T]);\n        attr(t, Q, n[D]);\n      } else {\n        setStyles(o, n);\n      }\n    }\n    attrClass(t, J, tt, Ot);\n    attrClass(n, it, at, Ot);\n    if (!e) {\n      attrClass(o, et, lt, ut);\n    }\n    const [Ht, zt] = G(getViewportOverflowState(Y).Jt);\n    assignDeep(u, {\n      Jt: Ht,\n      It: {\n        x: pt.w,\n        y: pt.h\n      },\n      zt: {\n        x: bt.w,\n        y: bt.h\n      },\n      Zt: xt\n    });\n    return {\n      Kt: zt,\n      Xt: gt,\n      Yt: wt\n    };\n  };\n};\n\nconst createStructureSetup = t => {\n  const [n, o, s] = createStructureSetupElements(t);\n  const e = {\n    Qt: {\n      t: 0,\n      r: 0,\n      b: 0,\n      l: 0\n    },\n    cn: false,\n    k: {\n      [A]: 0,\n      [E]: 0,\n      [I]: 0,\n      [O]: 0,\n      [C]: 0,\n      [z]: 0,\n      [H]: 0\n    },\n    It: {\n      x: 0,\n      y: 0\n    },\n    zt: {\n      x: 0,\n      y: 0\n    },\n    Jt: {\n      x: R,\n      y: R\n    },\n    Zt: {\n      x: false,\n      y: false\n    }\n  };\n  const {At: c, ut: r, ht: l, dt: i} = n;\n  const {I: a, A: u, B: f} = getEnvironment();\n  const _ = !a && (u.x || u.y);\n  const d = [ createTrinsicUpdateSegment(n), createPaddingUpdateSegment(n, e), createOverflowUpdateSegment(n, e) ];\n  return [ o, t => {\n    const n = {};\n    const o = _ || !f;\n    const s = o && getElmentScroll(r);\n    l(\"\", st, true);\n    each(d, (o => {\n      assignDeep(n, o(t, n) || {});\n    }));\n    l(\"\", st);\n    scrollElementTo(r, s);\n    !i && scrollElementTo(c, 0);\n    return n;\n  }, e, n, s ];\n};\n\nconst createSetups = (t, n, o, s) => {\n  const [e, c, r, l, i] = createStructureSetup(t);\n  const [a, u, f] = createObserversSetup(l, (t => {\n    update({}, t);\n  }));\n  const [_, d, , v] = createScrollbarsSetup(t, n, f, r, l, s);\n  const updateHintsAreTruthy = t => keys(t).some((n => !!t[n]));\n  const update = (t, s) => {\n    const {an: e, Ot: r, xt: l, un: i} = t;\n    const a = e || {};\n    const _ = !!r;\n    const v = {\n      $t: createOptionCheck(n, a, _),\n      an: a,\n      Ot: _\n    };\n    if (i) {\n      d(v);\n      return false;\n    }\n    const h = s || u(assignDeep({}, v, {\n      xt: l\n    }));\n    const p = c(assignDeep({}, v, {\n      en: f,\n      Ft: h\n    }));\n    d(assignDeep({}, v, {\n      Ft: h,\n      Wt: p\n    }));\n    const g = updateHintsAreTruthy(h);\n    const b = updateHintsAreTruthy(p);\n    const w = g || b || !isEmptyObject(a) || _;\n    w && o(t, {\n      Ft: h,\n      Wt: p\n    });\n    return w;\n  };\n  return [ () => {\n    const {At: t, ut: n, Gt: o, Dt: s} = l;\n    const c = s ? o.documentElement : t;\n    const r = getElmentScroll(c);\n    const i = [ a(), e(), _() ];\n    scrollElementTo(n, r);\n    return bind(runEachAndClear, i);\n  }, update, () => ({\n    fn: f,\n    _n: r\n  }), {\n    dn: l,\n    vn: v\n  }, i ];\n};\n\nconst OverlayScrollbars = (t, n, o) => {\n  const {q: s} = getEnvironment();\n  const e = isHTMLElement(t);\n  const c = e ? t : t.target;\n  const r = getInstance(c);\n  if (n && !r) {\n    let r = false;\n    const l = [];\n    const i = {};\n    const validateOptions = t => {\n      const n = removeUndefinedProperties(t, true);\n      const o = getStaticPluginModuleInstance(Lt);\n      return o ? o(n, true) : n;\n    };\n    const a = assignDeep({}, s(), validateOptions(n));\n    const [u, f, _] = createEventListenerHub();\n    const [d, v, h] = createEventListenerHub(o);\n    const triggerEvent = (t, n) => {\n      h(t, n);\n      _(t, n);\n    };\n    const [p, g, b, w, y] = createSetups(t, a, (({an: t, Ot: n}, {Ft: o, Wt: s}) => {\n      const {ct: e, bt: c, gt: r, wt: l, yt: i, st: a} = o;\n      const {Xt: u, Yt: f, Kt: _} = s;\n      triggerEvent(\"updated\", [ S, {\n        updateHints: {\n          sizeChanged: !!e,\n          directionChanged: !!c,\n          heightIntrinsicChanged: !!r,\n          overflowEdgeChanged: !!u,\n          overflowAmountChanged: !!f,\n          overflowStyleChanged: !!_,\n          contentMutation: !!l,\n          hostMutation: !!i,\n          appear: !!a\n        },\n        changedOptions: t || {},\n        force: !!n\n      } ]);\n    }), (t => triggerEvent(\"scroll\", [ S, t ])));\n    const destroy = t => {\n      removeInstance(c);\n      runEachAndClear(l);\n      r = true;\n      triggerEvent(\"destroyed\", [ S, t ]);\n      f();\n      v();\n    };\n    const S = {\n      options(t, n) {\n        if (t) {\n          const o = n ? s() : {};\n          const e = getOptionsDiff(a, assignDeep(o, validateOptions(t)));\n          if (!isEmptyObject(e)) {\n            assignDeep(a, e);\n            g({\n              an: e\n            });\n          }\n        }\n        return assignDeep({}, a);\n      },\n      on: d,\n      off: (t, n) => {\n        t && n && v(t, n);\n      },\n      state() {\n        const {fn: t, _n: n} = b();\n        const {lt: o} = t;\n        const {It: s, zt: e, Jt: c, Zt: l, Qt: i, cn: a} = n;\n        return assignDeep({}, {\n          overflowEdge: s,\n          overflowAmount: e,\n          overflowStyle: c,\n          hasOverflow: l,\n          padding: i,\n          paddingAbsolute: a,\n          directionRTL: o,\n          destroyed: r\n        });\n      },\n      elements() {\n        const {At: t, it: n, Qt: o, ut: s, ft: e, Tt: c, qt: r} = w.dn;\n        const {Vt: l, Nt: i} = w.vn;\n        const translateScrollbarStructure = t => {\n          const {Ht: n, Ct: o, kt: s} = t;\n          return {\n            scrollbar: s,\n            track: o,\n            handle: n\n          };\n        };\n        const translateScrollbarsSetupElement = t => {\n          const {Ut: n, Bt: o} = t;\n          const s = translateScrollbarStructure(n[0]);\n          return assignDeep({}, s, {\n            clone: () => {\n              const t = translateScrollbarStructure(o());\n              g({\n                un: true\n              });\n              return t;\n            }\n          });\n        };\n        return assignDeep({}, {\n          target: t,\n          host: n,\n          padding: o || s,\n          viewport: s,\n          content: e || s,\n          scrollOffsetElement: c,\n          scrollEventElement: r,\n          scrollbarHorizontal: translateScrollbarsSetupElement(l),\n          scrollbarVertical: translateScrollbarsSetupElement(i)\n        });\n      },\n      update: t => g({\n        Ot: t,\n        xt: true\n      }),\n      destroy: bind(destroy, false),\n      plugin: t => i[keys(t)[0]]\n    };\n    push(l, [ y ]);\n    addInstance(c, S);\n    registerPluginModuleInstances(Rt, OverlayScrollbars, [ S, u, i ]);\n    if (cancelInitialization(w.dn.Dt, !e && t.cancel)) {\n      destroy(true);\n      return S;\n    }\n    push(l, p());\n    triggerEvent(\"initialized\", [ S ]);\n    S.update(true);\n    return S;\n  }\n  return r;\n};\n\nOverlayScrollbars.plugin = t => {\n  const n = isArray(t);\n  const o = n ? t : [ t ];\n  const s = o.map((t => registerPluginModuleInstances(t, OverlayScrollbars)[0]));\n  addPlugins(o);\n  return n ? s : s[0];\n};\n\nOverlayScrollbars.valid = t => {\n  const n = t && t.elements;\n  const o = isFunction(n) && n();\n  return isPlainObject(o) && !!getInstance(o.target);\n};\n\nOverlayScrollbars.env = () => {\n  const {L: t, A: n, I: o, U: s, B: e, T: c, V: r, W: l, X: i, N: a, G: u, q: f, F: _} = getEnvironment();\n  return assignDeep({}, {\n    scrollbarsSize: t,\n    scrollbarsOverlaid: n,\n    scrollbarsHiding: o,\n    rtlScrollBehavior: s,\n    flexboxGlue: e,\n    cssCustomProperties: c,\n    scrollTimeline: r,\n    staticDefaultInitialization: l,\n    staticDefaultOptions: i,\n    getDefaultInitialization: a,\n    setDefaultInitialization: u,\n    getDefaultOptions: f,\n    setDefaultOptions: _\n  });\n};\n\n\n//# sourceMappingURL=overlayscrollbars.mjs.map\n\n\n//# sourceURL=webpack://jakob1482.github.io/./node_modules/overlayscrollbars/overlayscrollbars.mjs?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			id: moduleId,
/******/ 			loaded: false,
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/node module decorator */
/******/ 	(() => {
/******/ 		__webpack_require__.nmd = (module) => {
/******/ 			module.paths = [];
/******/ 			if (!module.children) module.children = [];
/******/ 			return module;
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./_webpack/main.js");
/******/ 	
/******/ })()
;